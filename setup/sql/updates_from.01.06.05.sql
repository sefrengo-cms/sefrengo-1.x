# 27.12.2017 set new versionnumber - Sefrengo 1.6.6
UPDATE cms_values SET value = '01.06.06' WHERE group_name = 'cfg' AND key1 = 'version';

# update Kontaktformular and Pic Gallery
UPDATE `cms_mod` SET `idmod` = 12,`name` = 'Kontaktformular',`version` = '2.3',`cat` = 'Interaktion',`description` = 'Erstellung eines Kontaktformulars mit beliebig vielen Feldern. XHTML- konform ',`input` = '<?php\r\n$is_dev = false;\r\n\r\nif($is_dev) {\r\ninclude "C:/Programme/xampp/htdocs/sefrengo_dev/moddev/kontakformularIN.php";\r\n//include "C:/_server/www/_sefrengo/mod_dev/Kontaktformular/config.php";\r\n} else{\r\n\r\n\r\n//val ref\r\n//0-9 system reserved\r\n//0 Anzahl Formularelemente \r\n//1 switch Elemente hinzuf√?gen/ entfernen\r\n//\r\n//10-99 common config vars\r\n//10 configmode \r\n//11 subject in mail\r\n//12 emailadress empf√?nger manuell\r\n//13 fehler\r\n//14 erfolgreich verschickt\r\n//15 style fehler	\r\n//16 style best√?tigung\r\n//17 style label\r\n//18 style label fehler\r\n//19 style text\r\n//20 style textarea\r\n//21 style select\r\n//22 style checkbox\r\n//23 style submitbutton\r\n//24 beschriftung submitbutton\r\n//25 tpl gesamt\r\n//26 tpl elementcontainer nr1\r\n//27 Absenderadresse\r\n//28 Mit fieldset (ENFERNT)\r\n//29 Fieldset Beschriftung Legend (ENTFERNT)\r\n//31 style password (neu)\r\n//32 style optionMutiple (neu)\r\n//33 style radio (neu)\r\n//34 style label (neu)\r\n//35 style locumtenency/ platzhalter (neu)\r\n//36 trennersymbol werte (neu)\r\n//37 trennersymbol key, value (8)\r\n//38 tpl usermessage (neu)\r\n//39 tpl form start (neu)\r\n//40 tpl form end (neu)\r\n//41 email to switch (neu)\r\n//42 tpl platzhalter (neu)\r\n//43 tpl element fehlermedung (neu2)\r\n//44 debug  (neu2)\r\n//45 \r\n//46 tpl elementcontainer nr2 (neu2)\r\n//47 upload fileextensions  (neu2)\r\n//48 upload maxsize (neu2)\r\n//49 upload error fileextension (neu2)\r\n//50 upload error maxfilesize (neu2)\r\n//51 upload error intern (neu2)\r\n//52 style upload (neu2)\r\n//53 style custom error (neu2)\r\n//54 fallback {textfromdynamic}(3)\r\n//55 fallback {textareafromdynamic}(3)\r\n//56 tpl email (4)\r\n//57 txt email cc  (#gruppe, +user, email@something.de) (5)\r\n//58 txt email bcc (#gruppe, +user, email@something.de) (5)\r\n//59 select daten in db speichern ja, nein (5)\r\n//60 txt default gruppen identifier (5)\r\n//61 select Dateiuploads im Dateisystem ablegen: Nein, Ja - gleichlautene Dateien werden √?berschrieben, \r\n//                                               Ja - gleichlautenen Dateien werden umbenannt (5)\r\n//62 select Ordner f√?r Uploads  (5)\r\n//63 select Formulareingaben mitloggen ja/ nein (5)\r\n//64 txt logfile relativ vom frontend aus, default logs/ (5)\r\n//65 select emails versenden ja, nein (5)\r\n//66 tpl elementcontainer3 (8)\r\n\r\n//67 txt weiterleitung bei erfogreichen formularversand (6)\r\n//68 txt Weitere Email verschicken nein|ja (6)\r\n//69 txt Weitere Email subject (6)\r\n//70 txt Weitere Email template (6)\r\n//71 select gespeicherte db werte sind online|offline (6)\r\n//72 txt addon path||classname (6)\r\n\r\n//73 txt captchaimage length (7)\r\n//74 txt captchaimage width (7)\r\n//75 txt captchaimage height (7)\r\n//76 txt captchaimage attributes (7)\r\n//77 txt captchaimage styleset (7)\r\n//78 txtarea captchaimage template (7)\r\n//79 select captchaimage textfield (7)\r\n//80 txt additional emailaress sender (7)\r\n//81 txt additional emailaress recipient (7)\r\n//82 txt tpl required notice (8)\r\n//83 txt tpl label within required notice (8)\r\n\r\n\r\n//86 tpl elementcontainer4 (8)\r\n\r\n//NEXT version\r\n//freie positionierung der formularelemente\r\n\r\n//100-1000 form config vars - in 20 Schritten\r\n//n+0 aktiv\r\n//n+1 type\r\n//n+2 label\r\n//n+3 default\r\n//n+4 validate\r\n//n+5 attributes label\r\n//n+6 attributes formelement\r\n//n+7 custom element- error\r\n//n+8 select tpl elementcontainer\r\n//-----------------------------\r\n		\r\n//configmode\r\n$mip_form[''10''][''desc''] = ''Konfigurationsmodus'';\r\n$mip_form[''10''][''cat''] = ''option'';\r\n$mip_form[''10''][''size''] = ''1'';\r\n$mip_form[''10''][''option_desc''][] = ''Normal'';\r\n$mip_form[''10''][''option_val''][] =  '''';\r\n$mip_form[''10''][''option_desc''][] = ''Ausgeblendet'';\r\n$mip_form[''10''][''option_val''][] =  ''hidden'';\r\n$mip_form[''10''][''cms_var''] = ''MOD_VAR[10]'';\r\n$mip_form[''10''][''cms_val''] = $cms_mod[''value''][''10''];\r\n$mip_form[''10''][''flag''] = ''reload'';\r\n\r\n\r\n//hidden config\r\nif($cms_mod[''value''][''10''] == ''hidden''){\r\n	mip_formsp($mip_form[''10'']);//configmode\r\n	foreach($cms_mod[''value''] AS $ke=>$va){\r\n		if($ke != ''10''){\r\n			?>\r\n			<input name="MOD_VAR[<?php echo $ke; ?>]" type="hidden" value="<?php echo htmlentities($va, ENT_COMPAT, ''UTF-8'');?>">\r\n			<?php\r\n		}\r\n	}\r\n//normal config\r\n} else {\r\n	// Anzahl der Spalten\r\n	if ($cms_mod[''value''][''0''] == '''' || $cms_mod[''value''][''0''] <= ''0'') $cms_mod[''value''][''0''] = 3;\r\n	if ($cms_mod[''value''][''1''] != ''0'') $cms_mod[''value''][''0''] = (int) $cms_mod[''value''][''0'']+ $cms_mod[''value''][''1''];\r\n	$mip_form[''0''][''cat''] = ''hidden'';\r\n	$mip_form[''0''][''cms_var''] = ''MOD_VAR[0]'';\r\n	$mip_form[''0''][''cms_val''] = $cms_mod[''value''][''0''];\r\n\r\n	$mip_form[''44''][''cat''] = ''option'';\r\n	$mip_form[''44''][''desc''] = ''Debugmodus<br />\r\n<small>Ausgabe von Debugmeldungen<br><br></small>'';\r\n	$mip_form[''44''][''size''] = ''1'';\r\n	$mip_form[''44''][''option_desc''][] = ''nein'';\r\n	$mip_form[''44''][''option_val''][] =  ''false'';\r\n	$mip_form[''44''][''option_desc''][] = ''ja'';\r\n	$mip_form[''44''][''option_val''][] =  ''true'';\r\n	$mip_form[''44''][''cms_var''] = ''MOD_VAR[''.''44''.'']'';\r\n	$mip_form[''44''][''cms_val''] = $cms_mod[''value''][''44''];\r\n	\r\n	$mip_form[''63''][''cat''] = ''option'';\r\n	$mip_form[''63''][''desc''] = ''Maildaten loggen'';\r\n	$mip_form[''63''][''size''] = ''1'';\r\n	$mip_form[''63''][''option_desc''][] = ''Nein'';\r\n	$mip_form[''63''][''option_val''][] =  ''false'';\r\n	$mip_form[''63''][''option_desc''][] = ''Ja'';\r\n	$mip_form[''63''][''option_val''][] =  ''true'';\r\n	$mip_form[''63''][''cms_var''] = ''MOD_VAR[''.''63''.'']'';\r\n	$mip_form[''63''][''cms_val''] = $cms_mod[''value''][''63''];\r\n	$mip_form[''63''][''tab''] = ''0'';\r\n	\r\n	$mip_form[''64''][''cat''] = ''txt'';\r\n	$mip_form[''64''][''desc''] = ''Pfad logifle relativ vom Frontend'';\r\n	$mip_form[''64''][''cms_var''] = ''MOD_VAR[64]'';\r\n	$mip_form[''64''][''cms_val''] = $cms_mod[''value''][''64''];\r\n	$mip_form[''64''][''cms_val_default''] = ''logs/log_contactform.txt'';\r\n	$mip_form[''64''][''tab''] = ''0'';\r\n	\r\n	$mip_form[''11''][''cat''] = ''txt'';\r\n	$mip_form[''11''][''desc''] = ''Beeffzeile/ Subject der Email'';\r\n	$mip_form[''11''][''cms_var''] = ''MOD_VAR[11]'';\r\n	$mip_form[''11''][''cms_val''] = $cms_mod[''value''][''11''];\r\n	$mip_form[''11''][''cms_val_default''] = ''Kontaktformular'';\r\n	$mip_form[''11''][''tab''] = ''0'';\r\n	\r\n	$mip_form[''desc''][''cat''] = ''desc'';\r\n	$mip_form[''desc''][''type''] = '''';\r\n	$mip_form[''desc''][''desc''] = ''Emailadresse Empf√?nger'';\r\n	$mip_form[''desc''][''tab''] = ''0'';	\r\n	\r\n	$mip_form[''65''][''cat''] = ''option'';\r\n	$mip_form[''65''][''desc''] = ''Mailversand aktiviert'';\r\n	$mip_form[''65''][''size''] = ''1'';\r\n	$mip_form[''65''][''option_desc''][] = ''Ja'';\r\n	$mip_form[''65''][''option_val''][] =  ''true'';\r\n	$mip_form[''65''][''option_desc''][] = ''Nein'';\r\n	$mip_form[''65''][''option_val''][] =  ''false'';\r\n	$mip_form[''65''][''cms_var''] = ''MOD_VAR[''.''65''.'']'';\r\n	$mip_form[''65''][''cms_val''] = $cms_mod[''value''][''65''];\r\n	$mip_form[''65''][''cms_val_default''] = ''false'';\r\n\r\n	$mip_form[''12''][''cat''] = ''txt'';\r\n	$mip_form[''12''][''type''] = ''radio''; \r\n	$mip_form[''12''][''desc''] = ''Empf√?nger aus Textfeld beziehen<br />\r\n	<small>M√∂gliche Formate: mail@somewehre.de, +benutzername,<br /> \r\n	#gruppenname, mehrere Empf√?nger mit Komma trennen</small>'';\r\n	$mip_form[''12''][''radio_var''] = ''MOD_VAR[41]''; \r\n	$mip_form[''12''][''radio_val''] = $cms_mod[''value''][''41'']; \r\n	$mip_form[''12''][''radio_user_val''] = ''textfield''; \r\n	$mip_form[''12''][''radio_val_default''] = ''textfield'';\r\n	$mip_form[''12''][''cms_var''] = ''MOD_VAR[12]'';\r\n	$mip_form[''12''][''cms_val''] = $cms_mod[''value''][''12'']; \r\n	$mip_form[''12''][''cms_val_default''] = ''me@localhost.de'';\r\n	$mip_form[''12''][''tab''] = ''1'';\r\n	\r\n	$mip_form[''57''][''cat''] = ''txt'';\r\n	$mip_form[''57''][''desc''] = ''Empf√?nger cc<br />\r\n	<small>M√∂gliche Formate: mail@somewehre.de, +benutzername,<br /> \r\n	#gruppenname, mehrere Empf√?nger mit Komma trennen</small>'';\r\n	$mip_form[''57''][''cms_var''] = ''MOD_VAR[57]'';\r\n	$mip_form[''57''][''cms_val''] = $cms_mod[''value''][''57''];\r\n	$mip_form[''57''][''cms_val_default''] = '''';\r\n	$mip_form[''57''][''tab''] = ''2'';\r\n\r\n	$mip_form[''58''][''cat''] = ''txt'';\r\n	$mip_form[''58''][''desc''] = ''Empf√?nger bcc<br />\r\n	<small>M√∂gliche Formate: mail@somewehre.de, +benutzername,<br /> \r\n	#gruppenname, mehrere Empf√?nger mit Komma trennen</small>'';\r\n	$mip_form[''58''][''cms_var''] = ''MOD_VAR[58]'';\r\n	$mip_form[''58''][''cms_val''] = $cms_mod[''value''][''58''];\r\n	$mip_form[''58''][''cms_val_default''] = '''';\r\n	$mip_form[''58''][''tab''] = ''2'';\r\n\r\n	$mip_form[''59''][''cat''] = ''option'';\r\n	$mip_form[''59''][''desc''] = ''Formulardaten in Datenbank speichern<br />\r\n<small>Zur Nutzung der Funktionalit√?t muss das Modul Reportviewer installiert sein</small>'';\r\n	$mip_form[''59''][''size''] = ''1'';\r\n	$mip_form[''59''][''option_desc''][] = ''nein'';\r\n	$mip_form[''59''][''option_val''][] =  ''false'';\r\n	$mip_form[''59''][''option_desc''][] = ''ja'';\r\n	$mip_form[''59''][''option_val''][] =  ''true'';\r\n	$mip_form[''59''][''cms_var''] = ''MOD_VAR[''.''59''.'']'';\r\n	$mip_form[''59''][''cms_val''] = $cms_mod[''value''][''59''];\r\n\r\n    $mip_form[''60''][''cat''] = ''txt'';\r\n	$mip_form[''60''][''desc''] = ''Standardgruppe f√?r Speicherung in Datenbank:'';\r\n	$mip_form[''60''][''cms_var''] = ''MOD_VAR[60]'';\r\n	$mip_form[''60''][''cms_val''] = $cms_mod[''value''][''60''];\r\n	$mip_form[''60''][''cms_val_default''] = ''default'';\r\n	$mip_form[''60''][''tab''] = ''0'';\r\n\r\n	$mip_form[''71''][''cat''] = ''option'';\r\n	$mip_form[''71''][''desc''] = ''Neue Datens√?tze sind zuerst'';\r\n	$mip_form[''71''][''size''] = ''1'';\r\n	$mip_form[''71''][''option_desc''][] = ''online'';\r\n	$mip_form[''71''][''option_val''][] =  ''online'';\r\n	$mip_form[''71''][''option_desc''][] = ''offline'';\r\n	$mip_form[''71''][''option_val''][] =  ''offline'';\r\n	$mip_form[''71''][''cms_var''] = ''MOD_VAR[''.''71''.'']'';\r\n	$mip_form[''71''][''cms_val''] = $cms_mod[''value''][''71''];	\r\n	\r\n	$mip_form[''41''][''cat''] = ''desc'';\r\n	$mip_form[''41''][''type''] = ''radio''; \r\n	$mip_form[''41''][''desc''] = ''Wenn m√∂glich, dynamisch aus Seitencontent generieren<br /><small>Benutzen Sie dazu z.B. das Modul Dynamische Empf√?ngeradresse</small>'';\r\n	$mip_form[''41''][''radio_var''] = ''MOD_VAR[41]''; \r\n	$mip_form[''41''][''radio_val''] = $cms_mod[''value''][''41'']; \r\n	$mip_form[''41''][''radio_user_val''] = ''get''; \r\n	$mip_form[''41''][''tab''] = ''1'';\r\n	\r\n	//Emailadresse Absender\r\n	$mip_form[''27''][''cat''] = ''option'';\r\n	$mip_form[''27''][''desc''] = ''Emailadresse Absender'';\r\n	$mip_form[''27''][''size''] = ''1'';\r\n	$mip_form[''27''][''option_desc''][] = ''Wie Empf√?nger'';\r\n	$mip_form[''27''][''option_val''][] =  ''receiver'';\r\n	for($i=0;$i < $cms_mod[''value''][''0''];$i++){\r\n		$element_nr = ($i < 9) ? (''0''. ($i+1) ): $i+1;\r\n		$mip_form[''27''][''option_desc''][] = ''Beziehen aus Formularfeld ''.$element_nr;\r\n		$mip_form[''27''][''option_val''][] = 100 + $i*20;\r\n	}\r\n	$mip_form[''27''][''cms_var''] = ''MOD_VAR[27]'';\r\n	$mip_form[''27''][''cms_val''] = $cms_mod[''value''][''27''];\r\n\r\n//	//Fieldset DEPRECATED\r\n//	$mip_form[''28''][''cat''] = ''option'';\r\n//	$mip_form[''28''][''desc''] = ''Formular enth√?lt ein Fieldset'';\r\n//	$mip_form[''28''][''size''] = ''1'';\r\n//	$mip_form[''28''][''option_desc''][] = ''Nein'';\r\n//	$mip_form[''28''][''option_val''][] =  ''false'';\r\n//	$mip_form[''28''][''option_desc''][] = ''Ja'';\r\n//	$mip_form[''28''][''option_val''][] =  ''true'';\r\n//	$mip_form[''28''][''cms_var''] = ''MOD_VAR[28]'';\r\n//	$mip_form[''28''][''cms_val''] = $cms_mod[''value''][''28''];\r\n//\r\n//	//Fieldset Beschriftung\r\n//	$mip_form[''29''][''cat''] = ''txt'';\r\n//	$mip_form[''29''][''desc''] = ''Fieldset Beschriftung (Legend)'';\r\n//	$mip_form[''29''][''cms_var''] = ''MOD_VAR[29]'';\r\n//	$mip_form[''29''][''cms_val''] = $cms_mod[''value''][''29''];\r\n//	$mip_form[''29''][''cms_val_default''] = ''Ihre Mitteilung an uns:'';\r\n//	$mip_form[''29''][''tab''] = ''0'';\r\n	\r\n	$mip_form[''13''][''cat''] = ''txt'';\r\n	$mip_form[''13''][''desc''] = ''Fehlermeldung, bei falsch ausgef√?lltem Formular'';\r\n	$mip_form[''13''][''cms_var''] = ''MOD_VAR[13]'';\r\n	$mip_form[''13''][''cms_val''] = $cms_mod[''value''][''13''];\r\n	$mip_form[''13''][''cms_val_default''] = ''Bitte √?berpr√?fen Sie Ihre Formulareingaben:'';\r\n	$mip_form[''13''][''tab''] = ''0'';\r\n	\r\n	$mip_form[''14''][''cat''] = ''txt'';\r\n	$mip_form[''14''][''desc''] = ''Erfolgsmeldung, Formular wurde korrekt versendet'';\r\n	$mip_form[''14''][''cms_var''] = ''MOD_VAR[14]'';\r\n	$mip_form[''14''][''cms_val''] = $cms_mod[''value''][''14''];\r\n	$mip_form[''14''][''cms_val_default''] = ''Vielen Dank, die Daten wurden versandt'';\r\n	$mip_form[''14''][''tab''] = ''0'';\r\n	\r\n	$mip_form[''67''][''cat''] = ''txt'';\r\n	$mip_form[''67''][''desc''] = ''Nach Erfolg weiterleiten auf folgende URL<br />\r\n<small>Url oder Idcatside eingeben, leer lassen f√?r keine Weiterleitung</small>'';\r\n	$mip_form[''67''][''cms_var''] = ''MOD_VAR[67]'';\r\n	$mip_form[''67''][''cms_val''] = $cms_mod[''value''][''67''];\r\n	$mip_form[''67''][''cms_val_default''] = '''';\r\n	$mip_form[''67''][''tab''] = ''0'';\r\n	\r\n	$mip_form[''24''][''cat''] = ''txt'';\r\n	$mip_form[''24''][''desc''] = ''Beschriftung Submitbutton'';\r\n	$mip_form[''24''][''cms_var''] = ''MOD_VAR[24]'';\r\n	$mip_form[''24''][''cms_val''] = $cms_mod[''value''][''24''];\r\n	$mip_form[''24''][''cms_val_default''] = ''Abschicken'';\r\n	$mip_form[''24''][''tab''] = ''0'';\r\n		\r\n	$mip_form[''15''][''desc''] = ''Styleklasse Fehlermeldung: '';\r\n	$mip_form[''15''][''cat''] = ''app_css'';\r\n	$mip_form[''15''][''output_cat''] = ''option'';\r\n	$mip_form[''15''][''cms_var''] = ''MOD_VAR[15]'';\r\n	$mip_form[''15''][''cms_val''] = $cms_mod[''value''][''15''];\r\n	$mip_form[''15''][''flag''] = ''class_only'';\r\n	\r\n	$mip_form[''16''][''desc''] = ''Styleklasse Erfolgsmeldung: '';\r\n	$mip_form[''16''][''cat''] = ''app_css'';\r\n	$mip_form[''16''][''output_cat''] = ''option'';\r\n	$mip_form[''16''][''cms_var''] = ''MOD_VAR[16]'';\r\n	$mip_form[''16''][''cms_val''] = $cms_mod[''value''][''16''];\r\n	$mip_form[''16''][''flag''] = ''class_only'';\r\n	\r\n	$mip_form[''17''][''desc''] = ''Styleklasse Label: '';\r\n	$mip_form[''17''][''cat''] = ''app_css'';\r\n	$mip_form[''17''][''output_cat''] = ''option'';\r\n	$mip_form[''17''][''cms_var''] = ''MOD_VAR[17]'';\r\n	$mip_form[''17''][''cms_val''] = $cms_mod[''value''][''17''];\r\n	$mip_form[''17''][''flag''] = ''class_only'';\r\n\r\n	$mip_form[''18''][''desc''] = ''Styleklasse Label, bei Fehlermeldung: '';\r\n	$mip_form[''18''][''cat''] = ''app_css'';\r\n	$mip_form[''18''][''output_cat''] = ''option'';\r\n	$mip_form[''18''][''cms_var''] = ''MOD_VAR[18]'';\r\n	$mip_form[''18''][''cms_val''] = $cms_mod[''value''][''18''];\r\n	$mip_form[''18''][''flag''] = ''class_only'';\r\n	\r\n	$mip_form[''19''][''desc''] = ''Styleklasse einzeiliges Textfeld: '';\r\n	$mip_form[''19''][''cat''] = ''app_css'';\r\n	$mip_form[''19''][''output_cat''] = ''option'';\r\n	$mip_form[''19''][''cms_var''] = ''MOD_VAR[19]'';\r\n	$mip_form[''19''][''cms_val''] = $cms_mod[''value''][''19''];\r\n	$mip_form[''19''][''flag''] = ''class_only'';\r\n	\r\n	$mip_form[''20''][''desc''] = ''Styleklasse mehrzeiliges Textfeld: '';\r\n	$mip_form[''20''][''cat''] = ''app_css'';\r\n	$mip_form[''20''][''output_cat''] = ''option'';\r\n	$mip_form[''20''][''cms_var''] = ''MOD_VAR[20]'';\r\n	$mip_form[''20''][''cms_val''] = $cms_mod[''value''][''20''];\r\n	$mip_form[''20''][''flag''] = ''class_only'';\r\n	\r\n	$mip_form[''21''][''desc''] = ''Styleklasse Selectbox: '';\r\n	$mip_form[''21''][''cat''] = ''app_css'';\r\n	$mip_form[''21''][''output_cat''] = ''option'';\r\n	$mip_form[''21''][''cms_var''] = ''MOD_VAR[21]'';\r\n	$mip_form[''21''][''cms_val''] = $cms_mod[''value''][''21''];\r\n	$mip_form[''21''][''flag''] = ''class_only'';\r\n	\r\n	$mip_form[''22''][''desc''] = ''Styleklasse Checkbox: '';\r\n	$mip_form[''22''][''cat''] = ''app_css'';\r\n	$mip_form[''22''][''output_cat''] = ''option'';\r\n	$mip_form[''22''][''cms_var''] = ''MOD_VAR[22]'';\r\n	$mip_form[''22''][''cms_val''] = $cms_mod[''value''][''22''];\r\n	$mip_form[''22''][''flag''] = ''class_only'';\r\n\r\n	$mip_form[''31''][''desc''] = ''Styleklasse Einzeiliges Passwortfeld: '';\r\n	$mip_form[''31''][''cat''] = ''app_css'';\r\n	$mip_form[''31''][''output_cat''] = ''option'';\r\n	$mip_form[''31''][''cms_var''] = ''MOD_VAR[31]'';\r\n	$mip_form[''31''][''cms_val''] = $cms_mod[''value''][''31''];\r\n	$mip_form[''31''][''flag''] = ''class_only'';\r\n\r\n	$mip_form[''32''][''desc''] = ''Styleklasse Selectbox, Mehrfachauswahl: '';\r\n	$mip_form[''32''][''cat''] = ''app_css'';\r\n	$mip_form[''32''][''output_cat''] = ''option'';\r\n	$mip_form[''32''][''cms_var''] = ''MOD_VAR[32]'';\r\n	$mip_form[''32''][''cms_val''] = $cms_mod[''value''][''32''];\r\n	$mip_form[''32''][''flag''] = ''class_only'';\r\n\r\n	$mip_form[''33''][''desc''] = ''Styleklasse Optionsfelder: '';\r\n	$mip_form[''33''][''cat''] = ''app_css'';\r\n	$mip_form[''33''][''output_cat''] = ''option'';\r\n	$mip_form[''33''][''cms_var''] = ''MOD_VAR[33]'';\r\n	$mip_form[''33''][''cms_val''] = $cms_mod[''value''][''33''];\r\n	$mip_form[''33''][''flag''] = ''class_only'';\r\n\r\n	$mip_form[''34''][''desc''] = ''Styleklasse Nur Beschriftung: '';\r\n	$mip_form[''34''][''cat''] = ''app_css'';\r\n	$mip_form[''34''][''output_cat''] = ''option'';\r\n	$mip_form[''34''][''cms_var''] = ''MOD_VAR[34]'';\r\n	$mip_form[''34''][''cms_val''] = $cms_mod[''value''][''34''];\r\n	$mip_form[''34''][''flag''] = ''class_only'';\r\n\r\n	$mip_form[''35''][''desc''] = ''Styleklasse Platzhalter: '';\r\n	$mip_form[''35''][''cat''] = ''app_css'';\r\n	$mip_form[''35''][''output_cat''] = ''option'';\r\n	$mip_form[''35''][''cms_var''] = ''MOD_VAR[35]'';\r\n	$mip_form[''35''][''cms_val''] = $cms_mod[''value''][''35''];\r\n	$mip_form[''35''][''flag''] = ''class_only'';\r\n\r\n	$mip_form[''52''][''desc''] = ''Styleklasse Dateiupload: '';\r\n	$mip_form[''52''][''cat''] = ''app_css'';\r\n	$mip_form[''52''][''output_cat''] = ''option'';\r\n	$mip_form[''52''][''cms_var''] = ''MOD_VAR[52]'';\r\n	$mip_form[''52''][''cms_val''] = $cms_mod[''value''][''52''];\r\n	$mip_form[''52''][''flag''] = ''class_only'';\r\n\r\n	$mip_form[''79''][''desc''] = ''Styleklasse Captchbild Textfeld: '';\r\n	$mip_form[''79''][''cat''] = ''app_css'';\r\n	$mip_form[''79''][''output_cat''] = ''option'';\r\n	$mip_form[''79''][''cms_var''] = ''MOD_VAR[79]'';\r\n	$mip_form[''79''][''cms_val''] = $cms_mod[''value''][''79''];\r\n	$mip_form[''79''][''flag''] = ''class_only'';\r\n\r\n	$mip_form[''53''][''desc''] = ''Styleklasse Fehlermeldung im Formularelement: '';\r\n	$mip_form[''53''][''cat''] = ''app_css'';\r\n	$mip_form[''53''][''output_cat''] = ''option'';\r\n	$mip_form[''53''][''cms_var''] = ''MOD_VAR[53]'';\r\n	$mip_form[''53''][''cms_val''] = $cms_mod[''value''][''53''];\r\n	$mip_form[''53''][''flag''] = ''class_only'';\r\n\r\n		\r\n	$mip_form[''23''][''desc''] = ''Styleklasse Submitbutton: '';\r\n	$mip_form[''23''][''cat''] = ''app_css'';\r\n	$mip_form[''23''][''output_cat''] = ''option'';\r\n	$mip_form[''23''][''cms_var''] = ''MOD_VAR[23]'';\r\n	$mip_form[''23''][''cms_val''] = $cms_mod[''value''][''23''];\r\n	$mip_form[''23''][''flag''] = ''class_only'';\r\n\r\n	$mip_form[''36''][''cat''] = ''txt'';\r\n	$mip_form[''36''][''desc''] = ''Trennersymbol - bei Feldern, wo mehreren Werte angegeben werden k√∂nnen<br />\r\n<small>Selectboxen und Optionsfelder</small>'';\r\n	$mip_form[''36''][''cms_var''] = ''MOD_VAR[36]'';\r\n	$mip_form[''36''][''cms_val''] = $cms_mod[''value''][''36''];\r\n	$mip_form[''36''][''cms_val_default''] = '','';\r\n	\r\n\r\n	$mip_form[''37''][''cat''] = ''txt'';\r\n	$mip_form[''37''][''desc''] = ''Trennersymbol - bei Feldern, wo angezeigter Name und √?bergebener Wert unterschiedlich sein k√∂nnen<br />\r\n<small>Selectboxen, Optionsfelder und Checkboxen</small>'';\r\n	$mip_form[''37''][''cms_var''] = ''MOD_VAR[37]'';\r\n	$mip_form[''37''][''cms_val''] = $cms_mod[''value''][''37''];\r\n	$mip_form[''37''][''cms_val_default''] = ''@@'';\r\n\r\n\r\n	$mip_form[''47''][''cat''] = ''txt'';\r\n	$mip_form[''47''][''desc''] = ''Dateiuploads - erlaubte Dateiendungen<br>\r\n<small>kommasepariert anzugeben ("doc,pdf"), leer bedeutet keine Einschr√?nkungen</small>'';\r\n	$mip_form[''47''][''cms_var''] = ''MOD_VAR[47]'';\r\n	$mip_form[''47''][''cms_val''] = $cms_mod[''value''][''47''];\r\n	$mip_form[''47''][''cms_val_default''] = '''';\r\n	$mip_form[''47''][''tab''] = ''0'';\r\n\r\n	$mip_form[''48''][''cat''] = ''txt'';\r\n	$mip_form[''48''][''desc''] = ''Dateiuploads - erlaubte, maximale Dateigr√∂√æe in kb<br>\r\n<small>1024 kb entsprechen 1mb, leer oder 0 bedeutet keine Einschr√?nkungen</small>'';\r\n	$mip_form[''48''][''cms_var''] = ''MOD_VAR[48]'';\r\n	$mip_form[''48''][''cms_val''] = $cms_mod[''value''][''48''];\r\n	$mip_form[''48''][''cms_val_default''] = '''';\r\n	$mip_form[''48''][''tab''] = ''0'';\r\n\r\n	$mip_form[''49''][''cat''] = ''txt'';\r\n	$mip_form[''49''][''rows''] = ''1'';\r\n	$mip_form[''49''][''type''] = ''long'';	\r\n	$mip_form[''49''][''desc''] = ''Dateiuploads Fehlermeldung "Dateiendung nicht erlaubt"'';\r\n	$mip_form[''49''][''cms_var''] = ''MOD_VAR[49]'';\r\n	$mip_form[''49''][''cms_val''] = $cms_mod[''value''][''49''];\r\n	$mip_form[''49''][''cms_val_default''] = ''Der von Ihnen gew√?hlte Dateityp darf nicht hochgeladen werden'';\r\n	$mip_form[''49''][''tab''] = ''0'';\r\n\r\n	$mip_form[''50''][''cat''] = ''txt'';\r\n	$mip_form[''50''][''rows''] = ''1'';\r\n	$mip_form[''50''][''type''] = ''long'';	\r\n	$mip_form[''50''][''desc''] = ''Dateiuploads Fehlermeldung "Uploadlimit √?berschritten"'';\r\n	$mip_form[''50''][''cms_var''] = ''MOD_VAR[50]'';\r\n	$mip_form[''50''][''cms_val''] = $cms_mod[''value''][''50''];\r\n	$mip_form[''50''][''cms_val_default''] = ''Die maximal zul√?ssige Dateigr√∂√æe wurde √?berschritten'';\r\n	$mip_form[''50''][''tab''] = ''0'';\r\n	\r\n	$mip_form[''51''][''cat''] = ''txt'';\r\n	$mip_form[''51''][''rows''] = ''1'';\r\n	$mip_form[''51''][''type''] = ''long'';	\r\n	$mip_form[''51''][''desc''] = ''Dateiuploads Fehlermeldung "Interner Fehler"'';\r\n	$mip_form[''51''][''cms_var''] = ''MOD_VAR[51]'';\r\n	$mip_form[''51''][''cms_val''] = $cms_mod[''value''][''51''];\r\n	$mip_form[''51''][''cms_val_default''] = ''Beim Upload ist ein interner Fehler aufgetreten'';\r\n	$mip_form[''51''][''tab''] = ''0'';\r\n\r\n	$mip_form[''61''][''cat''] = ''option'';\r\n	$mip_form[''61''][''desc''] = ''Dateiuploads im Dateisystem ablegen'';\r\n	$mip_form[''61''][''size''] = ''1'';\r\n	$mip_form[''61''][''option_desc''][] = ''Nein'';\r\n	$mip_form[''61''][''option_val''][] =  ''false'';\r\n	$mip_form[''61''][''option_desc''][] = ''Ja, gleichlautene Dateien werden √?berschrieben'';\r\n	$mip_form[''61''][''option_val''][] =  ''overwrite'';\r\n	$mip_form[''61''][''option_desc''][] = ''Ja, gleichlautene Dateien werden umbenannt'';\r\n	$mip_form[''61''][''option_val''][] =  ''rename'';\r\n	$mip_form[''61''][''cms_var''] = ''MOD_VAR[''.''61''.'']'';\r\n	$mip_form[''61''][''cms_val''] = $cms_mod[''value''][''61''];\r\n	\r\n	$mip_form[''62''][''desc''] = "Ordner in dem Uploads abgelegt werden";\r\n	$mip_form[''62''][''cat''] = ''app_directory'';\r\n	$mip_form[''62''][''output_cat''] = ''option'';\r\n	$mip_form[''62''][''size''] = 1; \r\n	$mip_form[''62''][''cms_var''] = "MOD_VAR[62]"; \r\n	$mip_form[''62''][''cms_val''] = $dedi_mod[''value''][''62''];\r\n	$mip_form[''62''][''without_all_folders''] = true;\r\n		\r\n	\r\n	$mip_form[''25''][''desc''] = ''Verbindungstemplate<br>\r\n	<small>M√∂gliche Templatevariablen: {usermessage} = Erfolgs oder Fehlermeldung beim verschicken des Formulars,<br>\r\n    {messageblock} = Gleiche Funktionalit√?t wie {usermessage}, es wird aber das Template Fehlermeldung<br /> eingebunden   \r\n	{formstart} = Formularkopf, mu√æ vor {formelements}, {submit} eingef√?gt werden,<br />\r\n    {formelements} = enth√?lt alle Formularelement, wird aus dem Template "Formelementblock" generiert, <br />\r\n    {submit} = Absendenbutton, {formend} = Formularende, mu√æ hinter {formelements} und {submit} eingef√?gt <br />\r\n    werden, {textfromdynamic} = Optionaler Inhalt aus Textfeld, der im Modul Dynamische Empf√?ngeradresse<br /> \r\n    angegeben werden kann, {textareafromdynamic} = Optionale Inhalt aus Textarea, die im Modul Dynamische<br /> \r\n    Empf√?ngeradresse angegeben werden kann,<br />\r\n	{page_name}, {page_url}, {cat_name}, {cat_url} = Kategorie und Seiteninformationen, die <br />\r\n	a) von der Seite stammen, von der das Formular verschickt wurde, wenn die Empf√?ngeradresse<br />\r\n	statisch in der Konfiguration eingetragen ist<br />\r\n	b) von der Seite stammen, auf der das Modul Dynamische Empf√?ngeradresse liegt, wenn die Daten<br />\r\n	dynamisch generiert wurden.<br /> \r\n	{debugmessages} = Debugmeldungen, wenn aktiviert</small>'';\r\n	$mip_form[''25''][''cat''] = ''txtarea'';\r\n	$mip_form[''25''][''rows''] = ''6'';\r\n	$mip_form[''25''][''type''] = ''long'';\r\n	$mip_form[''25''][''cms_var''] = ''MOD_VAR[25]'';\r\n	$mip_form[''25''][''cms_val''] = $cms_mod[''value''][''25''];\r\n	$mip_form[''25''][''cms_val_default''] = ''<table border="0" cellpadding="0" cellspacing="0">\r\n<tr><td align="right" colspan="2">{usermessage}</td></tr>\r\n  {formstart} {formelementblock}  \r\n  <tr><td align="right" colspan="2">{submit}</td></tr>\r\n  {formend}\r\n</table>'';	\r\n	\r\n	$mip_form[''26''][''desc''] = ''Template Elementcontainer 1<br>\r\n	<small>M√∂gliche Templatevariablen: {label} = Labes des Formularelements,{element} = Formularelement, z.B. <br>\r\n	Textfeld/ Selectbox, {errormessage} = Fehlermeldung im Element, {requirenotice} = Auszeichnung wenn Pflichtfeld</small>'';\r\n	$mip_form[''26''][''cat''] = ''txtarea'';\r\n	$mip_form[''26''][''rows''] = ''6'';\r\n	$mip_form[''26''][''type''] = ''long'';\r\n	$mip_form[''26''][''cms_var''] = ''MOD_VAR[26]'';\r\n	$mip_form[''26''][''cms_val''] = $cms_mod[''value''][''26''];\r\n	$mip_form[''26''][''cms_val_default''] = ''<tr>\r\n  <td valign="top">{label} &nbsp;&nbsp;</td>\r\n  <td>{errormessage}{element}</td>\r\n</tr>'';	\r\n\r\n	$mip_form[''46''][''desc''] = ''Template Elementcontainer 2<br>\r\n	<small>M√∂gliche Templatevariablen: {label} = Labes des Formularelements,{element} = Formularelement, z.B. <br>\r\n	Textfeld/ Selectbox,  {errormessage} = Fehlermeldung im Element, {requirenotice} = Auszeichnung wenn Pflichtfeld</small>'';\r\n	$mip_form[''46''][''cat''] = ''txtarea'';\r\n	$mip_form[''46''][''rows''] = ''6'';\r\n	$mip_form[''46''][''type''] = ''long'';\r\n	$mip_form[''46''][''cms_var''] = ''MOD_VAR[46]'';\r\n	$mip_form[''46''][''cms_val''] = $cms_mod[''value''][''46''];\r\n	$mip_form[''46''][''cms_val_default''] = ''<tr>\r\n    <td valign="top">{errormessage}{element} &nbsp;&nbsp;</td>\r\n  <td>{label}</td>\r\n</tr>'';\r\n\r\n	$mip_form[''66''][''desc''] = ''Template Elementcontainer 3<br>\r\n	<small>M√∂gliche Templatevariablen: {label} = Labes des Formularelements,{element} = Formularelement, z.B. <br>\r\n	Textfeld/ Selectbox,  {errormessage} = Fehlermeldung im Element, {requirenotice} = Auszeichnung wenn Pflichtfeld</small>'';\r\n	$mip_form[''66''][''cat''] = ''txtarea'';\r\n	$mip_form[''66''][''rows''] = ''6'';\r\n	$mip_form[''66''][''type''] = ''long'';\r\n	$mip_form[''66''][''cms_var''] = ''MOD_VAR[66]'';\r\n	$mip_form[''66''][''cms_val''] = $cms_mod[''value''][''66''];\r\n	$mip_form[''66''][''cms_val_default''] = ''<tr>\r\n  <td valign="top" colspan="2">{label}<br />{errormessage}{element} &nbsp;&nbsp;</td>\r\n</tr>'';	\r\n\r\n	$mip_form[''86''][''desc''] = ''Template Elementcontainer 4<br>\r\n	<small>M√∂gliche Templatevariablen: {label} = Labes des Formularelements,{element} = Formularelement, z.B. <br>\r\n	Textfeld/ Selectbox,  {errormessage} = Fehlermeldung im Element, {requirenotice} = Auszeichnung wenn Pflichtfeld</small>'';\r\n	$mip_form[''86''][''cat''] = ''txtarea'';\r\n	$mip_form[''86''][''rows''] = ''6'';\r\n	$mip_form[''86''][''type''] = ''long'';\r\n	$mip_form[''86''][''cms_var''] = ''MOD_VAR[86]'';\r\n	$mip_form[''86''][''cms_val''] = $cms_mod[''value''][''86''];\r\n	$mip_form[''86''][''cms_val_default''] = ''<tr>\r\n  <td valign="top" colspan="2">{errormessage}{element}<br />{label}{requirenotice}</td>\r\n</tr>'';		\r\n\r\n	$mip_form[''38''][''desc''] = ''Template Messageblock<br>\r\n	<small>M√∂gliche Templatevariablen: {usermessage} = Enth√?lt CSS formatierte Fehler- Best√?tigungsmeldung</small>'';\r\n	$mip_form[''38''][''cat''] = ''txtarea'';\r\n	$mip_form[''38''][''rows''] = ''6'';\r\n	$mip_form[''38''][''type''] = ''long'';\r\n	$mip_form[''38''][''cms_var''] = ''MOD_VAR[38]'';\r\n	$mip_form[''38''][''cms_val''] = $cms_mod[''value''][''38''];\r\n	$mip_form[''38''][''cms_val_default''] = ''<hr />{usermessage}<hr />'';\r\n	\r\n	$mip_form[''82''][''cat''] = ''txt'';\r\n	$mip_form[''82''][''desc''] = ''Template f√?r "{requirenotice}"'';\r\n	$mip_form[''82''][''cms_var''] = ''MOD_VAR[82]'';\r\n	$mip_form[''82''][''cms_val''] = $cms_mod[''value''][''82'']; \r\n	$mip_form[''82''][''cms_val_default''] = ''&nbsp;*'';\r\n	\r\n	$mip_form[''83''][''cat''] = ''txt'';\r\n	$mip_form[''83''][''desc''] = ''Template f√?r Labeltext<br>\r\n	<small>M√∂gliche Templatevariablen: {labelcontent} = Labeltext, {requirenotice} = Auszeichnung wenn Pflichtfeld</small>'';\r\n	$mip_form[''83''][''cms_var''] = ''MOD_VAR[83]'';\r\n	$mip_form[''83''][''cms_val''] = $cms_mod[''value''][''83'']; \r\n	$mip_form[''83''][''cms_val_default''] = ''{labelcontent}{requirenotice}'';\r\n\r\n	$mip_form[''39''][''desc''] = ''Template Formularstart<br>\r\n	<small>M√∂gliche Templatevariablen: {url} = Ziellink des Formulars, {transmitted} = gibt falls das Formular versendet wurde den String "transmitted" aus</small>'';\r\n	$mip_form[''39''][''cat''] = ''txtarea'';\r\n	$mip_form[''39''][''rows''] = ''1'';\r\n	$mip_form[''39''][''type''] = ''long'';\r\n	$mip_form[''39''][''cms_var''] = ''MOD_VAR[39]'';\r\n	$mip_form[''39''][''cms_val''] = $cms_mod[''value''][''39''];\r\n	$mip_form[''39''][''cms_val_default''] = ''<form id="feedback" class="{transmitted}" method="post" action="{url}" enctype="multipart/form-data" >'';	\r\n\r\n\r\n	$mip_form[''40''][''desc''] = ''Template Formularende<br>\r\n	<small>M√∂gliche Templatevariablen: keine</small>'';\r\n	$mip_form[''40''][''cat''] = ''txtarea'';\r\n	$mip_form[''40''][''rows''] = ''1'';\r\n	$mip_form[''40''][''type''] = ''long'';\r\n	$mip_form[''40''][''cms_var''] = ''MOD_VAR[40]'';\r\n	$mip_form[''40''][''cms_val''] = $cms_mod[''value''][''40''];\r\n	$mip_form[''40''][''cms_val_default''] = ''</form>'';	\r\n\r\n	$mip_form[''42''][''desc''] = ''Template Platzhalter<br>\r\n	<small>Dieses Template wird beim Platzhalterelement als "defaulttext" eingetragen<br>\r\nM√∂gliche Templatevariablen: keine</small>'';\r\n	$mip_form[''42''][''cat''] = ''txtarea'';\r\n	$mip_form[''42''][''rows''] = ''1'';\r\n	$mip_form[''42''][''type''] = ''long'';\r\n	$mip_form[''42''][''cms_var''] = ''MOD_VAR[42]'';\r\n	$mip_form[''42''][''cms_val''] = $cms_mod[''value''][''42''];\r\n	$mip_form[''42''][''cms_val_default''] = ''<br /><br />'';	\r\n\r\n	$mip_form[''43''][''desc''] = ''Template Element- Fehlermeldung<br>\r\n	<small>M√∂gliche Templatevariablen: {elementerrormessage}</small>'';\r\n	$mip_form[''43''][''cat''] = ''txtarea'';\r\n	$mip_form[''43''][''rows''] = ''1'';\r\n	$mip_form[''43''][''type''] = ''long'';\r\n	$mip_form[''43''][''cms_var''] = ''MOD_VAR[43]'';\r\n	$mip_form[''43''][''cms_val''] = $cms_mod[''value''][''43''];\r\n	$mip_form[''43''][''cms_val_default''] = ''{elementerrormessage}<br />'';\r\n	\r\n	$mip_form[''54''][''cat''] = ''txt'';\r\n	$mip_form[''54''][''desc''] = ''Template Defaultwert f√?r {textfromdynamic}<br />\r\n	<small>Standardwert f√?r {textfromdynamic}, liegt ein Wert aus dem Modul <br />\r\n    "Dynamische Empf√?ngeradresse" vor, wird dieser genommen.</small>'';\r\n	$mip_form[''54''][''cms_var''] = ''MOD_VAR[54]'';\r\n	$mip_form[''54''][''cms_val''] = $cms_mod[''value''][''54'']; \r\n	$mip_form[''54''][''cms_val_default''] = '''';\r\n	\r\n	$mip_form[''55''][''cat''] = ''txtarea'';\r\n	$mip_form[''55''][''rows''] = ''2'';\r\n	$mip_form[''55''][''type''] = ''long'';\r\n	$mip_form[''55''][''desc''] = ''Template Defaultwert f√?r {textareafromdynamic}<br />\r\n	<small>Standardwert f√?r {textareafromdynamic}, liegt ein Wert aus dem Modul<br />\r\n    "Dynamische Empf√?ngeradresse" vor, wird dieser genommen.</small>'';\r\n	$mip_form[''55''][''cms_var''] = ''MOD_VAR[55]'';\r\n	$mip_form[''55''][''cms_val''] = $cms_mod[''value''][''55'']; \r\n	$mip_form[''55''][''cms_val_default''] = '''';\r\n	\r\n	$mip_form[''56''][''desc''] = ''Template Email <br>\r\n	<small>M√∂gliche Templatevariablen: {automessage} = vom System automatisch zusammengestellter Text<br />\r\naus allen Formularelementen, {elementlabel:1} = Label des ersten Formularfeldes, {elementvalue:1} = <br />\r\nWert des ersten Formularfeldes. Es kann auf jedes Formularfeld zugegriffen werden, {elementlabel:3}<br />\r\nentspricht beispielsweise dem Label des dritten Formularfeldes<br />\r\n{page_name}, {page_url}, {cat_name}, {cat_url} = Kategorie und Seiteninformationen, die <br />\r\na) von der Seite stammen, von der das Formular verschickt wurde, wenn die Empf√?ngeradresse<br />\r\nstatisch in der Konfiguration eingetragen ist<br />\r\nb) von der Seite stammen, auf der das Modul Dynamische Empf√?ngeradresse liegt, wenn die Daten<br />\r\ndynamisch generiert wurden. \r\n</small>'';\r\n	$mip_form[''56''][''cat''] = ''txtarea'';\r\n	$mip_form[''56''][''rows''] = ''6'';\r\n	$mip_form[''56''][''type''] = ''long'';\r\n	$mip_form[''56''][''cms_var''] = ''MOD_VAR[56]'';\r\n	$mip_form[''56''][''cms_val''] = $cms_mod[''value''][''56''];\r\n	$mip_form[''56''][''cms_val_default''] = ''{automessage}'';\r\n	\r\n	//Weitere Email Ja/ Nein\r\n	$mip_form[''68''][''cat''] = ''option'';\r\n	$mip_form[''68''][''desc''] = ''Weitere Email verschicken?'';\r\n	$mip_form[''68''][''size''] = ''1'';\r\n	$mip_form[''68''][''option_desc''][] = ''Ja'';\r\n	$mip_form[''68''][''option_val''][] =  ''true'';\r\n	$mip_form[''68''][''option_desc''][] = ''Nein'';\r\n	$mip_form[''68''][''option_val''][] =  ''false'';\r\n	$mip_form[''68''][''cms_var''] = ''MOD_VAR[''.''68''.'']'';\r\n	$mip_form[''68''][''cms_val''] = $cms_mod[''value''][''68''];\r\n	$mip_form[''68''][''cms_val_default''] = ''false'';\r\n	\r\n	//Subject Weitere Email\r\n	$mip_form[''69''][''cat''] = ''txt'';\r\n	$mip_form[''69''][''desc''] = ''Weitere Email Subject'';\r\n	$mip_form[''69''][''cms_var''] = ''MOD_VAR[69]'';\r\n	$mip_form[''69''][''cms_val''] = $cms_mod[''value''][''69''];\r\n	$mip_form[''69''][''cms_val_default''] = ''Ihre get√?tigten Eingaben'';\r\n	$mip_form[''69''][''tab''] = ''0'';\r\n	\r\n	//Template Weitere Email	\r\n	$mip_form[''70''][''desc''] = ''Template Weitere Email<br />\r\n	<small>M√∂gliche Templatevariablen: Identisch mit Template Email</small>'';\r\n	$mip_form[''70''][''cat''] = ''txtarea'';\r\n	$mip_form[''70''][''rows''] = ''6'';\r\n	$mip_form[''70''][''type''] = ''long'';\r\n	$mip_form[''70''][''cms_var''] = ''MOD_VAR[70]'';\r\n	$mip_form[''70''][''cms_val''] = $cms_mod[''value''][''70''];\r\n	$mip_form[''70''][''cms_val_default''] = ''{automessage}'';\r\n	\r\n	//Addonobject\r\n	$mip_form[''72''][''cat''] = ''txt'';\r\n	$mip_form[''72''][''rows''] = ''1'';\r\n	$mip_form[''72''][''type''] = ''long'';	\r\n	$mip_form[''72''][''desc''] = ''Addonstring<br />\r\n<small>Syntax: [pfad]||[klassenname]</small>'';\r\n	$mip_form[''72''][''cms_var''] = ''MOD_VAR[72]'';\r\n	$mip_form[''72''][''cms_val''] = $cms_mod[''value''][''72''];\r\n	$mip_form[''72''][''cms_val_default''] = '''';\r\n	$mip_form[''72''][''tab''] = ''0'';\r\n\r\n	//Captchaimage length\r\n	$mip_form[''73''][''cat''] = ''txt'';\r\n	$mip_form[''73''][''desc''] = ''Captcha-Code L√?nge <small>(Anzahl der einzugebenen Zeichen)</small>'';\r\n	$mip_form[''73''][''cms_var''] = ''MOD_VAR[73]'';\r\n	$mip_form[''73''][''cms_val''] = $cms_mod[''value''][''73''];\r\n	$mip_form[''73''][''cms_val_default''] = ''4'';\r\n	\r\n	//Captchaimage width\r\n	$mip_form[''74''][''cat''] = ''txt'';\r\n	$mip_form[''74''][''desc''] = ''Captcha-Code Bildbreite <small>(in Pixeln)</small>'';\r\n	$mip_form[''74''][''cms_var''] = ''MOD_VAR[74]'';\r\n	$mip_form[''74''][''cms_val''] = $cms_mod[''value''][''74''];\r\n	$mip_form[''74''][''cms_val_default''] = ''100'';\r\n	\r\n	//Captchaimage height\r\n	$mip_form[''75''][''cat''] = ''txt'';\r\n	$mip_form[''75''][''desc''] = ''Captcha-Code Bildh√∂he <small>(in Pixeln)</small>'';\r\n	$mip_form[''75''][''cms_var''] = ''MOD_VAR[75]'';\r\n	$mip_form[''75''][''cms_val''] = $cms_mod[''value''][''75''];\r\n	$mip_form[''75''][''cms_val_default''] = ''30'';\r\n	$mip_form[''75''][''tab''] = ''0'';\r\n	\r\n	//Captchaimage attributes\r\n	$mip_form[''76''][''cat''] = ''txt'';\r\n	$mip_form[''76''][''desc''] = ''Captcha-Code optionale, zus√?tzliche Imagetag-Attribute'';\r\n	$mip_form[''76''][''cms_var''] = ''MOD_VAR[76]'';\r\n	$mip_form[''76''][''cms_val''] = $cms_mod[''value''][''76''];\r\n	$mip_form[''76''][''cms_val_default''] = '''';\r\n	$mip_form[''76''][''tab''] = ''0'';\r\n	\r\n	//Captchaimage styleset\r\n	$mip_form[''77''][''cat''] = ''option'';\r\n	$mip_form[''77''][''desc''] = ''Captcha-Code Bilddesign'';\r\n	$mip_form[''77''][''size''] = ''1'';\r\n	$mip_form[''77''][''option_desc''][] = ''throwCHARS'';\r\n	$mip_form[''77''][''option_val''][] =  '''';\r\n	$mip_form[''77''][''option_desc''][] = ''binCLEAR'';\r\n	$mip_form[''77''][''option_val''][] = ''1'';\r\n	$mip_form[''77''][''option_desc''][] = ''psychoPIXEL'';\r\n	$mip_form[''77''][''option_val''][] = ''2'';\r\n	$mip_form[''77''][''cms_var''] = ''MOD_VAR[77]'';\r\n	$mip_form[''77''][''cms_val''] = $cms_mod[''value''][''77''];\r\n	\r\n	//Template Captchaimage\r\n	$mip_form[''78''][''desc''] = ''Template Captchaelement<br>\r\n	<small>M√∂gliche Templatevariablen: {image}, {textfield}, {hiddentoken}</small>'';\r\n	$mip_form[''78''][''cat''] = ''txtarea'';\r\n	$mip_form[''78''][''rows''] = ''1'';\r\n	$mip_form[''78''][''type''] = ''long'';\r\n	$mip_form[''78''][''cms_var''] = ''MOD_VAR[78]'';\r\n	$mip_form[''78''][''cms_val''] = $cms_mod[''value''][''78''];\r\n	$mip_form[''78''][''cms_val_default''] = ''{image} {textfield}{hiddentoken}'';	\r\n	\r\n	//Weitere Email Emailadresse\r\n	$mip_form[''80''][''cat''] = ''txt'';\r\n	$mip_form[''80''][''desc''] = ''Weitere Email Emailadresse Absender<small>(Entweder Emailadresse oder Formulardeldnummer)'';\r\n	$mip_form[''80''][''cms_var''] = ''MOD_VAR[80]'';\r\n	$mip_form[''80''][''cms_val''] = $cms_mod[''value''][''80''];\r\n	$mip_form[''80''][''cms_val_default''] = ''me@local.de'';\r\n	$mip_form[''80''][''tab''] = ''0'';\r\n		\r\n	//Weitere Email Emailadresse\r\n	$mip_form[''81''][''cat''] = ''txt'';\r\n	$mip_form[''81''][''desc''] = ''Weitere Email Emailadresse Empf√?nger<small>(Entweder Emailadresse oder Formulardeldnummer)'';\r\n	$mip_form[''81''][''cms_var''] = ''MOD_VAR[81]'';\r\n	$mip_form[''81''][''cms_val''] = $cms_mod[''value''][''81''];\r\n	$mip_form[''81''][''cms_val_default''] = ''me_too@local.de'';\r\n	$mip_form[''81''][''tab''] = ''0'';\r\n\r\n\r\n\r\n	//------------------------------------------------\r\n	//START GENERATE FORMFIELDS\r\n	//------------------------------------------------\r\n	$cf_formfieldtable = '''';\r\n	$cf_formfieldtable .= ''\r\n\r\n\r\n<script type="text/javascript">\r\n\r\n		// array to memorize a set of form element values\r\n		var val_mem_MOD_VAR=new Array();\r\n		// memorized flag\r\n		var val_mem_saved_MOD_VAR=false;\r\n		// current memorized entry (the id of the div-element to change the background color on copy)\r\n		var centry_mem_MOD_VAR;\r\n		// starting cmsmod-var id - depends on the module config\r\n		var cmvid_MOD_VAR=100;\r\n		// difference value betweend the cms_mod-var ids from entry to entry\r\n		var cmviddiff_MOD_VAR=20;\r\n		// element counter per entry\r\n		var ec_MOD_VAR=10;\r\n				\r\n		function copyentry_MOD_VAR(no,entry) {\r\n\r\n			if (centry_mem_MOD_VAR==entry) {\r\n				document.getElementById(centry_mem_MOD_VAR).style.backgroundColor="transparent";\r\n				val_mem_MOD_VAR=new Array();\r\n				val_mem_saved_MOD_VAR=false;	\r\n				centry_mem_MOD_VAR=null;		\r\n				return false;\r\n			}	\r\n\r\n			if (centry_mem_MOD_VAR)\r\n				document.getElementById(centry_mem_MOD_VAR).style.backgroundColor="transparent";\r\n				\r\n			document.getElementById(entry).style.backgroundColor="white";\r\n			centry_mem_MOD_VAR=entry;\r\n\r\n			val_mem_saved_MOD_VAR=true;\r\n			\r\n			for (i=0;i<ec_MOD_VAR;i++) {\r\n				var no1=no+i;\r\n				if (document.editform["MOD_VAR["+no1+"]"]){\r\n					if (document.editform["MOD_VAR["+no1+"]"].type=="checkbox") {\r\n						val_mem_MOD_VAR[i]=document.editform["MOD_VAR["+no1+"]"].checked;\r\n					}\r\n					if (document.editform["MOD_VAR["+no1+"]"].type=="text" || document.editform["MOD_VAR["+no1+"]"].type=="textarea" || document.editform["MOD_VAR["+no1+"]"].type=="hidden") {\r\n						val_mem_MOD_VAR[i]=document.editform["MOD_VAR["+no1+"]"].value;\r\n					}\r\n					if (document.editform["MOD_VAR["+no1+"]"].type=="select-one") {\r\n						val_mem_MOD_VAR[i]=document.editform["MOD_VAR["+no1+"]"].selectedIndex;\r\n					}\r\n				}\r\n			}\r\n		}\r\n\r\n		function pasteentry_MOD_VAR(no) {\r\n			if (val_mem_saved_MOD_VAR==false)\r\n				return false;\r\n			if (centry_mem_MOD_VAR)\r\n				document.getElementById(centry_mem_MOD_VAR).style.backgroundColor="transparent";\r\n			for (i=0;i<ec_MOD_VAR;i++) {\r\n				var no1=no+i;\r\n				if (document.editform["MOD_VAR["+no1+"]"]){\r\n					if (document.editform["MOD_VAR["+no1+"]"].type=="checkbox") {\r\n						document.editform["MOD_VAR["+no1+"]"].checked=val_mem_MOD_VAR[i];\r\n					}\r\n					if (document.editform["MOD_VAR["+no1+"]"].type=="text" || document.editform["MOD_VAR["+no1+"]"].type=="textarea" || document.editform["MOD_VAR["+no1+"]"].type=="hidden") {\r\n						document.editform["MOD_VAR["+no1+"]"].value=val_mem_MOD_VAR[i];\r\n					}\r\n					if (document.editform["MOD_VAR["+no1+"]"].type=="select-one") {\r\n						document.editform["MOD_VAR["+no1+"]"].selectedIndex=val_mem_MOD_VAR[i];\r\n					}\r\n				}\r\n			}\r\n			val_mem_MOD_VAR=new Array();\r\n			val_mem_saved_MOD_VAR=false;\r\n			centry_mem_MOD_VAR=null;\r\n		}\r\n		\r\n		function inserentry_MOD_VAR(no,entries) {\r\n\r\n			if (document.editform["MOD_VAR["+(cmvid_MOD_VAR+(cmviddiff_MOD_VAR*(entries-1)))+"]"].checked==true) {\r\n				alert("Einf√?gen eines Eintrags nicht m√∂glich, da der letzte Eintrag aktiv ist!\\nInsertion of an entry not possible because the last entry is active!");\r\n				return false;\r\n			}	\r\n\r\n			for (j=1;j<entries-((no-cmvid_MOD_VAR)/cmviddiff_MOD_VAR);j++) {\r\n					\r\n				for (i=0;i<ec_MOD_VAR;i++) {\r\n					var no2=(cmvid_MOD_VAR+(cmviddiff_MOD_VAR*(entries-j)))+i;\r\n					var no1=(cmvid_MOD_VAR+(cmviddiff_MOD_VAR*(entries-j-1)))+i;\r\n\r\n					if (document.editform["MOD_VAR["+no1+"]"]){\r\n\r\n						if(document.editform["MOD_VAR["+no1+"]"].type=="checkbox") {\r\n							document.editform["MOD_VAR["+no2+"]"].checked=document.editform["MOD_VAR["+no1+"]"].checked;\r\n						}\r\n						if(document.editform["MOD_VAR["+no1+"]"].type=="text" || document.editform["MOD_VAR["+no1+"]"].type=="textarea" || document.editform["MOD_VAR["+no1+"]"].type=="hidden") {\r\n							document.editform["MOD_VAR["+no2+"]"].value=document.editform["MOD_VAR["+no1+"]"].value;\r\n						}\r\n						if(document.editform["MOD_VAR["+no1+"]"].type=="select-one") {\r\n							document.editform["MOD_VAR["+no2+"]"].selectedIndex=document.editform["MOD_VAR["+no1+"]"].selectedIndex;\r\n						}\r\n						\r\n					}\r\n				}\r\n				\r\n			}\r\n			\r\n			if (val_mem_saved_MOD_VAR==false) {\r\n				for (i=no;i<no+ec_MOD_VAR;i++) {\r\n					if (document.editform["MOD_VAR["+i+"]"]){\r\n					\r\n						if(document.editform["MOD_VAR["+i+"]"].type=="checkbox") {\r\n							document.editform["MOD_VAR["+i+"]"].checked=false;\r\n						}\r\n						if(document.editform["MOD_VAR["+i+"]"].type=="text" || document.editform["MOD_VAR["+i+"]"].type=="textarea" || document.editform["MOD_VAR["+i+"]"].type=="hidden") {\r\n							document.editform["MOD_VAR["+i+"]"].value="";\r\n						}\r\n						if(document.editform["MOD_VAR["+i+"]"].type=="select-one") {\r\n							document.editform["MOD_VAR["+i+"]"].selectedIndex=null;\r\n						}\r\n						\r\n					}\r\n				}\r\n			} else {\r\n				if (centry_mem_MOD_VAR)\r\n					document.getElementById(centry_mem_MOD_VAR).style.backgroundColor="transparent";\r\n				for (i=0;i<ec_MOD_VAR;i++) {\r\n					var no1=no+i;\r\n					if (document.editform["MOD_VAR["+no1+"]"]){\r\n						if (document.editform["MOD_VAR["+no1+"]"].type=="checkbox") {\r\n							document.editform["MOD_VAR["+no1+"]"].checked=val_mem_MOD_VAR[i];\r\n						}\r\n						if (document.editform["MOD_VAR["+no1+"]"].type=="text" || document.editform["MOD_VAR["+no1+"]"].type=="textarea" || document.editform["MOD_VAR["+no1+"]"].type=="hidden") {\r\n							document.editform["MOD_VAR["+no1+"]"].value=val_mem_MOD_VAR[i];\r\n						}\r\n						if (document.editform["MOD_VAR["+no1+"]"].type=="select-one") {\r\n							document.editform["MOD_VAR["+no1+"]"].selectedIndex=val_mem_MOD_VAR[i];\r\n						}\r\n					}\r\n				}\r\n				val_mem_MOD_VAR=new Array();\r\n				val_mem_saved_MOD_VAR=false;	\r\n				centry_mem_MOD_VAR=null;			\r\n			}\r\n			\r\n		}\r\n		\r\n		function cutentry_MOD_VAR(no,entries,entry) {\r\n			if (document.editform["MOD_VAR["+no+"]"].checked==true) {\r\n				alert("Aktive Eintr√?ge k√∂nnen nicht entfernt werden!\\nActive entries can\\''t be removed!");\r\n				return false;\r\n			}	\r\n		\r\n			if (centry_mem_MOD_VAR)\r\n				document.getElementById(centry_mem_MOD_VAR).style.backgroundColor="transparent";\r\n				\r\n			document.getElementById(entry).style.backgroundColor="white";\r\n			centry_mem_MOD_VAR=entry;\r\n\r\n			val_mem_saved_MOD_VAR=true;\r\n			\r\n			for (i=0;i<ec_MOD_VAR;i++) {\r\n				var no1=no+i;\r\n				if (document.editform["MOD_VAR["+no1+"]"]){\r\n					if (document.editform["MOD_VAR["+no1+"]"].type=="checkbox") {\r\n						val_mem_MOD_VAR[i]=document.editform["MOD_VAR["+no1+"]"].checked;\r\n					}\r\n					if (document.editform["MOD_VAR["+no1+"]"].type=="text" || document.editform["MOD_VAR["+no1+"]"].type=="textarea" || document.editform["MOD_VAR["+no1+"]"].type=="hidden") {\r\n						val_mem_MOD_VAR[i]=document.editform["MOD_VAR["+no1+"]"].value;\r\n					}\r\n					if (document.editform["MOD_VAR["+no1+"]"].type=="select-one") {\r\n						val_mem_MOD_VAR[i]=document.editform["MOD_VAR["+no1+"]"].selectedIndex;\r\n					}\r\n				}\r\n			}		\r\n			\r\n			\r\n			\r\n			for (j=((no-cmvid_MOD_VAR)/cmviddiff_MOD_VAR);j<entries;j++) {\r\n			\r\n				for (i=0;i<ec_MOD_VAR;i++) {\r\n					var no2=(cmvid_MOD_VAR+(cmviddiff_MOD_VAR*(j+1)))+i;\r\n					var no1=(cmvid_MOD_VAR+(cmviddiff_MOD_VAR*(j)))+i;\r\n\r\n					if (document.editform["MOD_VAR["+no2+"]"]){\r\n						if(document.editform["MOD_VAR["+no2+"]"].type=="checkbox") {\r\n							document.editform["MOD_VAR["+no1+"]"].checked=document.editform["MOD_VAR["+no2+"]"].checked;\r\n						}\r\n						if(document.editform["MOD_VAR["+no2+"]"].type=="text" || document.editform["MOD_VAR["+no2+"]"].type=="textarea" || document.editform["MOD_VAR["+no2+"]"].type=="hidden") {\r\n							document.editform["MOD_VAR["+no1+"]"].value=document.editform["MOD_VAR["+no2+"]"].value;\r\n						}\r\n						if(document.editform["MOD_VAR["+no2+"]"].type=="select-one") {\r\n							document.editform["MOD_VAR["+no1+"]"].selectedIndex=document.editform["MOD_VAR["+no2+"]"].selectedIndex;\r\n						}\r\n					}\r\n				}\r\n			}\r\n	\r\n			for (i=(cmvid_MOD_VAR+((entries-1)*cmviddiff_MOD_VAR));i<(cmvid_MOD_VAR+((entries-1)*cmviddiff_MOD_VAR))+ec_MOD_VAR;i++) {\r\n				if (document.editform["MOD_VAR["+i+"]"]){\r\n					if(document.editform["MOD_VAR["+i+"]"].type=="checkbox") {\r\n						document.editform["MOD_VAR["+i+"]"].checked=false;\r\n					}\r\n					if(document.editform["MOD_VAR["+i+"]"].type=="text" || document.editform["MOD_VAR["+i+"]"].type=="textarea" || document.editform["MOD_VAR["+i+"]"].type=="hidden") {\r\n						document.editform["MOD_VAR["+i+"]"].value="";\r\n					}\r\n					if(document.editform["MOD_VAR["+i+"]"].type=="select-one") {\r\n						document.editform["MOD_VAR["+i+"]"].selectedIndex=null;\r\n					}\r\n				}\r\n			}	\r\n		}		\r\n\r\n\r\n		function rotateentry_MOD_VAR(no,direction) {\r\n			for (i=0;i<ec_MOD_VAR;i++) {\r\n				if (direction=="up") {\r\n					var no1=no+i;\r\n					var no2=no-cmviddiff_MOD_VAR+i;\r\n				} \r\n				if (direction=="down") {\r\n					var no1=no+i;\r\n					var no2=cmviddiff_MOD_VAR+no+i;\r\n				} \r\n				if (document.editform["MOD_VAR["+no1+"]"]){\r\n					if (document.editform["MOD_VAR["+no1+"]"].type=="checkbox") {\r\n						var val_mem1=document.editform["MOD_VAR["+no1+"]"].checked;\r\n						var val_mem2=document.editform["MOD_VAR["+no2+"]"].checked;\r\n						document.editform["MOD_VAR["+no1+"]"].checked=val_mem2;\r\n						document.editform["MOD_VAR["+no2+"]"].checked=val_mem1;\r\n					}\r\n					if (document.editform["MOD_VAR["+no1+"]"].type=="text" || document.editform["MOD_VAR["+no1+"]"].type=="textarea" || document.editform["MOD_VAR["+no1+"]"].type=="hidden") {\r\n						var val_mem1=document.editform["MOD_VAR["+no1+"]"].value;\r\n						var val_mem2=document.editform["MOD_VAR["+no2+"]"].value;\r\n						document.editform["MOD_VAR["+no1+"]"].value=val_mem2;\r\n						document.editform["MOD_VAR["+no2+"]"].value=val_mem1;\r\n					}\r\n					if (document.editform["MOD_VAR["+no1+"]"].type=="select-one") {\r\n						var val_mem1=document.editform["MOD_VAR["+no1+"]"].selectedIndex;\r\n						var val_mem2=document.editform["MOD_VAR["+no2+"]"].selectedIndex;\r\n						document.editform["MOD_VAR["+no1+"]"].selectedIndex=val_mem2\r\n						document.editform["MOD_VAR["+no2+"]"].selectedIndex=val_mem1;\r\n					}\r\n				}\r\n			}\r\n		}\r\n\r\n	</script>\r\n\r\n\r\n\r\n\r\n	\r\n	<table border="0" width="100%">\r\n	      <tr>\r\n	      <td  style="background-color:#B7D9FF;font-weight:bold;">Nr</td>\r\n	      <td  style="background-color:#B7D9FF;font-weight:bold;">Aktiv</td>\r\n	      <td  style="background-color:#DFEEFF;font-weight:bold;" style="width:90%">Typ</td>'';\r\n\r\n	$mip_forms_tab_temp = $mip_forms_tab;\r\n	\r\n	$mip_forms_tab[''open'']  = '''';\r\n	$mip_forms_tab[''close'']  = '''';\r\n	$mip_forms_tab[''left'']  = ''<!--%s-->%s'';\r\n	$mip_forms_tab[''left_width''] = '''';\r\n	$mip_forms_tab[''right''] = ''%s'';\r\n	$mip_forms_tab[''full''] = ''<td>%s<br>%s</td><td width="5">&nbsp;</td></tr>'';\r\n	$mip_forms_tab[''tab''] = ''<td width="20" valign="top">%s</td>'';	\r\n	$ecount = 100;\r\n\r\n	for($i=0;$i < $cms_mod[''value''][''0''];$i++){\r\n		$frm_active = $ecount;\r\n		$frm_type = $ecount+1;\r\n		$frm_label = $ecount+2;\r\n		$frm_default = $ecount+3;\r\n		$frm_validate = $ecount+4;\r\n		$frm_attributes_label = $ecount+5;\r\n		$frm_attributes_formelement = $ecount+6;\r\n		$frm_custom_element_error = $ecount+7;\r\n		$frm_select_elementcontainer = $ecount+8;				\r\n//n+7 custom element- error\r\n//n+8 select tpl elementcontainer		\r\n		//aktiv\r\n		$mip_form[$frm_active][''cat''] = ''chk'';\r\n		$mip_form[$frm_active][''option_var''][''0''] = ''MOD_VAR[''.$frm_active.'']'';\r\n		$mip_form[$frm_active][''option_val''][''0''] = $cms_mod[''value''][$frm_active];\r\n		$mip_form[$frm_active][''option_val_select''][''0''] = ''true'';\r\n		\r\n		//typ\r\n		$mip_form[$frm_type][''cat''] = ''option'';\r\n		$mip_form[$frm_type][''size''] = ''1'';\r\n		$mip_form[$frm_type][''option_desc''][] = ''Einzeiliges Textfeld'';\r\n		$mip_form[$frm_type][''option_val''][] =  ''text'';\r\n		$mip_form[$frm_type][''option_desc''][] = ''Einzeiliges Passwortfeld'';\r\n		$mip_form[$frm_type][''option_val''][] =  ''password'';\r\n		$mip_form[$frm_type][''option_desc''][] = ''Mehrzeiliges Textfeld'';\r\n		$mip_form[$frm_type][''option_val''][] =  ''textarea'';\r\n		$mip_form[$frm_type][''option_desc''][] = ''Selectbox'';\r\n		$mip_form[$frm_type][''option_val''][] =  ''option'';\r\n		$mip_form[$frm_type][''option_desc''][] = ''Selectbox, Mehrfachauswahl'';\r\n		$mip_form[$frm_type][''option_val''][] =  ''optionMutiple'';\r\n		$mip_form[$frm_type][''option_desc''][] = ''Optionsfelder'';\r\n		$mip_form[$frm_type][''option_val''][] =  ''radio'';\r\n		$mip_form[$frm_type][''option_desc''][] = ''Checkbox'';\r\n		$mip_form[$frm_type][''option_val''][] =  ''checkbox'';\r\n		$mip_form[$frm_type][''option_desc''][] = ''Checkbox, vorselektiert'';\r\n		$mip_form[$frm_type][''option_val''][] =  ''checkboxSelected'';\r\n		$mip_form[$frm_type][''option_desc''][] = ''Dateiupload'';\r\n		$mip_form[$frm_type][''option_val''][] =  ''upload'';\r\n		$mip_form[$frm_type][''option_desc''][] = ''Versteckter Wert'';\r\n		$mip_form[$frm_type][''option_val''][] =  ''hidden'';\r\n		$mip_form[$frm_type][''option_desc''][] = ''Nur Beschriftung'';\r\n		$mip_form[$frm_type][''option_val''][] =  ''label'';\r\n		$mip_form[$frm_type][''option_desc''][] = ''Platzhalter'';\r\n		$mip_form[$frm_type][''option_val''][] =  ''locumtenency'';		\r\n		$mip_form[$frm_type][''option_desc''][] = ''Captchabild'';\r\n		$mip_form[$frm_type][''option_val''][] =  ''captchaimage'';		\r\n		$mip_form[$frm_type][''cms_var''] = ''MOD_VAR[''.$frm_type.'']'';\r\n		$mip_form[$frm_type][''cms_val''] = $cms_mod[''value''][$frm_type];\r\n		\r\n		//label\r\n		$label_element = ''<input type="text" name="MOD_VAR[''.$frm_label.'']" style="width:240px" value="''.htmlentities( $cms_mod[''value''][$frm_label], ENT_COMPAT, ''UTF-8'' ).''" />'';\r\n		\r\n		//default\r\n		$def_element = ''<input type="text" name="MOD_VAR[''.$frm_default.'']" style="width:240px" value="''.htmlentities( $cms_mod[''value''][$frm_default], ENT_COMPAT, ''UTF-8'' ).''" />'';\r\n		\r\n		//opt attributes\r\n		$opt_attributes_label = ''<input type="text" name="MOD_VAR[''.$frm_attributes_label.'']" style="width:240px" value="''.htmlentities( $cms_mod[''value''][$frm_attributes_label], ENT_COMPAT, ''UTF-8'' ).''" />'';\r\n		$opt_attributes_formelement = ''<input type="text" name="MOD_VAR[''.$frm_attributes_formelement.'']" style="width:240px" value="''.htmlentities( $cms_mod[''value''][$frm_attributes_formelement], ENT_COMPAT, ''UTF-8'' ).''" />'';\r\n		\r\n		//custom error\r\n		$frm_custom_element_error = ''<input type="text" name="MOD_VAR[''.$frm_custom_element_error.'']" style="width:240px" value="''.htmlentities( $cms_mod[''value''][$frm_custom_element_error], ENT_COMPAT, ''UTF-8'' ).''" />'';\r\n		\r\n		//validierung\r\n		$mip_form[$frm_validate][''cat''] = ''option'';\r\n		$mip_form[$frm_validate][''size''] = ''1'';\r\n		$mip_form[$frm_validate][''option_desc''][] = ''Keine'';\r\n		$mip_form[$frm_validate][''option_val''][] =  ''false'';\r\n		$mip_form[$frm_validate][''option_desc''][] = ''Nicht leer'';\r\n		$mip_form[$frm_validate][''option_val''][] =  ''required'';\r\n		$mip_form[$frm_validate][''option_desc''][] = ''Email'';\r\n		$mip_form[$frm_validate][''option_val''][] =  ''email'';\r\n		$mip_form[$frm_validate][''option_desc''][] = ''Email oder leer'';\r\n		$mip_form[$frm_validate][''option_val''][] =  ''emailOrEmpty'';\r\n		$mip_form[$frm_validate][''cms_var''] = ''MOD_VAR[''.$frm_validate.'']'';\r\n		$mip_form[$frm_validate][''cms_val''] = $cms_mod[''value''][$frm_validate];\r\n		\r\n		//tpl elementcontainer\r\n		$mip_form[$frm_select_elementcontainer][''cat''] = ''option'';\r\n		$mip_form[$frm_select_elementcontainer][''size''] = ''1'';\r\n		$mip_form[$frm_select_elementcontainer][''option_desc''][] = ''Elementcontainer 1'';\r\n		$mip_form[$frm_select_elementcontainer][''option_val''][] =  ''1'';\r\n		$mip_form[$frm_select_elementcontainer][''option_desc''][] = ''Elementcontainer 2''; \r\n		$mip_form[$frm_select_elementcontainer][''option_val''][] =  ''2'';\r\n		$mip_form[$frm_select_elementcontainer][''option_desc''][] = ''Elementcontainer 3'';\r\n		$mip_form[$frm_select_elementcontainer][''option_val''][] =  ''3'';\r\n		$mip_form[$frm_select_elementcontainer][''option_desc''][] = ''Elementcontainer 4''; \r\n		$mip_form[$frm_select_elementcontainer][''option_val''][] =  ''4'';\r\n		$mip_form[$frm_select_elementcontainer][''cms_var''] = ''MOD_VAR[''.$frm_select_elementcontainer.'']'';\r\n		$mip_form[$frm_select_elementcontainer][''cms_val''] = $cms_mod[''value''][$frm_select_elementcontainer];\r\n\r\n		\r\n		$cf_formfieldtable .= ''<tr>'';\r\n		$element_nr = ($i < 9) ? (''0''. ($i+1) ): $i+1;\r\n		$cf_formfieldtable .= ''<td valign="top" style="background-color:#B7D9FF"><b>''. $element_nr  .''</b></td>'';\r\n		$cf_formfieldtable .= ''<td align="center" valign="top"  style="background-color:#B7D9FF">''. mip_forms($mip_form[$frm_active]) .''</td>'';\r\n		$cf_formfieldtable .= ''<td valign="top" style="background-color:#DFEEFF">''. mip_forms($mip_form[$frm_type]) .''</td>'';\r\n		$cf_formfieldtable .= ''</tr><tr><td align="center" colspan="2" style="padding-top:3px;background-color:#B7D9FF;">'';\r\n		if ($cms_mod[''value''][''0'']>1)\r\n			$cf_formfieldtable .= ''			<div id="copy_MOD_VAR_''.$ecount.''" style="padding:3px 3px 3px 3px;width:40px;margin:auto;"	>\r\n				<input type="button" value="cut" title="Formularfled ausschneiden, darunterliegenden Felder r√?cken um eine Position nach oben" onclick="cutentry_MOD_VAR(''.$ecount.'',''.$cms_mod[''value''][''0''].'',\\''copy_MOD_VAR_''.$ecount.''\\'')" style="width:40px;font-weight:bold;font-size:10px;display:block;" />\r\n				<input type="button" value="copy" title="In die Zwischenablage kopieren" onclick="copyentry_MOD_VAR(''.$ecount.'',\\''copy_MOD_VAR_''.$ecount.''\\'')" style="width:40px;font-weight:bold;font-size:10px;cursor:pointer;display:block;" />\r\n				<input type="button" value="paste" title="Einf√?gen, vorhandene Formulardaten werden √?berschrieben" onclick="pasteentry_MOD_VAR(''.$ecount.'')" style="width:40px;font-weight:bold;font-size:10px;cursor:pointer;display:block;" />\r\n				<input type="button" value="insert" title="Einf√?gen, vorhanden Formulardaten verschieben sich eine Position nach unten" onclick="inserentry_MOD_VAR(''.$ecount.'',''.$cms_mod[''value''][''0''].'');" style="width:40px;font-weight:bold;font-size:10px;cursor:pointer;display:block;" />\r\n			</div>			\r\n			<div style="padding:3px 3px 5px 3px;width:40px;margin:auto;"	>'';\r\n\r\n		if ($i>0)\r\n			$cf_formfieldtable .= ''				<input type="button" value="up" title="Eine Position nach oben verschieben" onclick="rotateentry_MOD_VAR(''.$ecount.'',\\''up\\'');" style="width:40px;font-weight:bold;font-size:10px;cursor:pointer;display:block;" />'';\r\n		else\r\n			$cf_formfieldtable .= ''				<div style="width:40px;height:18px;">&nbsp;</div>'';\r\n	\r\n		if ($i<$cms_mod[''value''][''0'']-1)\r\n			$cf_formfieldtable .= ''				<input type="button" value="down" title="Eine Position nach unten verschieben" onclick="rotateentry_MOD_VAR(''.$ecount.'',\\''down\\'')" style="width:40px;font-weight:bold;font-size:10px;cursor:pointer;display:block;" />'';\r\n		else\r\n			$cf_formfieldtable .= ''				<div style="width:40px;height:18px;">&nbsp;</div>'';		\r\n\r\n\r\n		$cf_formfieldtable .= ''			</div></div>\r\n		</td><td>'';\r\n		\r\n		$cf_formfieldtable .= ''<table border="0" width="100%">\r\n	      <tr style="font-weight: bold;">\r\n	      <td>Label</td>\r\n	      <td>Defaultwert*</td>\r\n	      <td>Validierung</td>\r\n	      </tr>\r\n	      <tr>\r\n	      <td>''. $label_element .''</td>\r\n	      <td>''. $def_element .''</td>\r\n	      <td>''. mip_forms($mip_form[$frm_validate]) .''</td>\r\n	      </tr>\r\n	      <tr style="font-weight: bold;">\r\n	      <td>Optionale Attribute Label</td>\r\n          <td>Opt. Attribute Formularelement</td>\r\n          <td>Template</td>\r\n	      </tr>\r\n	      <tr>\r\n	      <td>''. $opt_attributes_label .''</td>\r\n		  <td>''. $opt_attributes_formelement .''</td>\r\n          <td>''.mip_forms($mip_form[$frm_select_elementcontainer]).''</td>\r\n	      </tr>\r\n	      <tr style="font-weight: bold;">\r\n	      <td>Fehlermeldung</td>\r\n          <td></td>\r\n          <td></td>\r\n	      </tr>\r\n	      <tr>\r\n	      <td>''. $frm_custom_element_error .''</td>\r\n		  <td></td>\r\n          <td></td>\r\n	      </tr>\r\n	      </table>'';\r\n	      \r\n	    $cf_formfieldtable .= ''</td></tr>'';\r\n		\r\n		$ecount = $ecount+20;		\r\n	}\r\n	$mip_forms_tab = $mip_forms_tab_temp;\r\n	      	\r\n	\r\n	$cf_formfieldtable .= ''</table>\r\n	<small>*: Wird das Element Selectbox ausgew√?hlt, sind die einezelnen Auswahlelemente kommasepariert anzugben,\r\n	z.B. "Tomaten ,Birnen ,Orangen". Checkbox- Defaultwerte werden im Formular nicht angezeigt. Wird die\r\n	Checkbox vom Versender markiert, wird dieser Wert im √?bermittelten Kontaktformular sichtbar.</small>'';\r\n	\r\n	\r\n	$cf_formfieldtable .= ''<table cellspacing="0" cellpadding="0" border="0" width="100%">\r\n	  <tr>\r\n	    <td align="right"><select name="MOD_VAR[1]" size="1" onchange="document.editform.action.value=\\''change\\'';if(document.editform.anchor){document.editform.anchor.value=\\''''. $_container_name .''\\''};document.editform.submit();">\r\n	      <option value="0" selected>Spalte erstellen - l√∂schen</option>'';\r\n	      if ($cms_mod[''value''][''0''] >= ''13'') $cf_formfieldtable .= "<option value=\\"-12\\">-12</option>";\r\n	      if ($cms_mod[''value''][''0''] >= ''7'') $cf_formfieldtable .= "<option value=\\"-6\\">-6</option>";\r\n	      if ($cms_mod[''value''][''0''] >= ''4'') $cf_formfieldtable .= "<option value=\\"-3\\">-3</option>";\r\n	      if ($cms_mod[''value''][''0''] >= ''3'') $cf_formfieldtable .= "<option value=\\"-2\\">-2</option>";\r\n	      if ($cms_mod[''value''][''0''] >= ''2'') $cf_formfieldtable .= "<option value=\\"-1\\">-1</option>";\r\n	      $cf_formfieldtable .= ''<option value="1">+1</option>\r\n	      <option value="2">+2</option>\r\n	      <option value="3">+3</option>\r\n          <option value="6">+6</option>\r\n          <option value="12">+12</option>\r\n	    </select><br /><br /></td>\r\n	  </tr>\r\n	</table>'';\r\n	//------------------------------------------------\r\n	//END GENERATE FORMFIELDS\r\n	//------------------------------------------------\r\n\r\nmip_forms_tabpane_beginp();\r\nmip_forms_tabitem_beginp(''Formularfelder'');	\r\n	mip_formsp($mip_form[''0'']);//hidden anzahl formularfehler\r\n	echo $cf_formfieldtable;//all formfields\r\nmip_forms_tabitem_endp();\r\n\r\nmip_forms_tabitem_beginp(''Maileinstellungen'');\r\n	echo ''<p><strong>Email 1:</strong></p>'';\r\n	mip_formsp($mip_form[''65'']);//select email versenden ja, nein\r\n	mip_formsp($mip_form[''desc'']);//email empf√?nger\r\n	mip_formsp($mip_form[''12'']);//empf√?nger aus textfeld\r\n	mip_formsp($mip_form[''57'']);//txt email cc \r\n	mip_formsp($mip_form[''58'']);//txt email bcc\r\n	mip_formsp($mip_form[''41'']);//empf√?nger aus GET Parameter\r\n	mip_formsp($mip_form[''27'']);//email absender\r\n	mip_formsp($mip_form[''11'']);//subject\r\n	mip_formsp($mip_form[''56'']);//template email\r\n	//DEPRECATED\r\n	//	mip_formsp($mip_form[''28'']);//mit fieldset\r\n	//	mip_formsp($mip_form[''29'']);//fieldset legend\r\n	\r\n	echo ''<p><strong>Email 2:</strong></p>'';\r\n	mip_formsp($mip_form[''68'']);//select Weitere Email verschicken ja|nein\r\n	mip_formsp($mip_form[''80'']);//txt Weitere Email Emailadresse Absender\r\n	mip_formsp($mip_form[''81'']);//txt Weitere Email Emailadresse Empf√?nger\r\n	mip_formsp($mip_form[''69'']);//txt Weitere Email subject\r\n	mip_formsp($mip_form[''70'']);//txtarea template Weitere Email\r\n	\r\nmip_forms_tabitem_endp();\r\nmip_forms_tabitem_beginp(''Styles'');\r\n	mip_formsp($mip_form[''15'']);//style fehler		\r\n	mip_formsp($mip_form[''16'']);//style best√?tigung		\r\n	mip_formsp($mip_form[''17'']);//style label	\r\n	mip_formsp($mip_form[''18'']);//style label bei fehler\r\n	mip_formsp($mip_form[''53'']);//style fehlermeldung im element		\r\n\r\n	mip_formsp($mip_form[''19'']);//style text		\r\n	mip_formsp($mip_form[''31'']);//style passwort		\r\n	mip_formsp($mip_form[''20'']);//style textarea	\r\n	mip_formsp($mip_form[''21'']);//style select		\r\n	mip_formsp($mip_form[''32'']);//style select, mutiple		\r\n	mip_formsp($mip_form[''33'']);//style option		\r\n	mip_formsp($mip_form[''22'']);//style checkbox\r\n	mip_formsp($mip_form[''52'']);//style upload		\r\n	mip_formsp($mip_form[''34'']);//style nur beschriftung\r\n	mip_formsp($mip_form[''79'']);//style captcha textfield		\r\n	mip_formsp($mip_form[''35'']);//style label\r\n	mip_formsp($mip_form[''23'']);//style submitbutton		\r\n\r\nmip_forms_tabitem_endp();\r\nmip_forms_tabitem_beginp(''Meldungen & Templates'');\r\n	echo ''<p><strong>Meldungen:</strong></p>'';\r\n	mip_formsp($mip_form[''14'']);//erfolgreich verschickt\r\n	mip_formsp($mip_form[''24'']);//beschriftung submitbutton\r\n	mip_formsp($mip_form[''13'']);//fehler\r\n	mip_formsp($mip_form[''49'']);//upload err ext\r\n	mip_formsp($mip_form[''50'']);//upload err size\r\n	mip_formsp($mip_form[''51'']);//upload err int\r\n	\r\n	echo ''<p><strong>Templates:</strong></p>'';\r\n	mip_formsp($mip_form[''25'']);//template gesamt		\r\n	mip_formsp($mip_form[''26'']);//template elementcontainer 1\r\n	mip_formsp($mip_form[''46'']);//template elementcontainer 2\r\n	mip_formsp($mip_form[''66'']);//template elementcontainer 3\r\n	mip_formsp($mip_form[''86'']);//template elementcontainer 4\r\n	mip_formsp($mip_form[''82'']);//template requirenotice\r\n	mip_formsp($mip_form[''83'']);//template labelcontent\r\n	mip_formsp($mip_form[''78'']);//template captchaimage		\r\n	mip_formsp($mip_form[''38'']);//template messageblock		\r\n	mip_formsp($mip_form[''39'']);//template formstart		\r\n	mip_formsp($mip_form[''40'']);//template formend	\r\n	mip_formsp($mip_form[''42'']);//template platzhalter\r\n	mip_formsp($mip_form[''43'']);//template element fehler\r\n	mip_formsp($mip_form[''54'']);//template standard {textfromdynamic} \r\n	mip_formsp($mip_form[''55'']);//template standard {textareafromdynamic} \r\n	\r\nmip_forms_tabitem_endp();\r\nmip_forms_tabitem_beginp(''Sonstiges'');\r\n	\r\n	echo ''<p><strong>Captcha:</strong></p>'';\r\n	mip_formsp($mip_form[''73'']);//txt captchaimage length\r\n	mip_formsp($mip_form[''74'']);//txt captchaimage width\r\n	mip_formsp($mip_form[''75'']);//txt captchaimage height\r\n	mip_formsp($mip_form[''76'']);//txt captchaimage attributes\r\n	mip_formsp($mip_form[''77'']);//txt captchaimage styleset\r\n\r\n	echo ''<p><strong>Dateiuploads:</strong></p>'';\r\n	mip_formsp($mip_form[''47'']);//upload allowed extensions\r\n	mip_formsp($mip_form[''48'']);//upload max filesize\r\n	mip_formsp($mip_form[''61'']);//select Dateiuploads im Dateisystem ablegen\r\n	mip_formsp($mip_form[''62'']);//select Ordner f√?r Uploads\r\n	\r\n	//reportviewersettings\r\n	if(is_file($cfg_cms[''cms_path''].''plugins/reportviewer/index.php'')) {\r\n		echo ''<p><strong>Reportviewer:</strong></p>'';\r\n		mip_formsp($mip_form[''59'']);//select daten in db speichern ja, nein\r\n		mip_formsp($mip_form[''60'']);//txt default gruppen identifier \r\n		mip_formsp($mip_form[''71'']);//select gespeicherte db werte sind online|offline\r\n	}\r\n\r\n	echo ''<p><strong>Logging:</strong></p>'';\r\n	mip_formsp($mip_form[''63'']);//select Formulareingaben mitloggen ja/ nein\r\n	mip_formsp($mip_form[''64'']);//txt logfile relativ vom frontend aus, default logs/\r\n	\r\n	echo ''<p><strong>Sonstige Einstellungen:</strong></p>'';\r\n	mip_formsp($mip_form[''67'']);//weiterleitung bei erfolg\r\n	mip_formsp($mip_form[''44'']);//debug\r\n	mip_formsp($mip_form[''36'']);//trenner - einzelne auswahlm√∂glichkeiten\r\n	mip_formsp($mip_form[''37'']);//trenner - key, value FEATURE VERSCHOBEN\r\n	mip_formsp($mip_form[''10'']);//configmode\r\n	mip_formsp($mip_form[''72'']);//txt addon object	\r\n	\r\n		\r\nmip_forms_tabitem_endp();\r\nmip_forms_tabpane_endp();\r\n\r\n}\r\nunset($mip_form);\r\n\r\n\r\n\r\n\r\n\r\n} // end $is_dev\r\nunset($is_dev);\r\n?>',`output` = '<CMSPHP>\r\n    $is_dev = false;\r\n</CMSPHP>\r\n\r\n\r\n<CMSPHP:CACHE>\r\n    // (c) 2004 - 2006 by Bj√∂rn Brockmann\r\n    // needs PHP 4.1+\r\n\r\n    //Alle Variablen, die nur innerhalb des gecachten PHPs sichtbar sind, auch f√?r dynamisches PHP zur Verf√?gung stellen\r\n    echo ''<CMSPHP>'';\r\n        if (is_array($cms_mod[''value''])) {\r\n        foreach($cms_mod[''value''] AS $k => $v){\r\n        echo ''$mvars["''.$k.''"] = "''. addslashes($v) .''";''."\\n";\r\n        }}\r\n        echo ''</CMSPHP>'';\r\n</CMSPHP:CACHE>\r\n\r\n<CMSPHP>\r\nif ($is_dev) {\r\n    include "C:/Programme/xampp/htdocs/sefrengo_dev/moddev/kontakformularOUT.php";\r\n} else {\r\n\r\n    if (!class_exists(''gooseberry_form'')) {\r\n        class gooseberry_form\r\n        {\r\n            var $version = 0.83;\r\n            //debug mode\r\n            var $debug = false;\r\n            //debug message\r\n            var $debugmessage = '''';\r\n            //send mail\r\n            var $send_mail = true;\r\n            //logging\r\n            var $logging_active = false;\r\n            var $logging_file = ''logs/contact_log.txt'';\r\n\r\n            var $charset = ''iso-8859-1'';\r\n            var $is_rule_violation = false;\r\n            var $invalid_fields = array();\r\n            var $rules = array(\r\n                ''required'' => ''/(\\s|\\S)/'',\r\n                ''email'' => ''/^[a-zA-Z0-9\\._-]+\\@(\\[?)[a-zA-Z0-9\\-\\.]+\\.([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/'',\r\n                ''emailOrEmpty'' => ''/(^$)|(^[a-zA-Z0-9\\._-]+\\@(\\[?)[a-zA-Z0-9\\-\\.]+\\.([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$)/''\r\n            );\r\n            var $field_styles = array();\r\n            var $stack = array();\r\n\r\n            //final template to combinate all elements\r\n            var $combination_tpl = ''<table border="0" cellpadding="0" cellspacing="0">\r\n        <tr><td align="right" colspan="2">{usermessage}</td></tr>\r\n        {formstart} {formelementblock}\r\n        <tr><td align="right" colspan="2">{submit}</td></tr>\r\n        {formend}\r\n    </table>'';\r\n\r\n            //message block template\r\n            var $message_block_tpl = ''{usermessage}'';\r\n\r\n            //template for the form element seperator\r\n            var $separator_tpl = ''<br /><br />'';\r\n\r\n            //template for one form row\r\n            var $row_tpl = array(1 => ''<tr><td valign="top">{label} &nbsp;&nbsp;</td><td>{element}</td></tr>'');\r\n\r\n            //template labelcontent\r\n            var $tpl_labeltext = ''{labelcontent}{requirenotice}'';\r\n\r\n            //template required notice\r\n            var $tpl_label_required_notice = ''&nbsp;*'';\r\n\r\n            //template for formstarttag\r\n            var $tpl_formstarttag = ''<form id="b2st-form" method="post" action="{url}" enctype="multipart/form-data">'';\r\n\r\n            //template for formendttag\r\n            var $tpl_formendtag = ''</form>'';\r\n\r\n            //template for elementerror\r\n            var $tpl_elementerror = ''{errormessage}<br /><br />'';\r\n\r\n            //some fallbacks if get mode is active, but no data was found\r\n            var $fallback_textfromdynamic = '''';\r\n            var $fallback_textareafromdynamic = '''';\r\n\r\n            //url for form- action- parameter\r\n            var $form_target_url;\r\n\r\n            //email receiptor mode - possible values are textfield and get\r\n            var $email_receiptor_mode = ''textfield'';\r\n\r\n            //settings for email receiptor mode ''get''\r\n            var $email_receiptor_get_mode_idcatside;\r\n            var $email_receiptor_get_mode_idcontainer;\r\n\r\n            //settings for email receiptor mode ''textfield''\r\n            var $email_receiptor_textfield_mode_mailadress;\r\n\r\n            // cc and bcc\r\n            var $email_receiptor_cc;\r\n            var $email_receiptor_bcc;\r\n\r\n\r\n            //emailadress sender\r\n            var $email_sender;\r\n\r\n            //email subject\r\n            var $email_subject;\r\n\r\n            //success message\r\n            var $message_success = ''Vielen Dank, die Daten wurden versandt'';\r\n\r\n            //error message\r\n            var $message_error = ''Bitte √?berpr√?fen Sie Ihre Formulareingaben:'';\r\n\r\n            //submitbutton text\r\n            var $submitbutton_text = ''Abschicken'';\r\n\r\n            //mutiple value separator\r\n            var $mutiple_value_separator = '','';\r\n\r\n            //key/ value separator\r\n            var $key_value_separator = ''@@'';\r\n\r\n            //all hidden values\r\n            var $hiddenvalues;\r\n\r\n            //email template\r\n            var $tpl_email = ''{automessage}'';\r\n\r\n            //send confirmmail\r\n            var $confirm_mail_active = false;\r\n            //\r\n            var $confirm_mail_subject = ''Kontaktformular Confirm'';\r\n            //\r\n            var $confirm_mail_tpl = ''{automessage}'';\r\n\r\n            //addon object\r\n            var $addon;\r\n\r\n\r\n            //2d array with all informations about uploaded files in it\r\n            //[''element_name''][''file''] - filepath\r\n            //[''element_name''][''error''] - contains errormessage for user if occurs\r\n            //[''element_name''][''int_error''] - contains internal errormessage\r\n            var $uploads = array();\r\n\r\n            var $upload_errors = array(\r\n                ''deb_filesize_php_ini'' => ''Die hochgeladene Datei ueberschreitet die in der Anweisung upload_max_filesize in php.ini festgelegte Groesse.'',\r\n                ''deb_filesize_browser'' => ''Die hochgeladene Datei ueberschreitet die in dem HTML Formular mittels der Anweisung MAX_FILE_SIZE angegebene maximale Dateigroesse.'',\r\n                ''deb_filesize_incremental'' => ''Die Datei wurde nur teilweise hochgeladen.'',\r\n                ''deb_no_file'' => ''Es wurde keine Datei hochgeladen.'',\r\n                ''deb_filecopy_fails'' => ''upload fails - check writepremissons for backend/upload/in/'',\r\n                ''usr_allowed_ext'' => ''Dieser Dateityp darf nicht hochgeladen werden'',\r\n                ''usr_allowed_size'' => ''Die maximal zulaessige Dateigroesse wurde ueberschritten'',\r\n                ''usr_internal_error'' => ''Beim Upload ist ein interner Fehler aufgetreten''\r\n            );\r\n\r\n            //allowed fileextensions for uploadfiles - comma separated\r\n            var $upload_allowed_extensions;\r\n\r\n            //allowed filesize for uploadfiles in kb\r\n            var $upload_allowed_filesize;\r\n\r\n            //temp upload dir for files\r\n            var $upload_dir;\r\n\r\n            //snippet replacement stuff. Possible values are str unknown, true false\r\n            var $snippet_replacement_found = ''unknown'';\r\n            var $snippet_object = false;\r\n\r\n            function __construct()\r\n            {\r\n                $this->addon = new gooseberry_form_addon;\r\n            }\r\n\r\n\r\n            /*\r\n            * -----------------------------------------------------------\r\n            * FORM PARSER METHODS\r\n            * -----------------------------------------------------------\r\n            */\r\n            function parse_elements()\r\n            {\r\n                $this->parsed_plain = '''';\r\n                $this->parsed = '''';\r\n                $p = '''';\r\n                $pp = '''';\r\n                //print_r($this->stack);\r\n                foreach ($this->stack AS $k => $v) {\r\n\r\n                    //addon preParse\r\n                    $this->addon->onPreParse($v, $this->stack);\r\n\r\n                    //collect all hidden values separatly\r\n                    if ($v[''type''] == ''hidden'') {\r\n                        $this->hiddenvalues .= $this->get_formelement($v[''name''], $v[''type''], $v[''value''],\r\n                            $v[''default_value''], $v[''opt_attributes_formelement'']);\r\n                        continue;\r\n                    }\r\n\r\n                    //special handling for checkboxes in plainform / unchecked checkboxes have no value\r\n                    $def_v_for_plain = ($v[''type''] == ''checkbox'' && $this->is_submitted()) ? $v[''default_value''] : $v[''default_value''];\r\n\r\n                    //get formelement\r\n                    $element = $this->get_formelement($v[''name''], $v[''type''], $v[''value''], $v[''default_value''],\r\n                        $v[''opt_attributes_formelement''], false);\r\n\r\n                    //get plain HTML formelement\r\n                    if ($v[''type''] != ''captchaimage'') {\r\n                        $element_plain = $this->get_formelement($v[''name''], $v[''type''], $def_v_for_plain,\r\n                            $v[''default_value''], $v[''opt_attributes_formelement''], true);\r\n                    } //no need to generate a second captcha for plainform\r\n                    else {\r\n                        $element_plain = $element;\r\n                    }\r\n\r\n                    //find out if element must validate\r\n                    $mv = (($v[''validate_rule''] != ''false'' && $v[''validate_rule''] != ''emailOrEmpty'')) ? true : false;\r\n\r\n                    //special validation for ceckboxes and radios\r\n                    if ($v[''type''] == ''checkbox'' || $v[''type''] == ''radio'') {\r\n                        $vr = $this->validate($v[''validate_rule''], $_REQUEST[$v[''name'']]);\r\n                    } //special validation for uploads\r\n                    else {\r\n                        if ($v[''type''] == ''upload'') {\r\n                            $vr = $this->validate_upload($v[''name''], $v[''label''], $v[''validate_rule''], $k);\r\n\r\n                            // upload fails\r\n                            if (!$vr) {\r\n                                if ($this->uploads[$v[''name'']][''error''] != '''') {\r\n                                    $v[''errormessage''] = $this->uploads[$v[''name'']][''error''];\r\n                                }\r\n                            }\r\n                            //validate captcha\r\n                        } else {\r\n                            if ($v[''type''] == ''captchaimage'' && $this->is_submitted()) {\r\n                                $this->init_captcha_object();\r\n                                $vr = $this->captcha_object->validateByCharseqAndRequestFieldname($v[''value''],\r\n                                    $v[''name'']);\r\n                                if (!$vr) {\r\n                                    $this->is_rule_violation = true;\r\n                                }\r\n                            } //validate other elements\r\n                            else {\r\n                                $vr = $this->validate($v[''validate_rule''], $v[''value'']);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //validation fail - set error\r\n                    if (!$vr) {\r\n                        array_push($this->invalid_fields, $v[''label'']);\r\n                    }\r\n\r\n                    //addon validate\r\n                    $this->addon->onValidate($v, $vr, $this->stack);\r\n\r\n                    //get label\r\n                    $label = $this->get_label($v[''name''], $v[''label''], $v[''opt_attributes_label''], $mv, $vr);\r\n\r\n                    //addon parse row\r\n                    $this->addon->onParseRow($v, $label, $element, $element_plain, $this->stack);\r\n\r\n                    //add to forms\r\n                    $p .= $this->parse_form_row($v[''tpl_index''], $label, $element, $vr, $v[''errormessage''], $mv);\r\n                    $pp .= $this->parse_form_row($v[''tpl_index''], $label, $element_plain, false, false, $mv);\r\n                }\r\n\r\n                $this->parsed = $p;\r\n                $this->parsed_plain = $pp;\r\n\r\n                //log errors\r\n                if (count($this->invalid_fields) > 0 && $this->logging_active) {\r\n                    $logmessage = sprintf("%s: Mail Rule Violation: %s%s\\n\\n", date(''Y-m-d (D) H:i:s''),\r\n                        "IP: " . $_SERVER[''REMOTE_ADDR''] . "\\n-------------------------------\\n",\r\n                        "Invalied Fields: " . implode('', '',\r\n                            $this->invalid_fields) . "\\n" . "Values:$log \\n-------------------------------\\n");\r\n                    $this->_log($logmessage);\r\n                }\r\n\r\n                //set controlvalue formwassubmitted as hiddenvalue\r\n                $this->hiddenvalues .= $this->get_formelement(''formSubmitted'', ''hidden'', ''true'', ''true'');\r\n\r\n                //if email receiver mode =''get'', add some more hiddenvalues\r\n                if ($this->email_receiptor_mode == ''get'') {\r\n                    $this->hiddenvalues .= $this->get_formelement(''contactidcs'', ''hidden'',\r\n                        $this->email_receiptor_get_mode_idcatside, '''');\r\n                    $this->hiddenvalues .= $this->get_formelement(''contactcontainer'', ''hidden'',\r\n                        $this->email_receiptor_get_mode_idcontainer, '''');\r\n                }\r\n\r\n                if ($this->is_submitted() && !$this->is_validated()) {\r\n                    $this->addon->onFailure($this->stack);\r\n                }\r\n            }\r\n\r\n            function get_label($element_name, $element_label, $element_attributes, $must_validated, $is_validated)\r\n            {\r\n\r\n                $rn = ($must_validated) ? $this->tpl_label_required_notice : '''';\r\n                //{labelcontent}{requirenotice}\r\n                $element_label = str_replace(array(''{labelcontent}'', ''{requirenotice}''), array($element_label, $rn),\r\n                    $this->tpl_labeltext);\r\n                $style = (!$is_validated) ? $this->field_styles[''label_error''] : $this->field_styles[''label''];\r\n                $label = ($style != '''') ? ''<span class="'' . $style . ''">'' . $element_label . ''</span>'' : $element_label;\r\n\r\n                return ''<label for="'' . $element_name . ''" '' . $element_attributes . '' >'' . $label . ''</label>'';\r\n            }\r\n\r\n            function parse_form_row($tplindex, $label, $element, $is_valid = true, $errormessage = '''', $must_validated)\r\n            {\r\n                $errormessage = ($is_valid) ? '''' : $errormessage;\r\n                $rn = ($must_validated) ? $this->tpl_label_required_notice : '''';\r\n\r\n                if ($errormessage != '''') {\r\n                    $errormessage = str_replace(''{elementerrormessage}'', $errormessage, $this->tpl_elementerror);\r\n                    $errormessage = $this->_get_styled_message($errormessage, $this->field_styles[''element_error'']);\r\n                }\r\n\r\n                return str_replace(array(''{label}'', ''{element}'', ''{errormessage}'', ''{requirenotice}''),\r\n                    array($label, $element, $errormessage, ''''), $this->row_tpl[$tplindex]);\r\n            }\r\n\r\n            function get_formelement(\r\n                $element_name,\r\n                $element_type,\r\n                $element_value,\r\n                $element_default_value,\r\n                $element_attributes = '''',\r\n                $get_plain = false\r\n            ) {\r\n\r\n                switch ($element_type) {\r\n                    case ''hidden'':\r\n                        $e = ''<input type="hidden" name="'' . $element_name . ''" id="'' . $element_name . ''" '';\r\n                        $e .= '' value="'' . $this->_htmlentities($element_value) . ''" '' . $element_attributes . '' />'';\r\n                        break;\r\n                    case ''text'':\r\n                    case ''password'':\r\n                        $e = ''<input type="'' . $element_type . ''" name="'' . $element_name . ''" id="'' . $element_name . ''" '' . $this->_format_styleclass($this->field_styles[$element_type]) . $element_attributes . '' '';\r\n                        $e .= '' value="'' . $this->_htmlentities($element_value) . ''" />'';\r\n                        break;\r\n                    case ''textarea'':\r\n                        $e = ''<textarea name="'' . $element_name . ''"  id="'' . $element_name . ''" '' . $element_attributes . '' '' . $this->_format_styleclass($this->field_styles[$element_type]) . ''>'' . $this->_htmlentities($element_value) . ''</textarea>'';\r\n                        break;\r\n                    case ''option'':\r\n                        $e = ''<select name="'' . $element_name . ''"  id="'' . $element_name . ''"  '' . $element_attributes . '' '' . $this->_format_styleclass($this->field_styles[$element_type]) . ''>'' . "\\n";\r\n                        $p = explode($this->mutiple_value_separator, $element_default_value);\r\n                        foreach ($p AS $k => $v) {\r\n                            $v_key = $v;\r\n                            if (strstr($v, $this->key_value_separator) !== false) {\r\n                                $v_pairs = explode($this->key_value_separator, $v);\r\n                                $v_key = $v_pairs[''0''];\r\n                                $v = $v_pairs[''1''];\r\n                            }\r\n                            $s = ($element_value == $v_key && !$get_plain) ? ''selected="selected"'' : '''';\r\n                            $e .= ''<option value="'' . $this->_htmlentities($v_key) . ''" '' . $s . '' >'' . $this->_htmlentities($v) . ''</option>'' . "\\n";\r\n                        }\r\n                        $e .= ''</select>'' . "\\n";\r\n                        break;\r\n                    case ''optionMutiple'':\r\n                        $e = ''<select name="'' . $element_name . ''[]"  id="'' . $element_name . ''"  '' . $this->field_styles[$element_type] . '' multiple>'' . "\\n";\r\n                        $p = explode($this->mutiple_value_separator, $element_default_value);\r\n                        //$selected_options = (is_array($_REQUEST[$element_name])) ? $_REQUEST[$element_name] : array();\r\n                        $selected_options = explode($this->mutiple_value_separator, $element_value);\r\n                        //print_r($selected_options);\r\n                        foreach ($p AS $k => $v) {\r\n                            $s = '''';\r\n                            $v_key = $v;\r\n                            if (strstr($v, $this->key_value_separator) !== false) {\r\n                                $v_pairs = explode($this->key_value_separator, $v);\r\n                                $v_key = $v_pairs[''0''];\r\n                                $v = $v_pairs[''1''];\r\n                            }\r\n\r\n                            if (count($selected_options) > 0) {\r\n                                $s = (in_array($v_key,\r\n                                        $selected_options) && !$get_plain) ? '' selected="selected" '' : '''';\r\n                            }\r\n                            $e .= ''<option value="'' . $this->_htmlentities($v_key) . ''" '' . $s . ''>'' . $this->_htmlentities($v) . ''</option>'' . "\\n";\r\n                        }\r\n                        $e .= ''</select>'' . "\\n";\r\n                        break;\r\n                    case ''radio'':\r\n                        $p = explode($this->mutiple_value_separator, $element_default_value);\r\n                        foreach ($p AS $k => $v) {\r\n                            $v_key = $v;\r\n                            if (strstr($v, $this->key_value_separator) !== false) {\r\n                                $v_pairs = explode($this->key_value_separator, $v);\r\n                                $v_key = $v_pairs[''0''];\r\n                                $v = $v_pairs[''1''];\r\n                            }\r\n                            $c = ($element_value == $v_key && !$get_plain) ? ''checked="checked"'' : '''';\r\n                            $e .= ''<input type="radio" name="'' . $element_name . ''" id="'' . $element_name . ''" value="'' . $this->_htmlentities($v_key) . ''" '' . $c . '' />'' . ''&nbsp;'' . $this->_htmlentities($v);\r\n                        }\r\n                        break;\r\n                    case ''checkbox'':\r\n                    case ''checkboxSelected'':\r\n                        $element_default_value_key = $element_default_value;\r\n                        if (strstr($element_default_value, $this->key_value_separator) !== false) {\r\n                            $v_pairs = explode($this->key_value_separator, $element_default_value);\r\n                            $element_default_value_key = $v_pairs[''0''];\r\n                            $element_default_value = $v_pairs[''1''];\r\n                        }\r\n\r\n                        $c = (($element_default_value_key == $element_value && !$get_plain) || (!$this->is_submitted() && $element_type == ''checkboxSelected'')) ? ''checked="checked"'' : '''';\r\n                        $e = ''<input type="checkbox" name="'' . $element_name . ''"  id="'' . $element_name . ''" '' . $this->_format_styleclass($this->field_styles[''checkbox'']) . '' '';\r\n                        $e .= ''value="'' . $this->_htmlentities($element_default_value_key) . ''"  '' . $c . ''  '' . $element_attributes . '' />'' . ''<label for="'' . $element_name . ''" '' . $this->_format_styleclass($this->field_styles[''label'']) . ''>'' . $this->_htmlentities($element_default_value) . ''</label>'';\r\n                        break;\r\n                    case ''upload'':\r\n                        $e = ''<input type="file" name="'' . $element_name . ''" id="'' . $element_name . ''" '' . $this->_format_styleclass($this->field_styles[$element_type]) . $element_attributes . '' '';\r\n                        $e .= '' />'';\r\n                        break;\r\n                    case ''captchaimage'':\r\n                        $this->init_captcha_object();\r\n                        $e = $this->captcha_object->getCaptchaHtml($element_name, $this->captchavals[''length''],\r\n                            $this->_format_styleclass($this->field_styles[$element_type]) . $element_attributes,\r\n                            $this->captchavals[''attributes''], $this->captchavals[''styleset''],\r\n                            $this->captchavals[''width''], $this->captchavals[''height'']);\r\n                        break;\r\n                    case ''label''://label_as_formfield, placeholder\r\n                        $e = ''<span '' . $this->_format_styleclass($this->field_styles[''label_as_formfield'']) . '' >'' . $element_value . ''</span>'';\r\n                        break;\r\n                    case ''locumtenency'':\r\n                        $e = ''<span '' . $this->_format_styleclass($this->field_styles[''placeholder'']) . '' >'' . $this->separator_tpl . ''</span>'';\r\n                        break;\r\n                }\r\n\r\n                return $e;\r\n            }\r\n\r\n            function init_captcha_object()\r\n            {\r\n                global $cfg_client;\r\n\r\n                if (is_object($this->captcha_object)) {\r\n                    return true;\r\n                } else {\r\n                    $this->captcha_object =& sf_factoryGetObject(''GUI'', ''CaptchaImage'');\r\n                    $this->captcha_object->setCaptchaTemplate($this->captchavals[''template'']);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            function get_value($element_type, $element_name, $element_default, $element_selected, $skip_default = false)\r\n            {\r\n                //echo "$element_type, $element_name, $element_default, $element_selected, $skip_default <br>";\r\n                if (isset($_REQUEST[$element_name])) {\r\n                    $v = is_array($_REQUEST[$element_name]) ? implode($this->mutiple_value_separator,\r\n                        $_REQUEST[$element_name]) : $_REQUEST[$element_name];\r\n\r\n                    return $this->_strip_slashes($v);\r\n                } else {\r\n                    if (($element_type == ''checkbox'' || $element_type == ''checkboxSelected'' || $element_type == ''radio'') && !$_REQUEST[$element_name] && $this->is_submitted()) {\r\n                        return false;\r\n                    } else {\r\n                        if ($element_selected != '''') {\r\n                            return $element_selected;\r\n                        } else {\r\n                            if ($skip_default) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return $element_default;\r\n            }\r\n\r\n\r\n            function validate($element_validate, $element_value)\r\n            {\r\n                if (!$this->is_submitted()) {\r\n                    return true;\r\n                }\r\n\r\n                //validate captcha\r\n                if ($element_validate == ''imagecaptcha'') {\r\n                    //do nothing\r\n                } //validate regex\r\n                else {\r\n                    if (array_key_exists($element_validate, $this->rules)) {\r\n                        if (!preg_match($this->rules[$element_validate], $element_value)) {\r\n                            $this->is_rule_violation = true;\r\n\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n            function validate_upload($element_name, $element_label, $validate_rule, $stack_key)\r\n            {\r\n                $upload_dir = $this->upload_dir;\r\n                $upload_allowed_extension = $this->upload_allowed_extensions;\r\n                $upload_allowed_filesize = $this->upload_allowed_filesize;\r\n\r\n                $size = $_FILES[$element_name][''size''];\r\n                $name = $_FILES[$element_name][''name''];\r\n                $type = $_FILES[$element_name][''type''];\r\n                $tmp_name = $_FILES[$element_name][''tmp_name''];\r\n                $err = $_FILES[$element_name][''error''];\r\n                $parts = pathinfo(''sicheristsicher/'' . $name);\r\n                $ext = strtolower($parts[''extension'']);\r\n                $allowed_ext = strtolower(str_replace('' '', '''', $upload_allowed_extension));\r\n\r\n                $this->uploads[$element_name][''label''] = $element_label;\r\n                $this->uploads[$element_name][''file''] = '''';\r\n                $this->uploads[$element_name][''error''] = '''';\r\n                $this->uploads[$element_name][''int_error''] = '''';\r\n\r\n\r\n                //no file found/ uploaded\r\n                if ($tmp_name == '''') {\r\n                    //check if upload is required\r\n                    if ($validate_rule == ''required'') {\r\n                        $this->is_rule_violation = true;\r\n\r\n                        return false;\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                $upload_error = '''';\r\n                //check php errors\r\n                switch ($err) {\r\n                    case 1:\r\n                        $upload_error = $this->upload_errors[''deb_filesize_php_ini''];\r\n                        break;\r\n                    case 2:\r\n                        $upload_error = $this->upload_errors[''deb_filesize_browser''];\r\n                        break;\r\n                    case 3:\r\n                        $upload_error = $this->upload_errors[''deb_filesize_incremental''];\r\n                        break;\r\n                    case 4:\r\n                        $upload_error = $this->upload_errors[''deb_no_file''];\r\n                        break;\r\n                }\r\n\r\n                if ($err > 0) {\r\n                    $this->uploads[$element_name][''error''] = $this->upload_errors[''usr_internal_error''];\r\n                    $this->uploads[$element_name][''int_error''] = $upload_error;\r\n                    $this->is_rule_violation = true;\r\n\r\n                    return false;\r\n                }\r\n\r\n                //check extensions\r\n                if (strlen($allowed_ext) > 0) {\r\n                    $ax = explode('','', $allowed_ext);\r\n                    if (!in_array($ext, $ax)) {\r\n                        $this->uploads[$element_name][''error''] = $this->upload_errors[''usr_allowed_ext''];\r\n                        $this->is_rule_violation = true;\r\n\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                //checkfilesize\r\n                if ($upload_allowed_filesize > 0) {\r\n                    $upload_allowed_filesize *= 1024;\r\n                    if ($size > $upload_allowed_filesize) {\r\n                        $this->uploads[$element_name][''error''] = $this->upload_errors[''usr_allowed_size''];\r\n                        $this->is_rule_violation = true;\r\n\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                //move file\r\n                if (!move_uploaded_file($_FILES[$element_name][''tmp_name''], $upload_dir . $name)) {\r\n\r\n                    $this->uploads[$element_name][''error''] = $this->upload_errors[''usr_internal_error''];\r\n                    $this->uploads[$element_name][''int_error''] = $this->upload_errors[''deb_filecopy_fails''];\r\n                    $this->is_rule_violation = true;\r\n\r\n                    return false;\r\n                }\r\n\r\n                $this->uploads[$element_name][''file''] = $upload_dir . $name;\r\n                $this->uploads[$element_name][''name''] = $name;\r\n                $this->uploads[$element_name][''type''] = $type;\r\n                $this->uploads[$element_name][''size''] = $size;\r\n                $this->uploads[$element_name][''ext''] = $ext;\r\n                $this->stack[$stack_key][''advanced''] = $this->uploads[$element_name];\r\n\r\n                return true;\r\n            }\r\n\r\n\r\n            /*\r\n            * -----------------------------------------------------------\r\n            * "FORM TO FINAL HTML" AND SOME MISC METHODS\r\n            * -----------------------------------------------------------\r\n            */\r\n            function get_form()\r\n            {\r\n                return $this->_get_form();\r\n            }\r\n\r\n            function get_form_plain()\r\n            {\r\n                return $this->_get_form(true);\r\n            }\r\n\r\n            function _get_form($is_plain = false)\r\n            {\r\n                global $con_side, $con_tree, $cfg_client, $idcatside;\r\n\r\n                $frm_vals[''formstart''] = $this->get_form_head() . "\\n";\r\n                $frm_vals[''formend''] = $this->get_form_footer() . "\\n";\r\n                $frm_vals[''submit''] = $this->get_submitbutton();\r\n\r\n                $arr[''email''] = '''';\r\n                if ($this->email_receiptor_mode == ''get'' && $this->email_receiptor_get_mode_idcatside > 0) {\r\n                    $arr = $this->get_receiptor_data_from_content_as_array();\r\n                    $frm_vals[''textareafromdynamic''] = nl2br($arr[''textareafromdynamic'']);\r\n                    $frm_vals[''textfromdynamic''] = $arr[''textfromdynamic''];\r\n\r\n                    $idcatside_from = $this->email_receiptor_get_mode_idcatside;\r\n                    $frm_vals[''page_name''] = $con_side[$idcatside_from][''name''];\r\n                    $frm_vals[''page_url''] = $cfg_client[''htmlpath''] . str_replace(''&amp;'', ''&'',\r\n                            $con_side[$idcatside_from][''link'']);\r\n                    $frm_vals[''cat_name''] = $con_tree[$con_side[$idcatside_from][''idcat'']][''name''];\r\n                    $frm_vals[''cat_url''] = $cfg_client[''htmlpath''] . str_replace(''&amp;'', ''&'',\r\n                            $con_tree[$con_side[$idcatside_from][''idcat'']][''link'']);\r\n                } else {\r\n                    $frm_vals[''textareafromdynamic''] = nl2br($this->fallback_textareafromdynamic);\r\n                    $frm_vals[''textfromdynamic''] = $this->fallback_textfromdynamic;\r\n                    $frm_vals[''page_name''] = $con_side[$idcatside][''name''];\r\n                    $frm_vals[''page_url''] = $cfg_client[''htmlpath''] . str_replace(''&amp;'', ''&'',\r\n                            $con_side[$idcatside][''link'']);\r\n                    $frm_vals[''cat_name''] = $con_tree[$con_side[$idcatside][''idcat'']][''name''];\r\n                    $frm_vals[''cat_url''] = $cfg_client[''htmlpath''] . str_replace(''&amp;'', ''&'',\r\n                            $con_tree[$con_side[$idcatside][''idcat'']][''link'']);\r\n                }\r\n\r\n                if ($is_plain) {\r\n                    $frm_vals[''formelementblock''] = $this->parsed_plain;\r\n                } else {\r\n                    $frm_vals[''formelementblock''] = $this->parsed;\r\n                }\r\n                $frm_vals[''usermessage''] = $this->get_usermessage();\r\n                if ($frm_vals[''usermessage''] != '''') {\r\n                    $frm_vals[''messageblock''] = str_replace(''{usermessage}'', $this->get_usermessage(),\r\n                        $this->message_block_tpl);\r\n                } else {\r\n                    $frm_vals[''messageblock''] = '''';\r\n                }\r\n\r\n                $tpl = $this->combination_tpl;\r\n                foreach ($frm_vals AS $k => $v) {\r\n                    $tpl = str_replace(''{'' . $k . ''}'', $v, $tpl);\r\n                }\r\n\r\n                $deb = ($this->debug) ? $this->debugmessage : '''';\r\n                $tpl = str_replace(''{debugmessages}'', $deb, $tpl);\r\n\r\n                return $tpl;\r\n            }\r\n\r\n            function get_form_head()\r\n            {\r\n                $a = str_replace(''{url}'', $this->form_target_url, $this->tpl_formstarttag);\r\n                if ($_REQUEST[''formSubmitted''] == ''true'' AND $this->is_validated()) {\r\n                    $a = str_replace(''{transmitted}'', "transmitted", $a);\r\n                }\r\n\r\n                return $a;\r\n            }\r\n\r\n            function get_form_footer()\r\n            {\r\n                return $this->hiddenvalues . $this->tpl_formendtag;\r\n            }\r\n\r\n            function get_submitbutton()\r\n            {\r\n                return ''<input type="submit" name="fmsubmit" '' . $this->_format_styleclass($this->field_styles[''submitbutton'']) . '' value="'' . $this->submitbutton_text . ''" />'';\r\n            }\r\n\r\n            function get_usermessage()\r\n            {\r\n\r\n                $m = '''';\r\n                if ($this->is_submitted()) {\r\n                    if ($this->is_validated()) {\r\n                        $m = $this->_get_styled_message($this->message_success, $this->field_styles[''submit'']);\r\n                    } else {\r\n                        $m = $this->_get_styled_message($this->message_error . '' '' . $this->get_invalid_fields(),\r\n                            $this->field_styles[''submit_error'']);\r\n                    }\r\n                }\r\n\r\n                return $m;\r\n            }\r\n\r\n\r\n            function get_invalid_fields()\r\n            {\r\n                return implode('', '', $this->invalid_fields);\r\n            }\r\n\r\n            function get_stack()\r\n            {\r\n                return $this->stack;\r\n            }\r\n\r\n            function is_validated()\r\n            {\r\n                return (!$this->is_rule_violation);\r\n            }\r\n\r\n            function is_submitted()\r\n            {\r\n                return ($_REQUEST[''formSubmitted''] == ''true'');\r\n            }\r\n\r\n\r\n            /*\r\n            * -----------------------------------------------------------\r\n            * MAIL METHODS\r\n            * -----------------------------------------------------------\r\n            */\r\n            function send_mail()\r\n            {\r\n                global $con_side, $con_tree, $cfg_client, $idcatside;\r\n\r\n                $tpl_email = $this->tpl_email;\r\n\r\n                $to = '''';\r\n                if ($this->email_receiptor_mode == ''get'') {\r\n                    $arr = $this->get_receiptor_data_from_content_as_array();\r\n                    $to = trim($arr[''email'']);\r\n\r\n                    $idcatside_from = $this->email_receiptor_get_mode_idcatside;\r\n                    $page_name = $con_side[$idcatside_from][''name''];\r\n                    $page_url = $cfg_client[''htmlpath''] . str_replace(''&amp;'', ''&'', $con_side[$idcatside_from][''link'']);\r\n                    $cat_name = $con_tree[$con_side[$idcatside_from][''idcat'']][''name''];\r\n                    $cat_url = $cfg_client[''htmlpath''] . str_replace(''&amp;'', ''&'',\r\n                            $con_tree[$con_side[$idcatside_from][''idcat'']][''link'']);\r\n                }\r\n\r\n                if ($this->email_receiptor_mode == ''textfield'' || $to == '''') {\r\n                    $to = $this->email_receiptor_textfield_mode_mailadress;\r\n\r\n                    if ($this->email_receiptor_mode == ''textfield'') {\r\n                        $page_name = $con_side[$idcatside][''name''];\r\n                        $page_url = $cfg_client[''htmlpath''] . str_replace(''&amp;'', ''&'', $con_side[$idcatside][''link'']);\r\n                        $cat_name = $con_tree[$con_side[$idcatside][''idcat'']][''name''];\r\n                        $cat_url = $cfg_client[''htmlpath''] . str_replace(''&amp;'', ''&'',\r\n                                $con_tree[$con_side[$idcatside][''idcat'']][''link'']);\r\n\r\n                        $arr[''textfromdynamic''] = $this->fallback_textfromdynamic;\r\n                        $arr[''textareafromdynamic''] = $this->fallback_textareafromdynamic;\r\n                    }\r\n                }\r\n\r\n\r\n                //no emailadress found - break up\r\n                if ($to == '''' && $this->send_mail) {\r\n                    return;\r\n                }\r\n\r\n                $sender = $this->email_sender;\r\n                $subject = $this->generate_email_template($this->email_subject);\r\n\r\n\r\n                $mail =& $GLOBALS[''sf_factory'']->getObject(''UTILS'', ''Mail'');\r\n                $mail->setCharset($this->charset);\r\n                $mail->setFrom($sender);\r\n                $mail->setSubject($subject);\r\n\r\n                $arr[''to''] = explode('','', $to);\r\n                $arr[''cc''] = explode('','', $this->email_receiptor_cc);\r\n                $arr[''bcc''] = explode('','', $this->email_receiptor_bcc);\r\n                foreach ($arr AS $k => $v) {\r\n                    if (is_array($v)) {\r\n                        foreach ($v AS $adr) {\r\n                            $adr = trim($adr);\r\n                            if (substr($adr, 0, 1) == ''+'') {\r\n                                $mail->addAdressByUsername(substr($adr, 1), $k);\r\n                            } else {\r\n                                if (substr($adr, 0, 1) == ''#'') {\r\n                                    $mail->addAdressByGroupname(substr($adr, 1), $k);\r\n                                } else {\r\n                                    $mail->addAdress($adr, $k);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //add attachements\r\n                if (is_array($this->uploads)) {\r\n                    foreach ($this->uploads AS $k => $v) {\r\n                        if ($v[''file''] != '''') {\r\n                            $mail->addAttachment($v[''file''], $v[''type''], $v[''name'']);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //give possibility to manipulate the stack\r\n                ////////////////////////////////////////////////////////$this->addon->onSuccess($this->stack);\r\n\r\n                //generate email template\r\n                $tpl_email = $this->generate_email_template($tpl_email, $to, $arr[''textfromdynamic''],\r\n                    $arr[''textareafromdynamic''], $page_name, $page_url, $cat_name, $cat_url);\r\n                //echo $tpl_email;exit;\r\n                $mail->setTxtBody($tpl_email);\r\n\r\n                if ($this->debug) {\r\n                    $this->debugmessage .= "Mail to: $to || Mail from:  $sender || Mail subject: $subject <br>";\r\n                    echo $this->debugmessage .= ''Mailtext:<br>-------------<br>'' . nl2br($tpl_email) . ''<br>-------------<br>'';\r\n                }\r\n\r\n                if ($this->send_mail) {\r\n                    $result = $mail->process();//$mail->send(array($to), ''mail'');\r\n                }\r\n\r\n                //send second email\r\n                if ($this->confirm_mail_active) {\r\n                    $mail->adresses = array(\r\n                        ''to'' => array(),\r\n                        ''cc'' => array(),\r\n                        ''bcc'' => array()\r\n                    );\r\n                    $tpl_email2 = $this->generate_email_template($this->confirm_mail_tpl, $to, $arr[''textfromdynamic''],\r\n                        $arr[''textareafromdynamic''], $page_name, $page_url, $cat_name, $cat_url);\r\n\r\n\r\n                    //get sender\r\n                    if (is_numeric(trim($this->second_email_sender))) {\r\n                        foreach ($this->stack AS $k => $v) {\r\n                            if ($v[''elementnumber''] == (int)$this->second_email_sender) {\r\n                                $sender = $v[''value''];\r\n                            }\r\n                        }\r\n                    } else {\r\n                        $sender = $this->second_email_sender;\r\n                    }\r\n\r\n                    //get recipient\r\n                    if (is_numeric(trim($this->second_email_recipient))) {\r\n                        foreach ($this->stack AS $k => $v) {\r\n                            if ($v[''elementnumber''] == (int)$this->second_email_recipient) {\r\n                                $recipient = $v[''value''];\r\n                            }\r\n                        }\r\n                    } else {\r\n                        $recipient = $this->second_email_recipient;\r\n                    }\r\n\r\n\r\n                    $rec_array = explode($this->mutiple_value_separator, $recipient);\r\n\r\n\r\n                    $this->confirm_mail_subject = $this->generate_email_template($this->confirm_mail_subject);\r\n\r\n                    $mail->setFrom($sender);\r\n                    $mail->setSubject($this->confirm_mail_subject);\r\n\r\n                    foreach ($rec_array AS $v) {\r\n                        $v2 = explode($this->key_value_separator, $v);\r\n                        $mail->addAdress($v2[''0''], ''to'');\r\n                    }\r\n\r\n                    $mail->setTxtBody($tpl_email2);\r\n                    $result = $mail->process();\r\n                }\r\n\r\n                if ($this->logging_active) {\r\n                    $mailstatus = ($result) ? ''OK'' : ''Error - Mailfunction does not work'';\r\n                    $logmessage = sprintf("%s: Send Mail: %s%s\\n\\n", date(''Y-m-d (D) H:i:s''),\r\n                        "IP: " . $_SERVER[''REMOTE_ADDR''] . " Mail to: $to || Mail from:  $sender || Mail subject: $subject \\nStatus: $mailstatus \\n-------------------------------\\n",\r\n                        "Mail Conent1: $tpl_email \\n-------------------------------\\n" . "Mail Conent2: $tpl_email2 \\n-------------------------------\\n");\r\n                    $this->_log($logmessage);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            function generate_email_template(\r\n                $tpl_email,\r\n                $to = '''',\r\n                $textfromdynamic = '''',\r\n                $textareafromdynamic = '''',\r\n                $page_name = '''',\r\n                $page_url = '''',\r\n                $cat_name = '''',\r\n                $cat_url = ''''\r\n            ) {\r\n\r\n                // convert all linebreaks to \\r\\n linebreaks\r\n                $tpl_email = preg_replace("#(\\r\\n)|(\\r)#m", "\\n", $tpl_email);\r\n                //$tpl_email = preg_replace("#(\\n)#m", "\\r\\n", $tpl_email);\r\n\r\n\r\n                // fill emailtemplate\r\n                $tpl_email = str_replace(array(\r\n                    ''{email_receiptor}'',\r\n                    ''{textfromdynamic}'',\r\n                    ''{textareafromdynamic}'',\r\n                    ''{page_name}'',\r\n                    ''{page_url}'',\r\n                    ''{cat_name}'',\r\n                    ''{cat_url}''\r\n                ), array(\r\n                        $to,\r\n                        $textfromdynamic,\r\n                        $textareafromdynamic,\r\n                        $page_name,\r\n                        $page_url,\r\n                        $cat_name,\r\n                        $cat_url\r\n                    ), $tpl_email);\r\n\r\n                $automessage = '''';\r\n                foreach ($this->stack AS $k => $v) {\r\n                    //echo $k.": ";print_r($v);echo "<br><br>";\r\n                    switch ($v[''type'']) {\r\n                        case ''label'':\r\n                            $tpl_email = str_replace(array(\r\n                                ''{elementlabel:'' . $v[''elementnumber''] . ''}'',\r\n                                ''{elementvalue:'' . $v[''elementnumber''] . ''}''\r\n                            ), array($v[''label''], $v[''value'']), $tpl_email);\r\n                        case ''locumtenency'':\r\n                        case ''upload'':\r\n                        case ''captchaimage'':\r\n                            break;\r\n                        case ''optionMutiple'':\r\n                            //print_r($v);\r\n                            $s = $_REQUEST[$v[''name'']];\r\n                            if (count($s) > 0) {\r\n                                $m_inner = '''';\r\n                                foreach ($s AS $v2) {\r\n                                    $m_inner .= $this->_strip_slashes($v2) . "\\n";\r\n                                }\r\n                                $automessage .= $v[''label''] . ":\\n" . $m_inner . "\\n\\n";\r\n                                $tpl_email = str_replace(array(\r\n                                    ''{elementlabel:'' . $v[''elementnumber''] . ''}'',\r\n                                    ''{elementvalue:'' . $v[''elementnumber''] . ''}''\r\n                                ), array($v[''label''], $m_inner), $tpl_email);\r\n                            }\r\n                            break;\r\n                        default:\r\n                            $automessage .= $v[''label''] . ":\\n" . $v[''value''] . "\\n\\n";\r\n                            $tpl_email = str_replace(array(\r\n                                ''{elementlabel:'' . $v[''elementnumber''] . ''}'',\r\n                                ''{elementvalue:'' . $v[''elementnumber''] . ''}''\r\n                            ), array($v[''label''], $v[''value'']), $tpl_email);\r\n                    }\r\n                }\r\n\r\n                if (is_array($this->uploads)) {\r\n                    foreach ($this->uploads AS $k => $v) {\r\n                        if ($v[''file''] != '''') {\r\n                            $automessage .= "ATTACHMENT ''" . $v[''label''] . "'': " . $v[''name''] . "\\n";\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //generate email template\r\n                $tpl_email = str_replace(''{automessage}'', $automessage, $tpl_email);\r\n\r\n                //replace snippets\r\n                $tpl_email = $this->_snippetReplace($tpl_email);\r\n\r\n\r\n                return $tpl_email;\r\n            }\r\n\r\n            function get_receiptor_data_from_content_as_array()\r\n            {\r\n                global $db, $cms_db, $lang;\r\n\r\n                $arr = array(''email'' => '''', ''textfromdynamic'' => '''', ''textareafromdynamic'' => '''',);\r\n\r\n                if ($this->email_receiptor_get_mode_idcatside == '''' || $this->email_receiptor_get_mode_idcontainer == '''') {\r\n                    return $arr;\r\n                }\r\n\r\n                $grab_conf[''idcatside''] = $this->email_receiptor_get_mode_idcatside;\r\n                $grab_conf[''idlang''] = $lang;\r\n                $grab_conf[''container''] = $this->email_receiptor_get_mode_idcontainer;\r\n                $grab_conf[''id''] = ''1,2''; //id of cmstag\r\n                $grab_conf[''type''] = ''1,3'';//text + textarea\r\n\r\n                $sql = "SELECT\r\n    CS.sortindex, CS.idcatside, CS.idcat,\r\n    CONTENT.container, CONTENT.idtype AS type, CONTENT.typenumber AS id,\r\n    CONTENT.number AS repeatid, CONTENT.value\r\n    FROM\r\n    " . $cms_db[''content''] . " CONTENT,\r\n    " . $cms_db[''side_lang''] . " SL\r\n    LEFT JOIN " . $cms_db[''cat_side''] . "  CS USING (idside)\r\n    WHERE\r\n    CONTENT.idsidelang = SL.idsidelang\r\n    AND CS.idcatside = " . $grab_conf[''idcatside''] . "\r\n    AND SL.idlang= " . $grab_conf[''idlang''] . "\r\n    AND CONTENT.container IN (" . $grab_conf[''container''] . ")\r\n    AND CONTENT.typenumber IN (" . $grab_conf[''id''] . ")\r\n    AND CONTENT.idtype IN (" . $grab_conf[''type''] . ")";\r\n                $db->query($sql);\r\n\r\n                while ($db->next_record()) {\r\n                    if ($db->f(''type'') == 1 && $db->f(''id'') == 1) {\r\n                        if (preg_match($this->rules[''email''], trim($db->f(''value'')))) {\r\n                            $arr[''email''] = trim($db->f(''value''));\r\n                        }\r\n                    } else {\r\n                        if ($db->f(''type'') == 1 && $db->f(''id'') == 2) {\r\n                            $arr[''textfromdynamic''] = $db->f(''value'');\r\n                        } else {\r\n                            if ($db->f(''type'') == 3 && $db->f(''id'') == 1) {\r\n                                $arr[''textareafromdynamic''] = $db->f(''value'');\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return $arr;\r\n            }\r\n\r\n\r\n            /*\r\n            * -----------------------------------------------------------\r\n            * SET METHODS\r\n            * -----------------------------------------------------------\r\n            */\r\n\r\n            /**\r\n             * Set all used stylesheets for the form\r\n             *\r\n             * @args array style_array - possible values are\r\n             * submit_error, submit (Styles for textmessages),\r\n             * label, label_error, text, textarea, option, checkbox, submitbutton,\r\n             *\r\n             * new:  password, select_mutiple, radio, label_as_formfield, placeholder\r\n             */\r\n            function set_styles($style_array)\r\n            {\r\n                if (!is_array($style_array)) {\r\n                    return;\r\n                }\r\n\r\n                foreach ($style_array AS $k => $v) {\r\n                    $this->field_styles[$k] = $v;\r\n                }\r\n            }\r\n\r\n            //mainmethod to add form elements\r\n            function set_formelement(\r\n                $element_name,\r\n                $element_type,\r\n                $element_default,\r\n                $element_validate,\r\n                $element_label,\r\n                $attributes_formelement,\r\n                $attributes_label,\r\n                $element_errormessage,\r\n                $element_tplindex,\r\n                $element_default_selected_val,\r\n                $elementnumber\r\n            ) {\r\n                $i = count($this->stack);\r\n                $this->stack[$i][''name''] = $element_name;\r\n                $this->stack[$i][''type''] = $element_type;\r\n                $this->stack[$i][''default_value''] = $element_default;\r\n                $this->stack[$i][''validate_rule''] = $element_validate;\r\n                $this->stack[$i][''label''] = $this->_strip_slashes($element_label);\r\n                $this->stack[$i][''value''] = $this->get_value($element_type, $element_name, $element_default,\r\n                    $element_default_selected_val,\r\n                    (in_array($element_type, array(''checkbox'', ''checkboxSelected'', ''optionMutiple''))));\r\n                $this->stack[$i][''opt_attributes_label''] = $this->_strip_slashes($attributes_label);\r\n                $this->stack[$i][''opt_attributes_formelement''] = $this->_strip_slashes($attributes_formelement);\r\n                $this->stack[$i][''errormessage''] = $this->_strip_slashes($element_errormessage);\r\n                $this->stack[$i][''tpl_index''] = $element_tplindex;\r\n                $this->stack[$i][''elementnumber''] = $elementnumber;\r\n                //$this->stack[$i][''selected_value''] = $element_default_selected_val;\r\n                //some fields have advanced informations, like the upload\r\n                $this->stack[$i][''advanced''] = false;\r\n            }\r\n\r\n            //set anonymous hidden vars\r\n            function set_anonymus_hidden($name, $value)\r\n            {\r\n                $this->hiddenvalues .= $this->get_formelement($name, ''hidden'', $value, '''');\r\n            }\r\n\r\n            //debugmessage\r\n            function set_debug($d)\r\n            {\r\n                $this->debug = $d;\r\n            }\r\n\r\n            //final template to combinate all elements\r\n            function set_combination_tpl($tpl)\r\n            {\r\n                $this->combination_tpl = $tpl;\r\n            }\r\n\r\n            //message block template\r\n            function set_message_block_tpl($tpl)\r\n            {\r\n                $this->message_block_tpl = $tpl;\r\n            }\r\n\r\n            //template for the form element seperator\r\n            function set_separator_tpl($tpl)\r\n            {\r\n                $this->separator_tpl = $tpl;\r\n            }\r\n\r\n            //template for one form row\r\n            function set_row_tpl($index, $tpl)\r\n            {\r\n                $this->row_tpl[$index] = $tpl;\r\n            }\r\n\r\n            //template for formstarttag\r\n            function set_formstart_tpl($tpl)\r\n            {\r\n                $this->tpl_formstarttag = $tpl;\r\n            }\r\n\r\n            //template for formendttag\r\n            function set_formend_tpl($tpl)\r\n            {\r\n                $this->tpl_formendtag = $tpl;\r\n            }\r\n\r\n            //template for elementerror\r\n            function set_tpl_elementerror($tpl)\r\n            {\r\n                $this->tpl_elementerror = $tpl;\r\n            }\r\n\r\n            //url for form- action- parameter\r\n            function set_form_target_url($url)\r\n            {\r\n                $this->form_target_url = $url;\r\n            }\r\n\r\n            //email sender mode\r\n            function set_email_receiptor_mode($mode)\r\n            {\r\n                $this->email_receiptor_mode = $mode;\r\n            }\r\n\r\n            //settings for email sender mode ''get''\r\n            function set_email_receiptor_get_mode_data($idcatside, $container)\r\n            {\r\n                $this->email_receiptor_get_mode_idcatside = $idcatside;\r\n                $this->email_receiptor_get_mode_idcontainer = $container;\r\n            }\r\n\r\n            //settings for email sender mode ''textfield''\r\n            function set_email_receiptor_textfield_mode_data($mailadress)\r\n            {\r\n                $this->email_receiptor_textfield_mode_mailadress = $mailadress;\r\n            }\r\n\r\n            //emailadress sender\r\n            function set_email_sender($mailadress)\r\n            {\r\n                $this->email_sender = $mailadress;\r\n            }\r\n\r\n            //email subject\r\n            function set_email_subject($s)\r\n            {\r\n                $this->email_subject = $s;\r\n            }\r\n\r\n            //success message\r\n            function set_form_message_success($message)\r\n            {\r\n                $this->message_success = $message;\r\n            }\r\n\r\n            //error message\r\n            function set_form_message_error($message)\r\n            {\r\n                $this->message_error = $message;\r\n            }\r\n\r\n            //submitbutton text\r\n            function set_submitbutton_text($txt)\r\n            {\r\n                $this->submitbutton_text = $txt;\r\n            }\r\n\r\n            //mutiple value separator\r\n            function set_mutiple_value_separator($sep)\r\n            {\r\n                $this->mutiple_value_separator = $sep;\r\n            }\r\n\r\n            //key/ value value separator\r\n            function set_key_value_separator($sep)\r\n            {\r\n                $this->key_value_separator = $sep;\r\n            }\r\n\r\n            //upload dir\r\n            function set_upload_dir($dir)\r\n            {\r\n                $this->upload_dir = $dir;\r\n            }\r\n\r\n            //upload restrictions\r\n            function set_upload_restrictions($a)\r\n            {\r\n                $this->upload_allowed_extensions = $a[''upload_allowed_extensions''];\r\n                $this->upload_allowed_filesize = $a[''upload_allowed_filesize''];\r\n            }\r\n\r\n            //upload errors\r\n            function set_upload_errors($a)\r\n            {\r\n                $this->upload_errors[''usr_allowed_ext''] = $a[''usr_allowed_ext''];\r\n                $this->upload_errors[''usr_allowed_size''] = $a[''usr_allowed_size''];\r\n                $this->upload_errors[''usr_internal_error''] = $a[''usr_internal_error''];\r\n            }\r\n\r\n            //fallback {textfromdynamic}\r\n            function set_fallback_textfromdynamic($in)\r\n            {\r\n                $this->fallback_textfromdynamic = $in;\r\n            }\r\n\r\n            //fallback {textfarearomdynamic}\r\n            function set_fallback_textareafromdynamic($in)\r\n            {\r\n                $this->fallback_textareafromdynamic = $in;\r\n            }\r\n\r\n            function set_charset($set)\r\n            {\r\n                $this->charset = strtolower($set);\r\n            }\r\n\r\n            function set_tpl_email($tpl)\r\n            {\r\n                $this->tpl_email = $tpl;\r\n            }\r\n\r\n            function set_send_mail($set)\r\n            {\r\n                $this->send_mail = (boolean)$set;\r\n            }\r\n\r\n            function set_logging_active($set)\r\n            {\r\n                $this->logging_active = (boolean)$set;\r\n            }\r\n\r\n            function set_logging_file($set)\r\n            {\r\n                $this->logging_file = $set;\r\n            }\r\n\r\n            function set_email_receiptor_cc($set)\r\n            {\r\n                $this->email_receiptor_cc = $set;\r\n            }\r\n\r\n            function set_email_receiptor_bcc($set)\r\n            {\r\n                $this->email_receiptor_bcc = $set;\r\n            }\r\n\r\n            function set_confirmmail_vars($is_active, $subject, $tpl)\r\n            {\r\n                $this->confirm_mail_active = (boolean)$is_active;\r\n                $this->confirm_mail_subject = $subject;\r\n                $this->confirm_mail_tpl = $tpl;\r\n            }\r\n\r\n            function set_addon($addonstring)\r\n            {\r\n                if (trim($addonstring) != '''') {\r\n                    $p = explode(''||'', $addonstring);\r\n                    if (is_file($p[''0''])) {\r\n                        include_once $p[''0''];\r\n                        if (class_exists($p[''1''])) {\r\n                            $this->addon = new $p[''1''];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            function set_captcha_vals(\r\n                $length = 4,\r\n                $width = 100,\r\n                $height = 30,\r\n                $attributes = '''',\r\n                $styleset = '''',\r\n                $template = ''{image} {textfield}{hiddentoken}''\r\n            ) {\r\n                $this->captchavals[''length''] = $length;\r\n                $this->captchavals[''width''] = $width;\r\n                $this->captchavals[''height''] = $height;\r\n                $this->captchavals[''attributes''] = $attributes;\r\n                $this->captchavals[''styleset''] = $styleset;\r\n                $this->captchavals[''template''] = $template;\r\n            }\r\n\r\n            function set_second_email_sender($email)\r\n            {\r\n                $this->second_email_sender = $email;\r\n            }\r\n\r\n            function set_second_email_recipient($email)\r\n            {\r\n                $this->second_email_recipient = $email;\r\n            }\r\n\r\n            function set_tpl_requirenotice($tpl)\r\n            {\r\n                $this->tpl_label_required_notice = $tpl;\r\n            }\r\n\r\n            function set_tpl_labeltext($tpl)\r\n            {\r\n                $this->tpl_labeltext = $tpl;\r\n            }\r\n\r\n            /*\r\n            * -----------------------------------------------------------\r\n            * PRIVATE HELPER METHODS\r\n            * -----------------------------------------------------------\r\n            */\r\n            function _strip_slashes($in)\r\n            {\r\n                if (get_magic_quotes_gpc() != 0) {\r\n                    return stripslashes($in);\r\n                }\r\n\r\n                return $in;\r\n            }\r\n\r\n            function _snippetReplace($content)\r\n            {\r\n                //no snippet replacement found\r\n                if ($this->snippet_replacement_found === false) {\r\n                    return $content;\r\n                } //figure out if snippet replacement exist\r\n                else {\r\n                    if ($this->snippet_replacement_found == ''unknown'') {\r\n                        if (file_exists($GLOBALS[''cfg_cms''][''cms_path''] . ''plugins/snippet_replacement/inc/class.SnippetReplacement.php'')) {\r\n                            include_once $GLOBALS[''cfg_cms''][''cms_path''] . ''plugins/snippet_replacement/inc/class.SnippetReplacement.php'';\r\n                            $this->snippet_object = new snippetReplacement();\r\n                            $this->snippet_replacement_found = true;\r\n                        } else {\r\n                            $this->snippet_replacement_found = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //replace\r\n                if ($this->snippet_replacement_found == true) {\r\n                    $content = $this->snippet_object->replace($content, ''sr_lang'', $GLOBALS[''client''],\r\n                        $GLOBALS[''lang'']);\r\n                }\r\n\r\n                return $content;\r\n            }\r\n\r\n            function _htmlentities($in)\r\n            {\r\n                if ($this->charset == ''utf-8'') {\r\n                    return htmlentities($in, ENT_COMPAT, ''UTF-8'');\r\n                } else {\r\n                    return htmlentities($in);\r\n                }\r\n            }\r\n\r\n            function _format_styleclass($style)\r\n            {\r\n                return ($style != '''') ? '' class="'' . $style . ''" '' : null;\r\n\r\n            }\r\n\r\n            function _get_styled_message($message, $style)\r\n            {\r\n                if ($c = $this->_format_styleclass($style)) {\r\n                    return ''<span '' . $c . ''>'' . $message . ''</span>'';\r\n                }\r\n\r\n                return $message;\r\n            }\r\n\r\n            function _log($message)\r\n            {\r\n                if (!$this->logging_active) {\r\n                    return false;\r\n                }\r\n\r\n                $fp = @fopen($this->logging_file, ''a+'');\r\n                @fputs($fp, $message);\r\n                @fclose($fp);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /* EXPERIMENTAL */\r\n    if (!class_exists(gooseberry_form_addon)) {\r\n        class gooseberry_form_addon\r\n        {\r\n            function onPreParse(&$current, &$stack)\r\n            {\r\n\r\n            }\r\n\r\n            function onValidate(&$current, &$is_valid, &$stack)\r\n            {\r\n\r\n            }\r\n\r\n            function onParseRow(&$current, &$label, &$element, &$element_plain, &$stack)\r\n            {\r\n\r\n            }\r\n\r\n            function onFailure(&$stack)\r\n            {\r\n\r\n            }\r\n\r\n            function onSuccess(&$stack)\r\n            {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!class_exists(gooseberry_formcontroller)) {\r\n        class gooseberry_formcontroller\r\n        {\r\n            var $frm;//form object\r\n            var $content;//form html content\r\n            var $dbdata;// dataitem object\r\n            var $dbmeta;// reportdesc object\r\n\r\n\r\n            var $db_mode_active = false;\r\n            var $db_mode_default_datagroup;\r\n            var $mutiple_value_separator = '','';\r\n            var $redirect_after_success = false;\r\n            var $redirect_after_success_url = '''';\r\n\r\n            var $save_in_filemanager = false;\r\n            var $filemanager_iddirectory = false;\r\n\r\n\r\n            function __construct()\r\n            {\r\n                global $con_side;\r\n                if ((int)$_REQUEST[''rvbackidcatside''] > 0) {\r\n                    $this->redirect_after_success = true;\r\n                    $this->redirect_after_success_url = $con_side[(int)$_REQUEST[''rvbackidcatside'']][''link''];\r\n                    $parms = '''';\r\n                    $parms .= ''&rvsortfield='' . $_REQUEST[''rvsortfield''];\r\n                    $parms .= ''&rvstart='' . $_REQUEST[''rvstart''];\r\n                    $parms .= ''&rvsortdirec='' . $_REQUEST[''rvsortdirec''];\r\n                    $parms .= ''&rvsearchquery='' . $_REQUEST[''rvsearchquery''];\r\n                    if (is_array($_REQUEST[''rvkeyfilter''])) {\r\n                        foreach ($_REQUEST[''rvkeyfilter''] AS $k => $v) {\r\n                            $parms .= ''&rvkeyfilter['' . $k . '']='' . $v;\r\n                        }\r\n                    }\r\n                    if (is_array($_REQUEST[''rvfreefilter''])) {\r\n                        foreach ($_REQUEST[''rvfreefilter''] AS $k => $v) {\r\n                            $parms .= ''&rvfreefilter['' . $k . '']='' . $v;\r\n                        }\r\n                    }\r\n                    $this->redirect_after_success_url .= $parms;\r\n\r\n                    //$this->redirect_after_success_url;exit;\r\n                }\r\n            }\r\n\r\n            function set_formobject(&$frm)\r\n            {\r\n                $this->frm =& $frm;\r\n            }\r\n\r\n            function set_db_mode_active($set)\r\n            {\r\n                $this->db_mode_active = (boolean)$set;\r\n            }\r\n\r\n            function set_db_mode_default_datagroup($set)\r\n            {\r\n                $this->db_mode_default_datagroup = $set;\r\n            }\r\n\r\n            function set_db_mode_items_are_online($set)\r\n            {\r\n                $this->db_mode_items_are_online = (boolean)$set;\r\n            }\r\n\r\n            function set_mutiple_value_separator($set)\r\n            {\r\n                $this->mutiple_value_separator = $set;\r\n            }\r\n\r\n            function set_save_in_filemanager($set)\r\n            {\r\n                $this->save_in_filemanager = $set;\r\n            }\r\n\r\n            function set_filemanager_iddirectory($id)\r\n            {\r\n                $this->filemanager_iddirectory = (int)$id;\r\n            }\r\n\r\n            function set_tpl_labeltext($tpl)\r\n            {\r\n                $this->tpl_labeltext = $tpl;\r\n            }\r\n\r\n            function set_redirect_after_success($bol, $url)\r\n            {\r\n                global $con_side;\r\n\r\n                if (trim($url) == '''') {\r\n                    return false;\r\n                }\r\n\r\n                if ((int)$url > 0) {\r\n                    $url = $con_side[(int)$url][''link''];\r\n                }\r\n\r\n                $this->redirect_after_success = (boolean)$bol;\r\n                $this->redirect_after_success_url = $url;\r\n            }\r\n\r\n            function start()\r\n            {\r\n                global $mvars;\r\n                $rvidnew = $rvidedit = 0;\r\n                //dbmode\r\n                if ($this->db_mode_active) {\r\n                    //check external db mode\r\n                    $rvidedit = (int)$_REQUEST[''rvidedit''];\r\n                    $rvidnew = (int)$_REQUEST[''rvidnew''];\r\n                    $is_db_mode_and_new_record = false;\r\n\r\n                    //from reportviewer context\r\n                    if ($rvidedit > 0 || $rvidnew > 0) {\r\n                        if ($rvidnew > 0) {\r\n                            $this->dbmeta = new rv_Reportdesc;\r\n                            $this->dbmeta->loadByIddescreption($rvidnew);\r\n                            $this->dbdata = new rv_DataItem;\r\n                            $this->dbdata->setDatagroup($this->dbmeta->getGroupname());\r\n                        } else {\r\n                            $this->dbdata = new rv_DataItem;\r\n                            $this->dbdata->loadByIdreportdata($rvidedit);\r\n                            $this->dbmeta = new rv_Reportdesc;\r\n                            $this->dbmeta->loadByGroupname($this->dbdata->getDatagroup());\r\n                        }\r\n                        $is_db_mode_and_new_record = $this->dbdata->isEmptyRecord();\r\n                        for ($iter =& $this->dbdata->getFormvalueIterator(); $iter->valid(); $iter->next()) {\r\n                            $formkey = ($iter->key() - 1);\r\n                            $fieldtype = $mvars[($formkey * 20 + 101)];\r\n                            switch ($fieldtype) {\r\n                                case ''option'':\r\n                                case ''optionMutiple'':\r\n                                case ''radio'':\r\n                                case ''checkbox'':\r\n                                case ''checkboxSelected'':\r\n                                    $mvars[($formkey * 20 + 109)] = $iter->current();\r\n                                    break;\r\n                                default:\r\n                                    $mvars[($formkey * 20 + 103)] = $iter->current();\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if ($this->db_mode_default_datagroup != '''') {\r\n                            //from default\r\n                            $this->dbdata = new rv_DataItem;\r\n                            $this->dbdata->setDatagroup($this->db_mode_default_datagroup);\r\n\r\n                            $this->dbmeta = new rv_Reportdesc;\r\n                            $this->dbmeta->loadByGroupname($this->db_mode_default_datagroup);\r\n                            $is_db_mode_and_new_record = true;\r\n                        } else {\r\n                            $this->db_mode_active = false;\r\n                        }\r\n                    }\r\n\r\n                    //new record is per default online or offline\r\n                    if ($is_db_mode_and_new_record) {\r\n                        $this->dbdata->setIs_online($this->db_mode_items_are_online);\r\n                    }\r\n                }\r\n\r\n                //Formular erstellen\r\n                //n+0 aktiv\r\n                //n+1 type\r\n                //n+2 label\r\n                //n+3 default\r\n                //n+4 validate\r\n                //n+5 attributes label\r\n                //n+6 attributes formelement\r\n                //n+7 custom element- error\r\n                //n+8 index tpl elementcontainer\r\n                //n+9 default selected\r\n                //elementnumber $i/100\r\n                for ($i = 100; array_key_exists(($i + 1), $mvars); $i = $i + 20) {\r\n                    if ($mvars[$i]) {\r\n                        if ($mvars[$i + 1] == ''checkboxSelected'' && $is_db_mode_and_new_record) {\r\n                            $mvars[$i + 9] = $mvars[$i + 3];\r\n                        }\r\n                        $this->frm->set_formelement(''go_frm'' . $i, $mvars[$i + 1], $mvars[$i + 3], $mvars[$i + 4],\r\n                            $mvars[$i + 2], $mvars[$i + 6], $mvars[$i + 5], $mvars[$i + 7], $mvars[$i + 8],\r\n                            $mvars[$i + 9], (($i / 20) - 4));\r\n                    }\r\n                }\r\n\r\n\r\n                //hidden vars by reportviewer\r\n                //sortfield=2&sortdirec=asc&start=0&rvidedit=7&rvbackidcatside=8 (edit)\r\n                //sortfield=2&sortdirec=asc&start=0&rvidnew=-1&rvbackidcatside=8 (new)\r\n                if ($this->db_mode_active) {\r\n                    if ($rvidedit > 0 || $rvidnew == -1) {\r\n                        $this->frm->set_anonymus_hidden(''rvsortfield'', $_REQUEST[''rvsortfield'']);\r\n                        $this->frm->set_anonymus_hidden(''rvsortdirec'', $_REQUEST[''rvsortdirec'']);\r\n                        $this->frm->set_anonymus_hidden(''rvsearchquery'', $_REQUEST[''rvsearchquery'']);\r\n                        $this->frm->set_anonymus_hidden(''rvstart'', (int)$_REQUEST[''rvstart'']);\r\n                        $this->frm->set_anonymus_hidden(''rvbackidcatside'', (int)$_REQUEST[''rvbackidcatside'']);\r\n                        if (is_array($_REQUEST[''rvkeyfilter''])) {\r\n                            foreach ($_REQUEST[''rvkeyfilter''] AS $k => $v) {\r\n                                $this->frm->set_anonymus_hidden(''rvkeyfilter['' . $k . '']'',\r\n                                    $this->frm->_strip_slashes($v));\r\n                            }\r\n                        }\r\n                        if (is_array($_REQUEST[''freefilter''])) {\r\n                            foreach ($_REQUEST[''freefilter''] AS $k => $v) {\r\n                                $this->frm->set_anonymus_hidden(''freefilter['' . $k . '']'',\r\n                                    $this->frm->_strip_slashes($v));\r\n                            }\r\n                        }\r\n                    }\r\n                    if ($rvidedit > 0) {\r\n                        $this->frm->set_anonymus_hidden(''rvidedit'', (int)$_REQUEST[''rvidedit'']);\r\n                    } else {\r\n                        if ($rvidnew == -1) {\r\n                            $this->frm->set_anonymus_hidden(''rvidnew'', (int)$_REQUEST[''rvidnew'']);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                $this->frm->parse_elements();\r\n                if ($this->frm->is_submitted()) {\r\n                    if ($this->frm->is_validated()) {\r\n                        $this->frm->send_mail();\r\n                        $this->_reportviewer_save();\r\n                        $this->process_redirect();\r\n                        $this->content = $this->frm->get_form_plain();\r\n                    } else {\r\n                        $this->content = $this->frm->get_form();\r\n                    }\r\n                } else {\r\n                    $this->content = $this->frm->get_form();\r\n                }\r\n\r\n            }\r\n\r\n            function get_content()\r\n            {\r\n                return $this->content;\r\n            }\r\n\r\n            function _reportviewer_save()\r\n            {\r\n\r\n                $stack = $this->frm->get_stack();\r\n                $used_keys = array();\r\n\r\n                //id dbmode isn''t active catch upload files and exit\r\n                if (!$this->db_mode_active) {\r\n                    foreach ($stack AS $k => $v) {\r\n                        switch ($v[''type'']) {\r\n                            case ''upload'':\r\n                                if ($v[''advanced''][''file''] == '''') {\r\n                                    continue;\r\n                                } else {\r\n                                    $f =& $GLOBALS[''sf_factory'']->getObjectForced(''ASSETS'', ''DbFile'');\r\n                                    if ($this->save_in_filemanager == ''overwrite'') {\r\n                                        $f->setOverwriteExistingFile(true);\r\n                                        $f->setAutorenameIfExists(false);\r\n                                    } else {\r\n                                        if ($this->save_in_filemanager == ''rename'') {\r\n                                            $f->setOverwriteExistingFile(false);\r\n                                            $f->setAutorenameIfExists(true);\r\n                                        } else {\r\n                                            continue;\r\n                                        }\r\n                                    }\r\n                                    $f->setExternalSourceFile($v[''advanced''][''file''], $v[''advanced''][''type'']);\r\n                                    $f->setIddirectory($this->filemanager_iddirectory);\r\n                                    $f->save();\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n\r\n                foreach ($stack AS $k => $v) {\r\n                    switch ($v[''type'']) {\r\n                        case ''locumtenency'':\r\n                        case ''label'':\r\n                            break;\r\n                        case ''upload'':\r\n                            if ($v[''advanced''][''file''] == '''') {\r\n                                if ($this->dbdata->isEmptyRecord()) {\r\n                                    $v[''value''] = '''';\r\n                                } else {\r\n                                    continue;\r\n                                }\r\n                            } else {\r\n                                $f =& $GLOBALS[''sf_factory'']->getObjectForced(''ASSETS'', ''DbFile'');\r\n                                if ($this->save_in_filemanager == ''overwrite'') {\r\n                                    $f->setOverwriteExistingFile(true);\r\n                                    $f->setAutorenameIfExists(false);\r\n                                } else {\r\n                                    if ($this->save_in_filemanager == ''rename'') {\r\n                                        $f->setOverwriteExistingFile(false);\r\n                                        $f->setAutorenameIfExists(true);\r\n                                    } else {\r\n                                        continue;\r\n                                    }\r\n                                }\r\n                                $f->setExternalSourceFile($v[''advanced''][''file''], $v[''advanced''][''type'']);\r\n                                $f->setIddirectory($this->filemanager_iddirectory);\r\n                                $f->save();\r\n                                $v[''value''] = $f->getCmsLink();\r\n                            }\r\n                        default:\r\n                            //special handling for ''option'' and ''optionMutiple''\r\n                            $this->dbdata->setFormvalueByFormkey(($k + 1), $v[''value'']);\r\n                            array_push($used_keys, ($k + 1));\r\n                            $this->dbmeta->setFieldlabelByFieldkey(($k + 1), $v[''label'']);\r\n\r\n                    }\r\n                }\r\n\r\n\r\n                $this->dbmeta->deleteFieldkeysByKeysNotInArray($used_keys);\r\n\r\n\r\n                $this->dbdata->save();\r\n                $this->dbmeta->save();\r\n                //print_r($this->dbmeta);\r\n            }\r\n\r\n            function process_redirect()\r\n            {\r\n                if (!$this->redirect_after_success) {\r\n                    return false;\r\n                }\r\n                //echo $this->redirect_after_success_url;exit;\r\n                sf_header_redirect($this->redirect_after_success_url);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    //\r\n    // START WORKING\r\n    //\r\n\r\n    //look for reportviewer plugin\r\n    if (is_file($cfg_cms[''cms_path''] . ''plugins/reportviewer/index.php'')) {\r\n        $mvars[''reportviewer_included''] = true;\r\n        include_once $cfg_cms[''cms_path''] . ''plugins/reportviewer/includes/class.rv_ArrayIterator.php'';\r\n        include_once $cfg_cms[''cms_path''] . ''plugins/reportviewer/includes/class.rv_DataItem.php'';\r\n        include_once $cfg_cms[''cms_path''] . ''plugins/reportviewer/includes/class.rv_Reportdesc.php'';\r\n    } else {\r\n        $mvars[''reportviewer_included''] = false;\r\n    }\r\n    include_once $cfg_cms[''cms_path''] . ''external/misc/class.captcha.php'';\r\n    $frm = new gooseberry_form;\r\n    //set debug\r\n    $frm->set_debug(($mvars[''44''] == ''true'') ? true : false);\r\n    //set form styles\r\n    $frm->set_styles(array(\r\n        ''submit_error'' => $mvars[''15''],\r\n        ''submit'' => $mvars[''16''],\r\n        ''label'' => $mvars[''17''],\r\n        ''label_error'' => $mvars[''18''],\r\n        ''element_error'' => $mvars[''53''],\r\n        ''text'' => $mvars[''19''],\r\n        ''textarea'' => $mvars[''20''],\r\n        ''option'' => $mvars[''21''],\r\n        ''checkbox'' => $mvars[''22''],\r\n        ''upload'' => $mvars[''52''],\r\n        ''password'' => $mvars[''31''],\r\n        ''select_mutiple'' => $mvars[''32''],\r\n        ''radio'' => $mvars[''33''],\r\n        ''captchaimage'' => $mvars[''79''],\r\n        ''label_as_formfield'' => $mvars[''34''],\r\n        ''placeholder'' => $mvars[''35''],\r\n        ''submitbutton'' => $mvars[''23'']\r\n    ));\r\n    //final template to combinate all elements\r\n    $frm->set_combination_tpl($mvars[''25'']);\r\n    //message block template\r\n    $frm->set_message_block_tpl($mvars[''38'']);\r\n    //template for the form element seperator\r\n    $frm->set_separator_tpl($mvars[''42'']);\r\n    //template for elementerror\r\n    $frm->set_tpl_elementerror($mvars[''43'']);\r\n    //template for one form row\r\n    $frm->set_row_tpl(1, $mvars[''26'']);\r\n    $frm->set_row_tpl(2, $mvars[''46'']);\r\n    $frm->set_row_tpl(3, $mvars[''66'']);\r\n    $frm->set_row_tpl(4, $mvars[''86'']);\r\n    //template for formstarttag\r\n    $frm->set_formstart_tpl($mvars[''39'']);\r\n    //template for formendttag\r\n    $frm->set_formend_tpl($mvars[''40'']);\r\n    //upload restrictions\r\n    $frm->set_upload_restrictions(array(\r\n        ''upload_allowed_extensions'' => $mvars[''47''],\r\n        ''upload_allowed_filesize'' => $mvars[''48'']\r\n    ));\r\n    //upload\r\n    $frm->set_upload_errors(array(\r\n        ''usr_allowed_ext'' => $mvars[''49''],\r\n        ''usr_allowed_size'' => $mvars[''50''],\r\n        ''usr_internal_error'' => $mvars[''51'']\r\n    ));\r\n\r\n    //url for form- action- parameter\r\n    $frm->set_form_target_url($con_side[(int)$idcatside][''link'']);\r\n    //email receiptor mode - get or textfield are possible\r\n    $frm->set_email_receiptor_mode($mvars[''41'']);\r\n    //settings for email receiptor mode ''get'' idcatside and container\r\n    $frm->set_email_receiptor_get_mode_data($_REQUEST[''contactidcs''], $_REQUEST[''contactcontainer'']);\r\n    //settings for email receiptor mode ''textfield''\r\n    $frm->set_email_receiptor_textfield_mode_data($mvars[''12'']);\r\n    //emailadress sender\r\n    $frm->set_email_sender((is_numeric($mvars[''27''])) ? $_REQUEST[''go_frm'' . $mvars[''27'']] : $mvars[''12'']);\r\n    //email subject\r\n    $frm->set_email_subject($mvars[''11'']);\r\n    //success message\r\n    $frm->set_form_message_success($mvars[''14'']);\r\n    //error message\r\n    $frm->set_form_message_error($mvars[''13'']);\r\n    //submitbutton text\r\n    $frm->set_submitbutton_text($mvars[''24'']);\r\n    //mutiple value separator\r\n    $frm->set_mutiple_value_separator($mvars[''36'']);\r\n    //key/ value value separator\r\n    $frm->set_key_value_separator($mvars[''37'']);\r\n    //upload dir\r\n    $frm->set_upload_dir($cfg_cms[''cms_path''] . ''upload/in/'');\r\n    //fallback {textfromdynamic}\r\n    $frm->set_fallback_textfromdynamic($mvars[''54'']);\r\n    //fallback {textareafromdynamic}\r\n    $frm->set_fallback_textareafromdynamic($mvars[''55'']);\r\n    //charset\r\n    $frm->set_charset($lang_charset);\r\n    //tple email\r\n    $frm->set_tpl_email($mvars[''56'']);\r\n    //send email\r\n    $frm->set_send_mail($mvars[''65''] == ''true'');\r\n    //en/ disable logging\r\n    $frm->set_logging_active($mvars[''63''] == ''true'');\r\n    //logfile\r\n    $frm->set_logging_file($mvars[''64'']);\r\n    //cc and bcc\r\n    $frm->set_email_receiptor_cc($mvars[''57'']);\r\n    $frm->set_email_receiptor_bcc($mvars[''58'']);\r\n    //confirmmail vals: boolean sendiit|subject|body\r\n    $frm->set_confirmmail_vars(($mvars[''68''] == ''true''), $mvars[''69''], $mvars[''70'']);\r\n    //addon object string\r\n    $frm->set_addon($mvars[''72'']);\r\n    //captcha vals\r\n    $frm->set_captcha_vals($mvars[''73''], $mvars[''74''], $mvars[''75''], $mvars[''76''], $mvars[''77''], $mvars[''78'']);\r\n    //second email\r\n    $frm->set_second_email_sender($mvars[''80'']);\r\n    $frm->set_second_email_recipient($mvars[''81'']);\r\n    //requirenotice\r\n    $frm->set_tpl_requirenotice($mvars[''82'']);\r\n    //labeltext\r\n    $frm->set_tpl_labeltext($mvars[''83'']);\r\n\r\n    $frm_control = new gooseberry_formcontroller;\r\n    $frm_control->set_formobject($frm);\r\n    $frm_control->set_db_mode_active($mvars[''59''] == ''true'' && $mvars[''reportviewer_included'']);\r\n    $frm_control->set_db_mode_default_datagroup($mvars[''60'']);\r\n    $frm_control->set_db_mode_items_are_online(($mvars[''71''] == ''online''));\r\n    $frm_control->set_mutiple_value_separator($mvars[''36'']);\r\n    $frm_control->set_save_in_filemanager($mvars[''61'']);\r\n    $frm_control->set_filemanager_iddirectory($mvars[''62'']);\r\n    $frm_control->set_redirect_after_success((trim($mvars[''67'']) != ''''), $mvars[''67'']);\r\n    $frm_control->start();\r\n    //print_r($mvars);\r\n    echo $frm_control->get_content();\r\n\r\n    unset($frm, $frm_control, $inner_form, $outer_form, $to_replace, $replacer, $frm_vals, $mvars, $a);\r\n\r\n\r\n}\r\n\r\nunset($is_dev);\r\n</CMSPHP>',`config` = '',`idclient` = 0,`deletable` = 1,`author` = 1,`created` = 1159227335,`lastmodified` = 1509194894,`repository_id` = 'mod:c7ec67c74104a45bde479c5d666bdc75:f5e7fdbe',`install_sql` = '',`uninstall_sql` = '',`update_sql` = '',`source_id` = 0,`is_install` = '0',`verbose` = '',`checked` = '1' WHERE `cms_mod`.`idmod` = 12;
UPDATE `cms_mod` SET `idmod` = 27,`name` = 'Pic-Galerie',`version` = '3.5.1',`cat` = 'Content',`description` = 'Galerie aus ausgew√?hltem Ordner des Dateimanagers',`input` = '<?\n\n// Version 3.5.1\n// (c) 2005 by Sascha Postner v/o saschapi\n\n//Belegt sind mip_forms 0 - 31 und 51-52 und 60-61 und 90005-90010\n\n\n\n//Config-mode ( Normal, Erweitert, Ausgeblendet)\n$mip_form[''0''][''desc''] = ''Konfigurationsmodus'';\n$mip_form[''0''][''cat''] = ''option'';\n$mip_form[''0''][''size''] = ''1'';\n$mip_form[''0''][''option_desc''][] = ''Normal'';\n$mip_form[''0''][''option_val''][] =  '''';\n$mip_form[''0''][''option_desc''][] = ''Erweitert'';\n$mip_form[''0''][''option_val''][] =  ''advanced'';\n$mip_form[''0''][''option_desc''][] = ''Erweitert + Detailfeatures'';\n$mip_form[''0''][''option_val''][] =  ''detail'';\n$mip_form[''0''][''option_desc''][] = ''Ausgeblendet'';\n$mip_form[''0''][''option_val''][] =  ''hidden'';\n$mip_form[''0''][''cms_var''] = ''MOD_VAR[0]'';\n$mip_form[''0''][''cms_val''] = $cms_mod[''value''][''0''];\n$mip_form[''0''][''flag''] = ''reload'';\nmip_formsp($mip_form[''0'']);//configmode\n$mip_form[''hide_in_standard_mode''] = array(1,2,3,5,6,7,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,27,28,30,31,60,61,90007,90008,90009,90010);\n$mip_form[''hide_in_advanced_mode''] = array(20,23,90009,90010);\n$mip_form[''hide_in_detail_mode''] = array();\n\n//hidden config\nif($cms_mod[''value''][''0''] == ''hidden''){\n  foreach($cms_mod[''value''] AS $ke=>$va){\n    if($ke != ''0''){\n    ?>\n      <input name="MOD_VAR[<?php echo $ke; ?>]" type="hidden" value="<?php echo htmlentities($va, ENT_COMPAT, ''UTF-8'');?>">\n    <?php\n     }\n  }\n}\n//simple and advanced config\nelse if($cms_mod[''value''][''0''] == '''' || $cms_mod[''value''][''0''] == ''advanced'' || $cms_mod[''value''][''0''] == ''detail''){\n\n\n##############################################\n# Schriftarten\n##############################################\n\n//Schriftart 1\n$mip_form[''1''][''desc''] = $mod_lang[''gen_font'']." {font1}";\n$mip_form[''1''][''cat''] = ''app_css'';\n$mip_form[''1''][''output_cat''] = ''option'';\n$mip_form[''1''][''cms_var''] = ''MOD_VAR[1]'';\n$mip_form[''1''][''cms_val''] = $cms_mod[''value''][''1''];\n\n//Schriftart 2\n$mip_form[''2''][''desc''] = $mod_lang[''gen_font'']." {font2} (Walker Seitenlink)";\n$mip_form[''2''][''cat''] = ''app_css'';\n$mip_form[''2''][''output_cat''] = ''option'';\n$mip_form[''2''][''cms_var''] = ''MOD_VAR[2]'';\n$mip_form[''2''][''cms_val''] = $cms_mod[''value''][''2''];\n\n//Schriftart 3\n$mip_form[''3''][''desc''] = $mod_lang[''gen_font'']." {font3} (Aktueller Walker Seitenlink)<br/><br/>\\n";\n$mip_form[''3''][''cat''] = ''app_css'';\n$mip_form[''3''][''output_cat''] = ''option'';\n$mip_form[''3''][''cms_var''] = ''MOD_VAR[3]'';\n$mip_form[''3''][''cms_val''] = $cms_mod[''value''][''3''];\n\n//Schriftart 4\n$mip_form[''27''][''desc''] = $mod_lang[''gen_font'']." {font4} (Bildtitel)<br/><br/>\\n";\n$mip_form[''27''][''cat''] = ''app_css'';\n$mip_form[''27''][''output_cat''] = ''option'';\n$mip_form[''27''][''cms_var''] = ''MOD_VAR[27]'';\n$mip_form[''27''][''cms_val''] = $cms_mod[''value''][''27''];\n\n//Schriftart 4\n$mip_form[''28''][''desc''] = $mod_lang[''gen_font'']." {font5} (Bildbeschreibung)<br/><br/>\\n";\n$mip_form[''28''][''cat''] = ''app_css'';\n$mip_form[''28''][''output_cat''] = ''option'';\n$mip_form[''28''][''cms_var''] = ''MOD_VAR[28]'';\n$mip_form[''28''][''cms_val''] = $cms_mod[''value''][''28''];\n\n\n##############################################\n# generelle Einstellungen\n##############################################\n\n\n// Verzeichnis im Frontend oder Backend ausw√?hlen?\n$mip_form[''51''][''desc''] = ''Soll der Redakteur das Verzeichnis im Frontend einstellen?'';\n$mip_form[''51''][''cat''] = ''option'';\n$mip_form[''51''][''cms_var''] = ''MOD_VAR[51]'';\n$mip_form[''51''][''cms_val''] = $cms_mod[''value''][''51''];\n$mip_form[''51''][''option_desc''][''0''] = ''Ja'';\n$mip_form[''51''][''option_desc''][''1''] = ''Nein'';\n$mip_form[''51''][''option_val''][''0''] = true;\n$mip_form[''51''][''option_val''][''1''] = false;\n$mip_form[''51''][''cms_val_default''] = false;\n$mip_form[''51''][''flag''] = ''reload'';\n\n\n//Ordnerauswahl\n$mip_form[''4''][''desc''] = ''Ordner: '';\n$mip_form[''4''][''cat''] = ''app_directory'';\n$mip_form[''4''][''output_cat''] = ''option'';\n$mip_form[''4''][''cms_var''] = ''MOD_VAR[4]'';\n$mip_form[''4''][''cms_val''] = $cms_mod[''value''][''4''];\n$mip_form[''4''][''flag''] = ''single'';\n\n//StartOrdnerauswahl\n$mip_form[''52''][''desc''] = ''Startverzeichnis: '';\n$mip_form[''52''][''cat''] = ''app_directory'';\n$mip_form[''52''][''output_cat''] = ''option'';\n$mip_form[''52''][''cms_var''] = ''MOD_VAR[52]'';\n$mip_form[''52''][''cms_val''] = $cms_mod[''value''][''52''];\n$mip_form[''52''][''flag''] = ''single'';\n\n// Unterordner verwenden??\n$mip_form[''26''][''desc''] = ''Unterordner einschlie√æen?'';\n$mip_form[''26''][''cat''] = ''option'';\n$mip_form[''26''][''cms_var''] = ''MOD_VAR[26]'';\n$mip_form[''26''][''cms_val''] = $cms_mod[''value''][''26''];\n$mip_form[''26''][''option_desc''][''0''] = ''Ja'';\n$mip_form[''26''][''option_desc''][''1''] = ''Nein'';\n$mip_form[''26''][''option_val''][''0''] = true;\n$mip_form[''26''][''option_val''][''1''] = false;\n$mip_form[''26''][''cms_val_default''] = false;\n\n\n//Anzahl Bilder\n$mip_form[''6''][''desc''] = "Anzahl Bilder pro Galerie-Seite";\n$mip_form[''6''][''cat''] = ''txt'';\n$mip_form[''6''][''cms_var''] = ''MOD_VAR[6]'';\n$mip_form[''6''][''cms_val''] = $cms_mod[''value''][''6''];\n$mip_form[''6''][''cms_val_default''] = ''9'';\n\n// Anzahl pro Reihe\n$mip_form[''7''][''desc''] = "Anzahl Bilder in einer Reihe";\n$mip_form[''7''][''cat''] = ''txt'';\n$mip_form[''7''][''cms_var''] = ''MOD_VAR[7]'';\n$mip_form[''7''][''cms_val''] = $cms_mod[''value''][''7''];\n$mip_form[''7''][''cms_val_default''] = ''3'';\n\n\n// Galerie-ID\n$mip_form[''5''][''desc''] = "welche Seite bei Galerieaufruf: <br/>\\n";\n$mip_form[''5''][''cat''] = ''txt'';\n$mip_form[''5''][''cms_var''] = ''MOD_VAR[5]'';\n$mip_form[''5''][''cms_val''] = $cms_mod[''value''][''5''];\n$mip_form[''5''][''cms_val_default''] = ''1'';\n\n//Sortierreihenfolge\n$mip_form[''15''][''desc''] = "Sortierreihenfolge";\n$mip_form[''15''][''cat''] = ''option'';\n$mip_form[''15''][''cms_var''] = ''MOD_VAR[15]'';\n$mip_form[''15''][''cms_val''] = $cms_mod[''value''][''15''];\n$mip_form[''15''][''option_desc''][''0''] = ''anhand Dateiname'';\n$mip_form[''15''][''option_val''][''0''] = ''filename'';\n$mip_form[''15''][''option_desc''][''1''] = ''anhand Titel'';\n$mip_form[''15''][''option_val''][''1''] = ''titel'';\n$mip_form[''15''][''option_desc''][''2''] = ''anhand &lt;order&gt-Tag; in Beschreibung'';\n$mip_form[''15''][''option_val''][''2''] = ''description'';\n$mip_form[''15''][''option_desc''][''3''] = ''anhand Erstellungsdatum'';\n$mip_form[''15''][''option_val''][''3''] = ''created'';\n$mip_form[''15''][''option_desc''][''4''] = ''anhand √?nderungsdatum'';\n$mip_form[''15''][''option_val''][''4''] = ''lastmodified'';\n$mip_form[''15''][''option_desc''][''5''] = ''anhand Dateigr√∂√æe'';\n$mip_form[''15''][''option_val''][''5''] = ''filesize'';\n$mip_form[''15''][''option_desc''][''6''] = ''anhand Autor'';\n$mip_form[''15''][''option_val''][''6''] = ''author'';\n$mip_form[''15''][''cms_val_default''] = ''filename'';\n\n//aufsteigend-absteigend\n$mip_form[''16''][''cat''] = ''radio'';\n$mip_form[''16''][''cms_var''] = ''MOD_VAR[16]'';\n$mip_form[''16''][''cms_val''] = $cms_mod[''value''][''16''];\n$mip_form[''16''][''cms_val_default''] = ''ASC'';\n$mip_form[''16''][''option_desc''][''0''] = ''aufsteigend'';\n$mip_form[''16''][''option_val''][''0''] = ''ASC'';\n$mip_form[''16''][''option_desc''][''1''] = ''absteigend'';\n$mip_form[''16''][''option_val''][''1''] = ''DESC'';\n\n##############################################\n# Bildergr√∂√æen\n##############################################\n\n// max image size\n$mip_form[''17''][''desc''] = ''maximale Bild-Gr√∂√æe: {maximgsize} (leer = Originalgr√∂√æe)'';\n$mip_form[''17''][''cat''] = ''txt'';\n$mip_form[''17''][''cms_var''] = ''MOD_VAR[17]'';\n$mip_form[''17''][''cms_val''] = $cms_mod[''value''][''17''];\n$mip_form[''17''][''cms_val_default''] = '''';\n\n// max image size 2\n$mip_form[''21''][''desc''] = ''maximale Bild-Gr√∂√æe: {maximgsize2} (leer = Originalgr√∂√æe)'';\n$mip_form[''21''][''cat''] = ''txt'';\n$mip_form[''21''][''cms_var''] = ''MOD_VAR[21]'';\n$mip_form[''21''][''cms_val''] = $cms_mod[''value''][''21''];\n$mip_form[''21''][''cms_val_default''] = '''';\n\n##############################################\n# Galeriewalker\n##############################################\n\n// vor/zur√?ck-links anzeigen\n$mip_form[''10''][''desc''] = ''Vor/Zur&uuml;ck-Links anzeigen'';\n$mip_form[''10''][''cat''] = ''option'';\n$mip_form[''10''][''cms_var''] = ''MOD_VAR[10]'';\n$mip_form[''10''][''cms_val''] = $cms_mod[''value''][''10''];\n$mip_form[''10''][''option_desc''][''0''] = ''Ja'';\n$mip_form[''10''][''option_desc''][''1''] = ''Nein'';\n$mip_form[''10''][''option_val''][''0''] = ''true'';\n$mip_form[''10''][''option_val''][''1''] = ''false'';\n$mip_form[''10''][''cms_val_default''] = ''false'';\n$mip_form[''10''][''flag''] = ''reload'';\n//\n\n// vor/zur√?ck-linktexte definieren\nif ($cms_mod[''value''][''10''] == ''true'') {\n        // zur√?ck-link\n        $mip_form[''13''][''desc''] = "Zur√?ck-Linktext";\n        $mip_form[''13''][''cat''] = ''txt'';\n        $mip_form[''13''][''cms_var''] = ''MOD_VAR[13]'';\n        $mip_form[''13''][''cms_val''] = $cms_mod[''value''][''13''];\n        $mip_form[''13''][''cms_val_default''] = ''&lt;&lt;'';\n\n        // weiter-link\n        $mip_form[''14''][''desc''] = "Weiter-Linktext";\n        $mip_form[''14''][''cat''] = ''txt'';\n        $mip_form[''14''][''cms_var''] = ''MOD_VAR[14]'';\n        $mip_form[''14''][''cms_val''] = $cms_mod[''value''][''14''];\n        $mip_form[''14''][''cms_val_default''] = ''&gt;&gt;'';\n} else {\n        // zur√?ck-link\n        $mip_form[''13''][''cat''] = ''hidden'';\n        $mip_form[''13''][''cms_var''] = ''MOD_VAR[13]'';\n        $mip_form[''13''][''cms_val''] = $cms_mod[''value''][''13''];\n        $mip_form[''13''][''cms_val_default''] = ''&lt;&lt;'';\n\n        // weiter-link\n        $mip_form[''14''][''cat''] = ''hidden'';\n        $mip_form[''14''][''cms_var''] = ''MOD_VAR[14]'';\n        $mip_form[''14''][''cms_val''] = $cms_mod[''value''][''14''];\n        $mip_form[''14''][''cms_val_default''] = ''&gt;&gt;'';\n}\n\n// anzahl der angezeigten Seitenlinks\n$mip_form[''11''][''desc''] = "Floating Galerie-Walker:<br/>\\n (0 = Floating aus, 1-n = Max. angezeigter Links)<br/><br/>\\n";\n$mip_form[''11''][''cat''] = ''txt'';\n$mip_form[''11''][''cms_var''] = ''MOD_VAR[11]'';\n$mip_form[''11''][''cms_val''] = $cms_mod[''value''][''11''];\n$mip_form[''11''][''cms_val_default''] = ''0'';\n\n// separatoren\n$mip_form[''12''][''desc''] = "Separator zwischen den Seitenlinks im Walker:<br/>\\n (leer = default-separator)<br/><br/>\\n";\n$mip_form[''12''][''cat''] = ''txt'';\n$mip_form[''12''][''cms_var''] = ''MOD_VAR[12]'';\n$mip_form[''12''][''cms_val''] = $cms_mod[''value''][''12''];\n$mip_form[''12''][''cms_val_default''] = '''';\n\n// Aktuelle Galerieseite verlinken?\n$mip_form[''18''][''desc''] = ''Soll die aktuelle Seite im Galerie-Walker verlinkt werden?'';\n$mip_form[''18''][''cat''] = ''option'';\n$mip_form[''18''][''cms_var''] = ''MOD_VAR[18]'';\n$mip_form[''18''][''cms_val''] = $cms_mod[''value''][''18''];\n$mip_form[''18''][''option_desc''][''0''] = ''Ja'';\n$mip_form[''18''][''option_desc''][''1''] = ''Nein'';\n$mip_form[''18''][''option_val''][''0''] = true;\n$mip_form[''18''][''option_val''][''1''] = false;\n$mip_form[''18''][''cms_val_default''] = false;\n$mip_form[''18''][''flag''] = ''reload'';\n//\n\n##############################################\n# Templates\n##############################################\n\n\n// Layout der Galerie Tabelle\n$mip_form[''8''][''desc''] = ''Layout der Galerie-Tabelle'';\n$mip_form[''8''][''cat''] = ''txtarea'';\n$mip_form[''8''][''type''] = ''long'';\n$mip_form[''8''][''rows''] = ''10'';\n$mip_form[''8''][''cms_var''] = ''MOD_VAR[8]'';\n$mip_form[''8''][''cms_val''] = $cms_mod[''value''][''8''];\n$mip_form[''8''][''cms_val_default''] = "<table width=\\"100%\\">\n  <tr class=\\"{font1}\\">\n    <td align=\\"center\\">Seite {id}</td>\n  </tr>\n  <tr class=\\"{font2}\\">\n    <td align=\\"center\\">{walker}</td>\n   </tr>\n   <tr>\n     <td><table width=\\"100%\\"><tr>{content}</tr></table></td>\n  </tr>\n  <tr class=\\"{font2}\\">\n    <td align=\\"center\\">{walker}</td>\n  </tr>\n</table>";\n// legend Layout der Galerie Tabelle\n$mip_form[''90005''][''cat''] = ''desc'';\n$mip_form[''90005''][''type''] = '''';\n$mip_form[''90005''][''desc''] = ''<div id="legend1" style="display:none;text-align:right;"><small><strong>Inhaltselemente</strong><br/>{font1},{font2},{font3},{id},{walker},<b>{content}</b><br/><br/><u>Bemerkung:</u> {content} ist zwingend erforderlich!</small></div>\n<div style="text-align:right;" onclick="this.innerHTML=document.getElementById(\\''legend1\\'').innerHTML;"><small style="cursor: pointer;">Hilfe anzeigen<br /></small></div>'';\n// Einzelne Tabellenelemente\n$mip_form[''9''][''cat''] = ''txtarea'';\n$mip_form[''9''][''type''] = ''long'';\n$mip_form[''9''][''rows''] = ''10'';\n$mip_form[''9''][''desc''] = ''Layout der einzelnen Tabellenelemente (also {content} im Template oben)<br/>'';\n$mip_form[''9''][''cms_var''] = ''MOD_VAR[9]'';\n$mip_form[''9''][''cms_val''] = $cms_mod[''value''][''9''];\n$mip_form[''9''][''cms_val_default''] = "<td align=\\"center\\">\n<span class=\\"{font4}\\">{title}</span><br />\n  <a href=\\"javascript:new_imagepopup(''{path}{urlencode}{file}{/urlencode}'',''{title}'',''{description}'','''',''{width}'',''{height}'',''true'')\\">\n    <img src=\\"{path}{thumbfile}\\" {maximgsize} border=\\"0\\" alt=\\"{filedesc}\\" />\n  </a><br/ >\n  <span class=\\"{font5}\\">{description}<br/ >\n  Dateigr√∂sse: {filesize}</span>\n</td>";\n// legend Einzelne Tabellenelemente\n$mip_form[''90006''][''cat''] = ''desc'';\n$mip_form[''90006''][''type''] = '''';\n$mip_form[''90006''][''desc''] = ''<div id="legend2" style="display:none;text-align:right;"><small><strong>Inhaltselemente</strong><br/><small>{font1},{font2},{font3},<br/>{path},{real_path},{file},{thumbfile},{filename},<br/>{title},{filedesc},{description},<br/>{urlencode}data{/urlencode},<br/>{maximgsize},{maximgsize2},{filesize},<br/>{width},{height},{thumbwidth},{thumbheight},{detailurl},{idupl},{number}</small></div>\n<div style="text-align:right;" onclick="this.innerHTML=document.getElementById(\\''legend2\\'').innerHTML;"><small style="cursor: pointer;">Hilfe anzeigen<br /></small></div>'';\n\n        // Umschlie√æende Templates von den einzelnen Bilderzeilen\n        $mip_form[''30''][''desc''] = "Vor den einzelnen Bilderzeilen";\n        $mip_form[''30''][''cat''] = ''txt'';\n        $mip_form[''30''][''cms_var''] = ''MOD_VAR[30]'';\n        $mip_form[''30''][''cms_val''] = $cms_mod[''value''][''30''];\n        $mip_form[''30''][''cms_val_default''] = ''<tr>'';\n\n        $mip_form[''31''][''desc''] = "Nach den einzelnen Bilderzeilen";\n        $mip_form[''31''][''cat''] = ''txt'';\n        $mip_form[''31''][''cms_var''] = ''MOD_VAR[31]'';\n        $mip_form[''31''][''cms_val''] = $cms_mod[''value''][''31''];\n        $mip_form[''31''][''cms_val_default''] = ''</tr>'';\n\n\n##############################################\n# Detail Templates\n##############################################\n\n\n// Zur√?ck Template\n$mip_form[''22''][''desc''] = "Zur√?ck-Link Template in der Detailansicht:";\n$mip_form[''22''][''cat''] = ''txtarea'';\n$mip_form[''22''][''type''] = ''long'';\n$mip_form[''22''][''rows''] = ''1'';\n$mip_form[''22''][''cms_var''] = ''MOD_VAR[22]'';\n$mip_form[''22''][''cms_val''] = $cms_mod[''value''][''22''];\n$mip_form[''22''][''cms_val_default''] = "<a href=\\"{prev}\\">Bild zur√?ck</a>&nbsp;&nbsp;|";\n\n// legend Zur√?ck Template\n$mip_form[''90007''][''cat''] = ''desc'';\n$mip_form[''90007''][''type''] = '''';\n$mip_form[''90007''][''desc''] = ''<div id="legend3" style="display:none;text-align:right;"><small><strong>Inhaltselemente</strong><br/><small>{font1},{font2},{font3},{prev}, {idupl}</small></div>\n<div style="text-align:right;" onclick="this.innerHTML=document.getElementById(\\''legend3\\'').innerHTML;"><small style="cursor: pointer;">Hilfe anzeigen<br /></small></div>'';\n\n// VorTemplate\n$mip_form[''25''][''desc''] = "Vor-Link Template in der Detailansicht:";\n$mip_form[''25''][''cat''] = ''txtarea'';\n$mip_form[''25''][''type''] = ''long'';\n$mip_form[''25''][''rows''] = ''1'';\n$mip_form[''25''][''cms_var''] = ''MOD_VAR[25]'';\n$mip_form[''25''][''cms_val''] = $cms_mod[''value''][''25''];\n$mip_form[''25''][''cms_val_default''] = "|&nbsp;&nbsp;<a href=\\"{next}\\">Bild vor</a>";\n\n// legend VorTemplate\n$mip_form[''90008''][''cat''] = ''desc'';\n$mip_form[''90008''][''type''] = '''';\n$mip_form[''90008''][''desc''] = ''<div id="legend4" style="display:none;text-align:right;"><small><strong>Inhaltselemente</strong><br/><small>{font1},{font2},{font3},{next}, {idupl}</small></div>\n<div style="text-align:right;" onclick="this.innerHTML=document.getElementById(\\''legend4\\'').innerHTML;"><small style="cursor: pointer;">Hilfe anzeigen<br /></small></div>'';\n\n// R√?cklink zur Galerie\n$mip_form[''23''][''desc''] = "R√?cklink zur Galerie";\n$mip_form[''23''][''cat''] = ''txtarea'';\n$mip_form[''23''][''type''] = ''long'';\n$mip_form[''23''][''rows''] = ''1'';\n$mip_form[''23''][''cms_var''] = ''MOD_VAR[23]'';\n$mip_form[''23''][''cms_val''] = $cms_mod[''value''][''23''];\n$mip_form[''23''][''cms_val_default''] = "<a href=\\"{galerie}\\">Galerieseite {page_id}</a> <a href=\\"{galeriestart}\\">Galeriestartseite</a>";\n\n// legend R√?cklink zur Galerie\n$mip_form[''90009''][''cat''] = ''desc'';\n$mip_form[''90009''][''type''] = '''';\n$mip_form[''90009''][''desc''] = ''<div id="legend5" style="display:none;text-align:right;"><small><strong>Inhaltselemente</strong><br/><small>{font1},{font2},{font3},{page_id},{galerie},{galeriestart}</small></div>\n<div style="text-align:right;" onclick="this.innerHTML=document.getElementById(\\''legend5\\'').innerHTML;"><small style="cursor: pointer;">Hilfe anzeigen<br /></small></div>'';\n\n//Vor und zur√?ck zyklisch oder endend?\n$mip_form[''24''][''cat''] = ''radio'';\n$mip_form[''24''][''desc''] = ''Vor- und Zur√?ck-Links in der Detailansicht <br/> zyklisch oder endend generieren?'';\n$mip_form[''24''][''cms_var''] = ''MOD_VAR[24]'';\n$mip_form[''24''][''cms_val''] = $cms_mod[''value''][''24''];\n$mip_form[''24''][''cms_val_default''] = ''zykl'';\n$mip_form[''24''][''option_desc''][''0''] = ''zyklisch'';\n$mip_form[''24''][''option_val''][''0''] = ''zykl'';\n$mip_form[''24''][''option_desc''][''1''] = ''endend'';\n$mip_form[''24''][''option_val''][''1''] = ''end'';\n\n// Detail Template\n$mip_form[''20''][''cat''] = ''txtarea'';\n$mip_form[''20''][''type''] = ''long'';\n$mip_form[''20''][''rows''] = ''10'';\n$mip_form[''20''][''desc''] = ''Layout der optionalen Detailansicht'';\n$mip_form[''20''][''cms_var''] = ''MOD_VAR[20]'';\n$mip_form[''20''][''cms_val''] = $cms_mod[''value''][''20''];\n$mip_form[''20''][''cms_val_default''] = "<table width=\\"100%\\">\n  <tr class=\\"{font1}\\">\n    <td align=\\"center\\">Bild {pic_id}/{pic_count}</td>\n  </tr>\n  <tr class=\\"{font2}\\">\n    <td align=\\"center\\">{prev}&nbsp;&nbsp;{galerie}&nbsp;&nbsp;{next}</td>\n   </tr>\n   <tr>\n     <td><table width=\\"100%\\"><tr><td align=\\"center\\"><img src=\\"{path}{file}\\" border=\\"0\\" alt=\\"{filedesc}\\"/ ></td></tr></table></td>\n  </tr>\n  <tr class=\\"{font2}\\">\n    <td align=\\"center\\">Bild ist von Seite {page_id}</td>\n  </tr>\n</table>";\n\n// legend Detail Template\n$mip_form[''90010''][''cat''] = ''desc'';\n$mip_form[''90010''][''type''] = '''';\n$mip_form[''90010''][''desc''] = ''<div id="legend6" style="display:none;text-align:right;"><small><strong>Inhaltselemente</strong><br/><small>{page_id},{font1},{font2},{font3},<br/>{prev},{next},{galerie},{path},{real_path},{file},{thumbfile},{filename},{title},\n{filedesc},{description},<br/>{maximgsize},{maximgsize2},{filesize},{width},{height},{pic_id},{idupl},{pic_count}</small></div>\n<div style="text-align:right;" onclick="this.innerHTML=document.getElementById(\\''legend6\\'').innerHTML;"><small style="cursor: pointer;">Hilfe anzeigen<br /></small></div>'';\n\n\n// mit detailtemp starten\n$mip_form[''60''][''desc''] = ''Direkt mit der Detailansicht beginnen?'';\n$mip_form[''60''][''cat''] = ''chk'';\n$mip_form[''60''][''option_var''][''0''] = ''MOD_VAR[60]'';\n$mip_form[''60''][''option_val''][''0''] = $cms_mod[''value''][''60''];\n$mip_form[''60''][''option_desc''][''0''] = ''ja'';\n$mip_form[''60''][''option_val_select''][''0''] = ''true'';\n\n// mit detailtemp starten\n$mip_form[''61''][''desc''] = ''Thumbnails in die Detailinsicht includen?'';\n$mip_form[''61''][''cat''] = ''chk'';\n$mip_form[''61''][''option_var''][''0''] = ''MOD_VAR[61]'';\n$mip_form[''61''][''option_val''][''0''] = $cms_mod[''value''][''61''];\n$mip_form[''61''][''option_desc''][''0''] = ''ja'';\n$mip_form[''61''][''option_val_select''][''0''] = ''true'';\n\n// <br>\n$mip_form[''99999''][''cat''] = ''desc'';\n$mip_form[''99999''][''type''] = '''';\n$mip_form[''99999''][''desc''] = '''';\n\n//if simple mode\nif($cms_mod[''value''][''0''] == ''''){\n   foreach ($mip_form[''hide_in_standard_mode'']  AS $ke=>$va){\n     $mip_form[$va][''cat''] = ''hidden'';\n   }\n }\n\n//if advanced mode\nif($cms_mod[''value''][''0''] == ''advanced''){\n   foreach ($mip_form[''hide_in_advanced_mode'']  AS $ke=>$va){\n     $mip_form[$va][''cat''] = ''hidden'';\n   }\n }\n\n\n\n#######################################################################################################################\n\nmip_forms_tabpane_beginp();\nif($cms_mod[''value''][''0''] == ''advanced''||$cms_mod[''value''][''0''] == ''detail'')\nmip_forms_tabitem_beginp(''Schriftarten'');\nmip_formsp($mip_form[''1'']);\nmip_formsp($mip_form[''2'']);\nmip_formsp($mip_form[''3'']);\nmip_formsp($mip_form[''27'']);\nmip_formsp($mip_form[''28'']);\nif($cms_mod[''value''][''0''] == ''advanced''||$cms_mod[''value''][''0''] == ''detail'')\nmip_forms_tabitem_endp();\n\nif($cms_mod[''value''][''0''] == '''' ||$cms_mod[''value''][''0''] == ''advanced'' || $cms_mod[''value''][''0''] == ''detail'')\nmip_forms_tabitem_beginp('' generelle Einstellungen '');\n//Verzeichnis im Frontend bearbeiten?\nmip_formsp($mip_form[''51'']);\n\nif ($cms_mod[''value''][''51''] == false)\n{\nmip_formsp($mip_form[''4'']);\n}\n\nif ($cms_mod[''value''][''51''] == true)\n{mip_formsp($mip_form[''52'']);\n}\n\n//Unterordner verwenden?\nmip_formsp($mip_form[''26'']);\n\n//Anzahl der Bilder pro seite\nmip_formsp($mip_form[''6'']);\n//Wieviele Bilder nebeneinander?\nmip_formsp($mip_form[''7'']);\n\n//Startseite dieser Galerie?\nmip_formsp($mip_form[''5'']);\n\n//Sortierreihenfolge der Bilder\nmip_formsp($mip_form[''15'']);\n//Aufsteigend Absteigend?\nmip_formsp($mip_form[''16'']);\nif($cms_mod[''value''][''0''] == '''' ||$cms_mod[''value''][''0''] == ''advanced'' || $cms_mod[''value''][''0''] == ''detail'')\nmip_forms_tabitem_endp();\n\nif($cms_mod[''value''][''0''] == ''advanced'' || $cms_mod[''value''][''0''] == ''detail'')\nmip_forms_tabitem_beginp(''Bildergr√∂√æen'');\nmip_formsp($mip_form[''17'']);\nmip_formsp($mip_form[''21'']);\nif($cms_mod[''value''][''0''] == ''advanced'' || $cms_mod[''value''][''0''] == ''detail'')\nmip_forms_tabitem_endp();\n\nif($cms_mod[''value''][''0''] == ''advanced'' || $cms_mod[''value''][''0''] == ''detail'')\nmip_forms_tabitem_beginp(''Galerie-Walker'');\n//Vor und Zur√?cklinks\nmip_formsp($mip_form[''10'']);\nmip_formsp($mip_form[''13'']);\nmip_formsp($mip_form[''14'']);\nmip_formsp($mip_form[''11'']);\nmip_formsp($mip_form[''12'']);\n\n//Aktuelle Seite verlinken?\nmip_formsp($mip_form[''18'']);\nif($cms_mod[''value''][''0''] == ''advanced'' || $cms_mod[''value''][''0''] == ''detail'')\nmip_forms_tabitem_endp();\n\nif($cms_mod[''value''][''0''] == '''' ||$cms_mod[''value''][''0''] == ''advanced'' || $cms_mod[''value''][''0''] == ''detail'')\nmip_forms_tabitem_beginp(''Templates'');\n//Galerietabelle\nmip_formsp($mip_form[''8'']);\nmip_formsp($mip_form[''90005'']);\n\n//einzelne Elemente\nmip_formsp($mip_form[''9'']);\nmip_formsp($mip_form[''90006'']);\n\n//Umschlie√æendes Template\nmip_formsp($mip_form[''30'']);\nmip_formsp($mip_form[''31'']);\nmip_formsp($mip_form[''22'']);\nmip_formsp($mip_form[''90007'']);\nmip_formsp($mip_form[''25'']);\nmip_formsp($mip_form[''90008'']);\nmip_formsp($mip_form[''23'']);\nmip_formsp($mip_form[''90009'']);\nmip_formsp($mip_form[''99999'']);\nmip_formsp($mip_form[''24'']);\n\n//Detailtemplate\nmip_formsp($mip_form[''20'']);\nmip_formsp($mip_form[''90010'']);\n\n//Detailtemplate\nmip_formsp($mip_form[''60'']);\nmip_formsp($mip_form[''61'']);\nif($cms_mod[''value''][''0''] == '''' ||$cms_mod[''value''][''0''] == ''advanced'' || $cms_mod[''value''][''0''] == ''detail'')\nmip_forms_tabitem_endp();\n\n}\nunset($mip_form);\n?>',`output` = '<CMSPHP>\n\n// Version 3.5.1\n// (c) 2005 by Sascha Postner v/o saschapi\n\n//Achtung! Es sind noch einige Wasserzeichengeschichten in dieser Version enthalten\n//Wasserzeichen werden jedoch NICHT mehr unterst√?tzt.\n\n\n##########################################################################################################################\n//Hier lagere ich mal ein paar Funktionen aus\n##########################################################################################################################\n\n\n//Funktion zum erstellen von Wasserzeichen\nif (!function_exists(''make_watermark_image_galerie'')) {\n    function make_watermark_image_galerie($image, $watermarkfile, $new_image, $x, $y, $transition)\n    {\n        global $cfg_cms, $cfg_client;\n        require_once ''Image/Transform.php'';\n        $cms_image = Image_Transform::factory($cfg_cms[''image_mode'']);\n        $cms_image->load($image);\n        $cms_watermark = Image_Transform::factory($cfg_cms[''image_mode'']);\n        $cms_watermark->load($watermarkfile);\n\n        //if ($x != $cms_image->img_x || $y != $cms_image->img_y) $cms_image->resize($x, $y);\n        //$watermark = imagecreatefromstring(base64_decode($watermarkfile));\n        $watermark_width = imagesx($cms_watermark->imageHandle);\n        $watermark_height = imagesy($cms_watermark->imageHandle);\n        //(Bild, Watermark, Position des Watermarks X, Position des Watermarks Y, Breite des Bilds, H√?¬∂he des Bilds Y, Breite des Watermarks, H√?¬∂he des Bildes, Transparenz)\n        imagecopymerge($cms_image->imageHandle, $cms_watermark->imageHandle, $x, $y, 0, 0, $watermark_width,\n            $watermark_height, $transition);\n        $cms_image->save($new_image);\n        $cms_image->free();\n        unset($cms_image);\n    }\n}\n\n\n//Funktion zum auslesen der Thumbgr√?¬∂√?≈?en\nif (!function_exists(''get_thumb_size'')) {\n    function get_thumb_size($xy, $thumb)\n    {\n        global $cfg_cms, $cfg_client;\n        require_once ''Image/Transform.php'';\n        $cms_image = Image_Transform::factory($cfg_cms[''image_mode'']);\n        $cms_image->load($thumb);\n\n        //if ($x != $cms_image->img_x || $y != $cms_image->img_y) $cms_image->resize($x, $y);\n        //$watermark = imagecreatefromstring(base64_decode($watermarkfile));\n        $width = imagesx($cms_image->imageHandle);\n        $height = imagesy($cms_image->imageHandle);\n        $cms_image->free();\n        unset($cms_image);\n\n        if ($xy == ''x'') {\n            return $width;\n        } elseif ($xy == ''y'') {\n            return $height;\n        }\n\n    }\n}\n\n\n//Funktion zum umwandeln von Bilder IDs in Pfade\nif (!function_exists(get_path)) {\n    function get_path($id)\n    {\n        global $cfg_cms, $cfg_client, $cms_db, $db, $cms_mod;\n\n        $sql = "SELECT A.*, B.dirname\n    FROM\n    " . $cms_db[''upl''] . " as A, " . $cms_db[''directory''] . " as B\n    WHERE\n    idupl=''" . $id . "''\n    AND\n    A.iddirectory = B.iddirectory";\n\n        $db->query($sql);\n        $db->next_record();\n        $filepath = $cfg_client["upl_path"] . $db->f(''dirname'') . $db->f(''filename'');\n\n        return $filepath;\n    }\n}\n\n\n###########################################################################################################################\n#Hier ein paar Variablen, die wir √??berall brauchen\n###########################################################################################################################\n\n//Variable f√??r den Link zur aktuellen Seite mit Session ID\n$mod[''idcatlink''] = $con_side[$idcatside][''link''];\n\n//Auslesen ob im Frontend-Editiert werden darf\n$mod[''frontedit''] = "MOD_VALUE[51]";\n\n//Auslesen ob mit Detailansicht gestartet wird\n$mod[''detailid_start''] = "MOD_VALUE[60]";\n\n//Auslesen ob Thumbs in der Detailansicht verwendet werden\n$mod[''detailid_thumb''] = "MOD_VALUE[61]";\n\n//Ordner beim Editieren im Frontend (inkl. Container f√??r mehrere Galerien pro Seite\n$mod[''change_dir_string''] = "change_dir_" . $cms_mod[''container''][''id''];\n$mod[''change_dir''] = ${$mod[''change_dir_string'']};\n\n//Anzahl der Bilder pro Seite\n$mod["number_of_pics_per_page"] = MOD_VALUE[6];\n\n//Anzahl der Bilder pro Zeile\n$mod["break_after_number_of_pics"] = MOD_VALUE[7];\n\n//Thumbtext im Projekt\n$mod["filename_suffix"] = $cfg_client["thumbext"];\n\n//Auslesen welche Galerieseite angezeigt werden soll\nif (isset($galerie)) {\n    $mod["galerie"] = array();\n    $mod["galerie"] = explode("_", $galerie);\n    for ($i = 0; $i < count($mod["galerie"]) / 2; $i++) {\n        if ($cms_mod[''container''][''id''] == $mod["galerie"][$i * 2]) {\n            $id = $mod["galerie"][$i * 2 + 1];\n        } else {\n            $mod[''query''] .= "_" . $mod["galerie"][$i * 2] . "_" . $mod["galerie"][$i * 2 + 1];\n        }\n    }\n}\n\n//soll eine bestimmte Galerieseite angezeigt werden?\nif (!isset($id)) {\n    if ("MOD_VALUE[5]" == "1") {\n        $id = 1;\n    } else {\n        $id = "MOD_VALUE[5]";\n    }\n}\n\n//Falls Thumbs in der Detailansicht gezeigt werden umbl√??ttern bei Detailbildern\nif ($mod[''detailid_thumb''] AND !$galerie AND $detailid) {\n    $id = ceil($detailid / $mod["number_of_pics_per_page"]);\n}\n\n// Automatisch die Dateilseiten zeigen und dann beim umbl√??ttern die neueste Detailid zeigen\nif (!isset($detailid) AND $sess->name != ''cms'' AND $mod[''detailid_start''] AND !$galerie) {\n    $detailid = 1;\n} elseif (!isset($detailid) AND $sess->name != ''cms'' AND $mod[''detailid_start''] AND $galerie) {\n    $detailid = (($id - 1) * $mod["number_of_pics_per_page"]) + 1;\n}\n\n\n##########################################################################################################################\n// FRONTEND BEARBEITUNG (wird in der Detailansicht ausgeschlossen! Habe das f√??r nicht sinnvoll gehalten. L√??√?≈?t sich aber leicht wieder aktivieren.)\n##########################################################################################################################\n\n//Frontend-editieren\nif ($mod[''frontedit''] == true) {\n\n    //bjoerns funktion\n    if (!function_exists(get_val)) {\n        function get_val($value_name)\n        {\n            global $idcatside, $cms_db, $db, $con_side, $cms_mod;\n\n            $sql = "SELECT\n    *\n    FROM\n    " . $cms_db[''content_external''] . "\n    WHERE\n    idsidelang=''" . $con_side[$idcatside][''idsidelang''] . "''\n    AND container=''" . $cms_mod[''container''][''id''] . "''\n    AND idtype=''$value_name''";\n            $db->query($sql);\n            $db->next_record();\n\n            return $db->f(''value'');\n        }\n    }\n\n    if (!function_exists(set_val)) {\n        function set_val($value_name, $value)\n        {\n            global $idcatside, $cms_db, $db, $con_side, $cms_mod;\n            //Schauen, ob es den Wert schon gibt\n            $sql = "SELECT\n    *\n    FROM\n    " . $cms_db[''content_external''] . "\n    WHERE\n    idsidelang=''" . $con_side[$idcatside][''idsidelang''] . "''\n    AND container=''" . $cms_mod[''container''][''id''] . "''\n    AND idtype=''$value_name''";\n            $db->query($sql);\n\n            //Es gibt den Wert schon -> wert aktuallisieren\n            if ($db->next_record()) {\n                $sql = "UPDATE\n    " . $cms_db[''content_external''] . "\n    SET\n    value=''$value''\n    WHERE\n    idsidelang=''" . $con_side[$idcatside][''idsidelang''] . "''\n    AND container=''" . $cms_mod[''container''][''id''] . "''\n    AND idtype=''$value_name''";\n            } //Es gibt den Wert noch nicht, neu in tabelle einf√??gen\n            else {\n                $sql = "INSERT INTO\n    " . $cms_db[''content_external''] . "\n    (idsidelang, container, idtype, value)\n    VALUES\n    (''" . $con_side[$idcatside][''idsidelang''] . "'',\n    ''" . $cms_mod[''container''][''id''] . "'',\n    ''$value_name'', ''$value'')";\n            }\n\n            $db->query($sql);\n\n            //Letzte √??nderung Datum √??ndern!\n            $sql = "UPDATE " . $cms_db[''side_lang''] . " SET lastmodified=''" . time() . "'' WHERE idsidelang=''" . $con_side[$idcatside][''idsidelang''] . "'' ";\n            $db->query($sql);\n\n            //Cache l√?¬∂schen\n            //Seite f√??rs frontend neu generieren, da sich ein Wert ge√??ndert hat\n            change_code_status($idcatside, 1, ''idcatside'');\n\n        }\n    }\n\n    //Editierwechsel beachten\n    if ($mod[''change_dir'']) {\n        //Formular ist abgeschickt worden\n        //Neuen Wert in die DB einf√??gen\n        set_val(''galerie_folder'', $mod[''change_dir'']);\n    }\n\n    //Wert aus der DB holen\n    $mod[''galerie_folder''] = get_val(''galerie_folder'');\n\n\n    //Bearbeitenbutton\n    $aktverz = $mod[''galerie_folder''];\n    if ($cms_side[''edit'']) {\n\n        //Startverzeichnis auslesen\n        $mod[''startdir''] = "MOD_VALUE[52]";\n\n        if ($mod[''startdir'']) {\n\n            //Startverzeichnis Namen auslesen\n            $sql = "SELECT A.dirname\n    FROM\n    " . $cms_db[''directory''] . " as A\n    WHERE\n    A.iddirectory=''" . $mod[''startdir''] . "''\n    ORDER BY dirname";\n            $db->query($sql);\n            $db->next_record();\n\n            $mod[''startdirname''] = $db->f(''dirname'');\n\n        }\n\n\n        if ($mod[''startdirname'']) {\n\n            //Dateimanager Verzeichnisse auslesen mit Startverzeichnis\n            $sql = "SELECT A.iddirectory, A.dirname\n    FROM\n    " . $cms_db[''directory''] . " as A\n    WHERE\n    A.idclient=''" . $client . "''\n    AND A.status & 0x05 = 0x00\n    AND A.dirname like ''" . $mod[''startdirname''] . "%''\n\n    ORDER BY dirname";\n            $result = mysqli_query($db->Link_ID, $sql);\n\n        } else {\n\n            //Dateimanager Verzeichnisse auslesen\n            $sql = "SELECT A.iddirectory, A.dirname\n    FROM\n    " . $cms_db[''directory''] . " as A\n    WHERE\n    A.idclient=''" . $client . "''\n    AND A.status & 0x05 = 0x00\n\n    ORDER BY dirname";\n            $result = mysqli_query($db->Link_ID, $sql);\n\n        }\n\n\n        //Aktion auf aktuelle Seite legen\n        $action = $con_side[$idcatside][''link''];\n        //Bearbeitungsformular ausgeben\n        echo "<div align=\\"center\\"><form method=\\"POST\\" action=\\"$action\\"><select name=\\"change_dir_" . $cms_mod[''container''][''id''] . "\\" size=\\"1\\">";\n\n        while ($row = mysqli_fetch_array($result, MYSQLI_ASSOC)) {\n\n            if ($perm->have_perm(0x01, "folder", $row[''iddirectory''])) {\n                if ($mod[''galerie_folder''] == $row[''iddirectory'']) {\n                    echo "<option  selected value=\\"";\n                } else {\n                    echo "<option value=\\"";\n                }\n                echo $row[''iddirectory''];\n                echo "\\">";\n                echo $row[''dirname''];\n                echo "</option>";\n            }\n        }\n        echo "</select>";\n        echo "<input type=\\"submit\\" value=\\"Submit\\">";\n\n        //K√??stchen f√??r Watermark neu Berechnung einf√??gen wenn Watermarkpfad vorhanden\n        if (($mod[''watermark_thumb_id'']) OR ($mod[''watermark_thumb_id''])) {\n            echo "<input type=\\"checkbox\\" name=\\"resample_watermarks\\"> Wasserzeichen neu berechnen?";\n        }\n\n        echo "</form></div>";\n\n\n        unset($cms_side[''edit'']);\n    }\n\n\n} //END-Frontend-Editieren\nelse {\n    //Wenn der Ordner in der Konfiguration eingestellt wird\n    $mod[''galerie_folder''] = "MOD_VALUE[4]";\n}\n\n\n##########################################################################################################################\n// Daten ermitteln\n##########################################################################################################################\n//Ist das Verzeichnis in der Datenbank? False bedeutet ja! Weiter unten in der if schleife wird das nochmal m√?¬∂glichweise nochmal √??berschrieben!\n//Das ist wichtig f√??r das Bearbeiten im Frontend. When false wird die Galerie angezeigt, wenn true bedeutet das, dass der Wert in der DB noch nicht\n//gesetzt ist, was zu einem SQL-Fehler f√??hren w√??rde, der so abgefangen wird!\n$mod[''no_dir''] = false;\n\n\n//diese if-schleife f√??ngt den SQL-Fehler ab wenn im FE noch kein Verzeicnis festgelegt wurde\nif (($mod[''galerie_folder''] == false) AND ($mod[''frontedit''] == true)) {\n    $mod[''error_no_dir''] = "<div align=\\"center\\" class=\\"{font1}\\">Diese Galerie ist noch nicht eingerichtet worden.</div>";\n    $mod[''error_no_dir''] = str_replace("{font1}", "MOD_VALUE[1]", $mod[''error_no_dir'']);\n    echo $mod[''error_no_dir''];\n    $mod[''no_dir''] = true;\n} else {\n    //Mit dieser if-Schleife wird f√??r Unterordner gesorgt und f√??r "Alle Ordner"\n    if (($mod[''galerie_folder''] == false) AND ($mod[''frontedit''] == false)) {\n        $sql = "SELECT A.*, B.dirname\n    FROM " . $cms_db[''upl''] . " as A, " . $cms_db[''directory''] . " as B\n\n    WHERE\n    A.idclient = ''$client''\n    AND\n    A.iddirectory = B.iddirectory\n    AND\n    idfiletype = 3\n    ORDER BY\n    A." . "MOD_VALUE[15]" . " " . "MOD_VALUE[16]";\n    } else {\n        //Unterordner ber√??cksichtigen?\n        if ("MOD_VALUE[26]" == true) {\n\n            //Name des eingestellten Verzeichnisses auslesen\n            $sqlsub = "SELECT A.dirname\n    FROM\n    " . $cms_db[''directory''] . " as A\n    WHERE\n    A.iddirectory=''" . $mod[''galerie_folder''] . "''\n    ORDER BY dirname";\n            $db->query($sqlsub);\n            $db->next_record();\n            $mod[''name_of_galerie_folder''] = $db->f(''dirname'');\n\n            //IDs der Unterordner auslesen\n            $sqlsub = "SELECT A.iddirectory\n    FROM\n    " . $cms_db[''directory''] . " as A\n    WHERE\n    A.idclient=''" . $client . "''\n    AND A.dirname like ''" . $mod[''name_of_galerie_folder''] . "%''";\n            $mod[''sub_dirs''] = mysqli_query($db->Link_ID, $sqlsub);\n\n            //array mit den ids f√??llen\n            $mod[''sub_dirs_ids''] = array();\n            while ($row = mysqli_fetch_array($mod[''sub_dirs''], MYSQLI_ASSOC)) {\n                array_push($mod[''sub_dirs_ids''], "OR B.parentid = " . $row[''iddirectory''] . "");\n            }\n            $mod[''sub_dirs_ids''] = implode(" ", $mod[''sub_dirs_ids'']);\n\n            //SQL Where Abfrage f√??r Unterverzeichnisse f√??llen\n            $mod[''where''] = "(A.iddirectory = " . $mod[''galerie_folder''] . " " . $mod[''sub_dirs_ids''] . ")";\n        } else {\n            $mod[''where''] = "A.iddirectory = " . $mod[''galerie_folder''] . " ";\n        }\n\n        $sql = "SELECT A.*, B.dirname\n    FROM " . $cms_db[''upl''] . " as A, " . $cms_db[''directory''] . " as B\n\n    WHERE\n    " . $mod[''where''] . "\n    AND\n    A.idclient = ''$client''\n    AND\n    A.iddirectory = B.iddirectory\n    ORDER BY\n    A." . "MOD_VALUE[15]" . " " . "MOD_VALUE[16]";\n    }\n\n    $db->query($sql);\n    $i = 0;\n\n    //Anfang von while\n    while ($db->next_record()) {\n        $mod["file"][$i]["title"] = $db->f(''titel'');\n        $mod["file"][$i]["filename"] = $db->f(''filename'');\n        $mod["file"][$i]["idupl"] = $db->f(''idupl'');\n        $mod["file"][$i]["description"] = $db->f(''description'');\n        $mod["file"][$i]["dirname"] = $db->f(''dirname'');\n        $mod["file"][$i]["filesize"] = $db->f(''filesize'');\n        $mod["file"][$i]["width"] = $db->f(''pictwidth'');\n        $mod["file"][$i]["height"] = $db->f(''pictheight'');\n        $mod["file"][$i]["thumbwidth"] = $db->f(''pictthumbwidth'');\n        $mod["file"][$i]["thumbheight"] = $db->f(''pictthumbheight'');\n        ### BEGIN filter  f√??r <order>\n        if (strstr($mod["file"][$i]["description"], "<order>")) {\n            $mod[''order_firstpos''] = strpos($mod["file"][$i]["description"], "<order>") + 7;\n            $mod[''order_lastpos''] = strpos($mod["file"][$i]["description"], "</order>");\n            $mod["file"][$i][''order''] = substr($mod["file"][$i]["description"], $mod[''order_firstpos''],\n                $mod[''order_lastpos''] - $mod[''order_firstpos'']);\n            $mod[''order_tag''] = "<order>" . $mod["file"][$i][''order''] . "</order>";\n            $mod["file"][$i]["description"] = str_replace($mod[''order_tag''], "", $mod["file"][$i]["description"]);\n        } else {\n            $mod["file"][$i][''order''] = "ZZZ";   // wenn keine Reihenfolge definiert, dann hinten dran\n        }\n        ### END filter  f√??r <order>\n\n        ### BEGIN  maximgsize\n        if ("MOD_VALUE[17]" != "") {\n            if (($mod["file"][$i]["width"] > "MOD_VALUE[17]") OR ($mod["file"][$i]["height"] > "MOD_VALUE[17]")) {\n                if ($mod["file"][$i]["width"] > $mod["file"][$i]["height"]) {\n                    $mod["file"][$i]["h_show"] = round($mod["file"][$i]["height"] * "MOD_VALUE[17]" / $mod["file"][$i]["width"]);\n                    $mod["file"][$i]["w_show"] = "MOD_VALUE[17]";\n                } ELSE {\n                    $mod["file"][$i]["w_show"] = round($mod["file"][$i]["width"] * "MOD_VALUE[17]" / $mod["file"][$i]["height"]);\n                    $mod["file"][$i]["h_show"] = "MOD_VALUE[17]";\n                }\n            } ELSE {\n                $mod["file"][$i]["w_show"] = $mod["file"][$i]["width"];\n                $mod["file"][$i]["h_show"] = $mod["file"][$i]["height"];\n            }\n            $mod["file"][$i]["maximgsize"] = "width=\\"" . $mod["file"][$i]["w_show"] . "\\" height=\\"" . $mod["file"][$i]["h_show"] . "\\"";\n        }\n        ### END maximgsize\n        ### BEGIN  maximgsize2\n        if ("MOD_VALUE[21]" != "") {\n            if (($mod["file"][$i]["width"] > "MOD_VALUE[21]") OR ($mod["file"][$i]["height"] > "MOD_VALUE[21]")) {\n                if ($mod["file"][$i]["width"] > $mod["file"][$i]["height"]) {\n                    $mod["file"][$i]["h_show"] = round($mod["file"][$i]["height"] * "MOD_VALUE[21]" / $mod["file"][$i]["width"]);\n                    $mod["file"][$i]["w_show"] = "MOD_VALUE[21]";\n                } ELSE {\n                    $mod["file"][$i]["w_show"] = round($mod["file"][$i]["width"] * "MOD_VALUE[21]" / $mod["file"][$i]["height"]);\n                    $mod["file"][$i]["h_show"] = "MOD_VALUE[21]";\n                }\n            } ELSE {\n                $mod["file"][$i]["w_show"] = $mod["file"][$i]["width"];\n                $mod["file"][$i]["h_show"] = $mod["file"][$i]["height"];\n            }\n            $mod["file"][$i]["maximgsize2"] = "width=\\"" . $mod["file"][$i]["w_show"] . "\\" height=\\"" . $mod["file"][$i]["h_show"] . "\\"";\n        }\n        ### END maximgsize2\n\n        $i++;\n\n        // Ende von while\n    }\n\n    //Ende der if-else-schleife f√??r das Abfangen des SQL-Fehlers bei nicht vergebenem Verzeichnis\n}\n\n\n### BEGIN individual order\nif (MOD_VALUE[15] == "description") {\n    function cmp($a, $b)\n    {\n        return strcmp($a["order"], $b["order"]);\n    }\n\n    function rcmp($a, $b)\n    {\n        return strcmp($b["order"], $a["order"]);\n    }\n\n    if (MOD_VALUE[16] == "ASC") {\n        usort($mod["file"], "cmp");\n    } else {\n        usort($mod["file"], "rcmp");\n    }\n}\n###  // END individual order\n\n\n$i = ($id - 1) * $mod["number_of_pics_per_page"];\n$mod["last_pic"] = $id * $mod["number_of_pics_per_page"];\nif ($mod["last_pic"] > count($mod["file"])) {\n    $mod["last_pic"] = count($mod["file"]);\n}\n\n##########################################################################################################################\n// Galerie-Walker:\n##########################################################################################################################\n\nif (!function_exists(''galeriecreatePageLinks'')) {\n    function galeriecreatePageLinks($isFloating, $separator, $showNavLinks)\n    {\n        global $mod, $cfg_client, $idcatside, $id, $cms_mod;\n        $returnvalue = '''';\n\n        if ($isFloating > 0) {\n            $floatdiff = ceil($isFloating / 2);\n\n            $start = $id - $floatdiff;\n            if ($start > $mod["anz"]) {\n                $start = $mod["anz"] - $floatdiff;\n            }\n            if ($start < 1) {\n                $start = 1;\n            }\n\n            $stop = $id + $floatdiff;\n            if ($stop > $mod["anz"]) {\n                $stop = $mod["anz"];\n            }\n        } else {\n            $start = 1;\n            $stop = $mod["anz"];\n        }\n\n        if ($id > 1 && $showNavLinks == ''true'') {\n            $previd = $id - 1;\n            $returnvalue .= "<a href=\\"" . $mod[''idcatlink''] . "&amp;galerie=" . $cms_mod[''container''][''id''] . "_" . $previd . $mod[''query''] . "\\">MOD_VALUE[13]</a>";\n        }\n\n        for ($mod["pagecounter"] = $start; $mod["pagecounter"] <= $stop; $mod["pagecounter"]++) {\n            if ($mod["pagecounter"] > $start) {\n                $returnvalue .= $separator;\n            }\n            if ($mod["pagecounter"] == $id) {\n                if ("MOD_VALUE[18]" == false) {\n                    $returnvalue .= "<span class=\\"MOD_VALUE[3]\\">[" . $mod["pagecounter"] . "]</span>";\n                } else {\n                    $returnvalue .= "<a href=\\"" . $mod[''idcatlink''] . "&amp;galerie=" . $cms_mod[''container''][''id''] . "_" . $mod["pagecounter"] . $mod[''query''] . "\\"><span class=\\"MOD_VALUE[3]\\">[" . $mod["pagecounter"] . "]</span></a>";\n                }\n            } else {\n                $returnvalue .= "<a href=\\"" . $mod[''idcatlink''] . "&amp;galerie=" . $cms_mod[''container''][''id''] . "_" . $mod["pagecounter"] . $mod[''query''] . "\\"><span class=\\"MOD_VALUE[2]\\">" . $mod["pagecounter"] . "</span></a>";\n            }\n        }\n\n        if ($id < $mod["anz"] && $showNavLinks == ''true'') {\n            $nextid = $id + 1;\n            $returnvalue .= "<a href=\\"" . $mod[''idcatlink''] . "&amp;galerie=" . $cms_mod[''container''][''id''] . "_" . $nextid . $mod[''query''] . "\\">MOD_VALUE[14]</a>";\n        }\n\n        return $returnvalue;\n    }  // end function\n\n} // end if exist\n\n// gesamtanzahl der seiten herausfinden\n$mod["anz"] = ceil(count($mod["file"]) / $mod["number_of_pics_per_page"]);\n\n// wenn mod_value_12 leer ist, default-separator verwenden.\nif ("MOD_VALUE[12]" == "") {\n    $separator = "&nbsp;&nbsp;|&nbsp;&nbsp;";\n} else {\n    $separator = "MOD_VALUE[12]";\n}\n\n// vor/zur√??ck-links anzeigen?\nif ($mod["anz"] > 1) {\n    $mod["walker"] .= galeriecreatePageLinks("MOD_VALUE[11]", $separator, "MOD_VALUE[10]");\n}\n\n##########################################################################################################################\n// Ausgabe\n##########################################################################################################################\nfor ($i; $i < $mod["last_pic"]; $i++) {\n    //\n\n\n    $mod[''temp''] = "MOD_VALUE[9]";\n\n    $mod["file"][$i]["filename"] = trim($mod["file"][$i]["filename"]);\n\n    $mod["file_ext"] = substr(strrchr($mod["file"][$i]["filename"], "."), 1);\n    $mod["filename"] = substr($mod["file"][$i]["filename"], 0, -(strlen($mod["file_ext"])) - 1);\n\n\n    //Wasserzeichen\n\n\n    //Wasserzeichenposition errechnen\n\n    //links oben\n    if ($mod[''watermark_image_location''] == ''lo'') {\n\n    } //mitte oben\n    elseif ($mod[''watermark_image_location''] == ''mo'') {\n        $mod[''watermark_image_positionxx''] = (($mod["file"][$i]["width"] / 2) + ($mod[''watermark_image_positionx'']));\n    } //rechts oben\n    elseif ($mod[''watermark_image_location''] == ''ro'') {\n        $mod[''watermark_image_positionxx''] = ($mod["file"][$i]["width"] + ($mod[''watermark_image_positionx'']));\n    } //links mitte\n    elseif ($mod[''watermark_image_location''] == ''lm'') {\n        $mod[''watermark_image_positionyy''] = (($mod["file"][$i]["height"] / 2) + ($mod[''watermark_image_positiony'']));\n    } //mitte mitte\n    elseif ($mod[''watermark_image_location''] == ''mm'') {\n        $mod[''watermark_image_positionxx''] = (($mod["file"][$i]["width"] / 2) + ($mod[''watermark_image_positionx'']));\n        $mod[''watermark_image_positionyy''] = (($mod["file"][$i]["height"] / 2) + ($mod[''watermark_image_positiony'']));\n    } //rechts mitte\n    elseif ($mod[''watermark_image_location''] == ''rm'') {\n        $mod[''watermark_image_positionxx''] = ($mod["file"][$i]["width"] + ($mod[''watermark_image_positionx'']));\n        $mod[''watermark_image_positionyy''] = (($mod["file"][$i]["height"] / 2) + ($mod[''watermark_image_positiony'']));\n    } //links unten\n    elseif ($mod[''watermark_image_location''] == ''lu'') {\n        $mod[''watermark_image_positionyy''] = ($mod["file"][$i]["height"] + ($mod[''watermark_image_positiony'']));\n    } //mitte unten\n    elseif ($mod[''watermark_image_location''] == ''mu'') {\n        $mod[''watermark_image_positionxx''] = (($mod["file"][$i]["width"] / 2) + ($mod[''watermark_image_positionx'']));\n        $mod[''watermark_image_positionyy''] = ($mod["file"][$i]["height"] + ($mod[''watermark_image_positiony'']));\n    } //rechts unten\n    elseif ($mod[''watermark_image_location''] == ''ru'') {\n        $mod[''watermark_image_positionxx''] = ($mod["file"][$i]["width"] + ($mod[''watermark_image_positionx'']));\n        $mod[''watermark_image_positionyy''] = ($mod["file"][$i]["height"] + ($mod[''watermark_image_positiony'']));\n    }\n\n\n    if ($mod[''watermark_image_id'']) {\n\n        //Bildformat f√??r die Bilder bereitstellen\n        $mod[''watermark_image''] = $mod["file"][$i]["dirname"] . $mod["filename"] . $cfg_client[''thumbext''] . ''_watermark_image.'' . strtolower($mod["file_ext"]);\n\n\n        //If Wasserzeichen ist nicht vorhanden aber Thumb ist vorhanden\n        if ((!@file_exists($cfg_client["upl_path"] . $mod[''watermark_image''])) OR ($resample_watermarks)) {\n            make_watermark_image_galerie($cfg_client["upl_path"] . $mod["file"][$i]["dirname"] . $mod["filename"] . "." . strtolower($mod["file_ext"]),\n                $mod[''watermark_image_path''],\n                $cfg_client["upl_path"] . $mod["file"][$i]["dirname"] . $mod["filename"] . $cfg_client[''thumbext''] . ''_watermark_image.'' . strtolower($mod["file_ext"]),\n                $mod[''watermark_image_positionxx''], $mod[''watermark_image_positionyy''],\n                $mod[''watermark_image_transparent'']);\n            $mod[''temp''] = str_replace("{file}",\n                $mod["filename"] . $cfg_client[''thumbext''] . ''_watermark_image.'' . strtolower($mod["file_ext"]),\n                $mod[''temp'']);\n        } elseif ((strtolower($mod["file_ext"])) == "gif") {\n            $mod[''temp''] = str_replace("{file}", $mod["file"][$i]["filename"], $mod[''temp'']);\n        } else {\n            $mod[''temp''] = str_replace("{file}",\n                $mod["filename"] . $cfg_client[''thumbext''] . ''_watermark_image.'' . strtolower($mod["file_ext"]),\n                $mod[''temp'']);\n        }\n\n\n    } else {\n\n        $mod[''temp''] = str_replace("{file}", $mod["file"][$i]["filename"], $mod[''temp'']);\n\n    }\n\n\n    //filedesc\n    if ($mod["file"][$i]["title"] != "") {\n        $mod["filedesc"] = $mod["file"][$i]["title"];\n    } else {\n        $mod["filedesc"] = $mod["file"][$i]["filename"];\n    }\n    $mod[''temp''] = str_replace("{filedesc}", $mod["filedesc"], $mod[''temp'']);\n\n    //filename\n    $mod[''temp''] = str_replace("{filename}", $mod["filename"], $mod[''temp'']);\n\n    // path\n    $mod[''temp''] = str_replace("{path}", $cfg_client["upl_htmlpath"] . $mod["file"][$i]["dirname"], $mod[''temp'']);\n    $mod[''temp''] = str_replace("{real_path}", $cfg_client["upl_path"] . $mod["file"][$i]["dirname"], $mod[''temp'']);\n\n    // file\n    //$mod[''temp''] = str_replace("{file}", $mod["file"][$i]["filename"] ,$mod[''temp'']);\n\n    // idupl\n    $mod[''temp''] = str_replace("{idupl}", $mod["file"][$i]["idupl"], $mod[''temp'']);\n\n    // filesize\n    $mod[''temp''] = str_replace("{filesize}", round(($mod["file"][$i]["filesize"] / 1024), 1) . " kb", $mod[''temp'']);\n\n    // maximgsize\n    $mod[''temp''] = str_replace("{maximgsize}", $mod["file"][$i]["maximgsize"], $mod[''temp'']);\n\n    // maximgsize2\n    $mod[''temp''] = str_replace("{maximgsize2}", $mod["file"][$i]["maximgsize2"], $mod[''temp'']);\n\n    // width\n    $mod[''temp''] = str_replace("{width}", $mod["file"][$i]["width"], $mod[''temp'']);\n\n    // height\n    $mod[''temp''] = str_replace("{height}", $mod["file"][$i]["height"], $mod[''temp'']);\n\n    // title\n    $mod[''temp''] = str_replace("{title}", $mod["file"][$i]["title"], $mod[''temp'']);\n\n    // desc\n    $mod[''temp''] = str_replace("{description}", $mod["file"][$i]["description"], $mod[''temp'']);\n\n    // detailurl\n    $mod[''temp''] = str_replace("{detailurl}", $mod[''idcatlink''] . "&amp;detailid=" . ($i + 1), $mod[''temp'']);\n\n    // number\n    $mod[''temp''] = str_replace("{number}", $i + 1, $mod[''temp'']);\n\n    ###################################################################################################################\n    #WASSERZEICHENERSTELLUNG\n    ###################################################################################################################\n    //Wasserzeichen f√??r Thumbs erstellen?\n\n\n    //Wasserzeichenposition errechnen\n\n    if (file_exists($cfg_client["upl_path"] . $mod["file"][$i]["dirname"] . $mod["filename"] . $cfg_client[''thumbext''] . "." . strtolower($mod["file_ext"]))) {\n        $mod["thumb_width"] = get_thumb_size(x,\n            $cfg_client["upl_path"] . $mod["file"][$i]["dirname"] . $mod["filename"] . $cfg_client[''thumbext''] . "." . strtolower($mod["file_ext"]));\n        $mod["thumb_height"] = get_thumb_size(y,\n            $cfg_client["upl_path"] . $mod["file"][$i]["dirname"] . $mod["filename"] . $cfg_client[''thumbext''] . "." . strtolower($mod["file_ext"]));\n    } else {\n        $mod["thumb_width"] = $mod["file"][$i]["width"];\n        $mod["thumb_height"] = $mod["file"][$i]["height"];\n    }\n\n    // thumbheight\n    $mod[''temp''] = str_replace("{thumbheight}", $mod["thumb_height"], $mod[''temp'']);\n\n    // thumbwidth\n    $mod[''temp''] = str_replace("{thumbwidth}", $mod["thumb_width"], $mod[''temp'']);\n\n\n    //links oben\n    if ($mod[''watermark_thumb_location''] == ''lo'') {\n\n    } //mitte oben\n    elseif ($mod[''watermark_thumb_location''] == ''mo'') {\n        $mod[''watermark_thumb_positionxx''] = (($mod["thumb_width"] / 2) + ($mod[''watermark_thumb_positionx'']));\n    } //rechts oben\n    elseif ($mod[''watermark_thumb_location''] == ''ro'') {\n        $mod[''watermark_thumb_positionxx''] = ($mod["thumb_width"] + ($mod[''watermark_thumb_positionx'']));\n    } //links mitte\n    elseif ($mod[''watermark_thumb_location''] == ''lm'') {\n        $mod[''watermark_thumb_positionyy''] = (($mod["thumb_height"] / 2) + ($mod[''watermark_thumb_positiony'']));\n    } //mitte mitte\n    elseif ($mod[''watermark_thumb_location''] == ''mm'') {\n        $mod[''watermark_thumb_positionxx''] = (($mod["thumb_width"] / 2) + ($mod[''watermark_thumb_positionx'']));\n        $mod[''watermark_thumb_positionyy''] = (($mod["thumb_height"] / 2) + ($mod[''watermark_thumb_positiony'']));\n    } //rechts mitte\n    elseif ($mod[''watermark_thumb_location''] == ''rm'') {\n        $mod[''watermark_thumb_positionxx''] = ($mod["thumb_width"] + ($mod[''watermark_thumb_positionx'']));\n        $mod[''watermark_thumb_positionyy''] = (($mod["thumb_height"] / 2) + ($mod[''watermark_thumb_positiony'']));\n    } //links unten\n    elseif ($mod[''watermark_thumb_location''] == ''lu'') {\n        $mod[''watermark_thumb_positionyy''] = ($mod["thumb_height"] + ($mod[''watermark_thumb_positiony'']));\n    } //mitte unten\n    elseif ($mod[''watermark_thumb_location''] == ''mu'') {\n        $mod[''watermark_thumb_positionxx''] = (($mod["thumb_width"] / 2) + ($mod[''watermark_thumb_positionx'']));\n        $mod[''watermark_thumb_positionyy''] = ($mod["thumb_height"] + ($mod[''watermark_thumb_positiony'']));\n    } //rechts unten\n    elseif ($mod[''watermark_thumb_location''] == ''ru'') {\n        $mod[''watermark_thumb_positionxx''] = ($mod["thumb_width"] + ($mod[''watermark_thumb_positionx'']));\n        $mod[''watermark_thumb_positionyy''] = ($mod["thumb_height"] + ($mod[''watermark_thumb_positiony'']));\n    }\n\n\n    //Wasserzeichen in Thumbs einf√??gen?\n    if ($mod[''watermark_thumb_id'']) {\n\n\n        //Bildformat f√??r die Thumbs bereitstellen\n        $mod[''watermark_thumb''] = $mod["file"][$i]["dirname"] . $mod["filename"] . $cfg_client[''thumbext''] . ''_watermark_thumb.'' . strtolower($mod["file_ext"]);\n\n\n        //If Wasserzeichen ist nicht vorhanden aber Thumb ist vorhanden\n        if (((!@file_exists($cfg_client["upl_path"] . $mod[''watermark_thumb''])) AND (file_exists($cfg_client["upl_path"] . $mod["file"][$i]["dirname"] . $mod["filename"] . $cfg_client[''thumbext''] . "." . strtolower($mod["file_ext"]))) OR ($resample_watermarks))) {\n\n            make_watermark_image_galerie($cfg_client["upl_path"] . $mod["file"][$i]["dirname"] . $mod["filename"] . $cfg_client[''thumbext''] . "." . strtolower($mod["file_ext"]),\n                $mod[''watermark_thumb_path''],\n                $cfg_client["upl_path"] . $mod["file"][$i]["dirname"] . $mod["filename"] . $cfg_client[''thumbext''] . ''_watermark_thumb.'' . strtolower($mod["file_ext"]),\n                $mod[''watermark_thumb_positionxx''], $mod[''watermark_thumb_positionyy''],\n                $mod[''watermark_thumb_transparent'']);\n            $mod[''temp''] = str_replace("{thumbfile}",\n                $mod["filename"] . $cfg_client[''thumbext''] . ''_watermark_thumb.'' . strtolower($mod["file_ext"]),\n                $mod[''temp'']);\n        } elseif ((strtolower($mod["file_ext"])) == "gif") {\n            $mod[''temp''] = str_replace("{thumbfile}", $mod["file"][$i]["filename"], $mod[''temp'']);\n        } //Elseif Wasserzeichen ist nicht vorhanden und Thumb ist nicht vorhanden\n        elseif (((!@file_exists($cfg_client["upl_path"] . $mod[''watermark_thumb''])) AND (!@file_exists($cfg_client["upl_path"] . $mod["file"][$i]["dirname"] . $mod["filename"] . $cfg_client[''thumbext''] . "." . strtolower($mod["file_ext"]))) OR ($resample_watermarks))) {\n            make_watermark_image_galerie($cfg_client["upl_path"] . $mod["file"][$i]["dirname"] . $mod["filename"] . "." . strtolower($mod["file_ext"]),\n                $mod[''watermark_thumb_path''],\n                $cfg_client["upl_path"] . $mod["file"][$i]["dirname"] . $mod["filename"] . $cfg_client[''thumbext''] . ''_watermark_thumb.'' . strtolower($mod["file_ext"]),\n                $mod[''watermark_thumb_positionxx''], $mod[''watermark_thumb_positionyy''],\n                $mod[''watermark_thumb_transparent'']);\n            $mod[''temp''] = str_replace("{thumbfile}",\n                $mod["filename"] . $cfg_client[''thumbext''] . ''_watermark_thumb.'' . strtolower($mod["file_ext"]),\n                $mod[''temp'']);\n\n\n        } else {\n            $mod[''temp''] = str_replace("{thumbfile}",\n                $mod["filename"] . $cfg_client[''thumbext''] . ''_watermark_thumb.'' . strtolower($mod["file_ext"]),\n                $mod[''temp'']);\n        }\n\n\n    } else {\n\n\n        // thumb\n        if (is_file($cfg_client["upl_path"] . $mod["file"][$i]["dirname"] . $mod["filename"] . $mod["filename_suffix"] . "." . strtolower($mod["file_ext"]))) {\n            $mod[''temp''] = str_replace("{thumbfile}",\n                $mod["filename"] . $mod["filename_suffix"] . "." . strtolower($mod["file_ext"]), $mod[''temp'']);\n        } else {\n            $mod[''temp''] = str_replace("{thumbfile}", $mod["file"][$i]["filename"], $mod[''temp'']);\n        }\n\n    }\n\n\n    // URLencode\n    while (strstr($mod[''temp''], "{urlencode}")) {\n        $mod[''url_firstpos''] = strpos($mod[''temp''], "{urlencode}") + 11;\n        $mod[''url_lastpos''] = strpos($mod[''temp''], "{/urlencode}");\n        $mod[''url''] = substr($mod[''temp''], $mod[''url_firstpos''], $mod[''url_lastpos''] - $mod[''url_firstpos'']);\n        $mod[''url_tag''] = "{urlencode}" . $mod[''url''] . "{/urlencode}";\n        $mod[''url''] = rawurlencode($mod[''url'']);\n        $mod[''temp''] = str_replace($mod[''url_tag''], $mod[''url''], $mod[''temp'']);\n    }\n\n    //\n    $mod[''out''] .= $mod[''temp''];\n\n    //\n    if (((($i + 1) / $mod["break_after_number_of_pics"]) - round((($i + 1) / $mod["break_after_number_of_pics"]),\n                0)) == 0) {\n        $mod[''out''] .= "MOD_VALUE[31] \\n";\n        $mod[''out''] .= "MOD_VALUE[30] \\n";\n    }\n\n}\n\n##########################################################################################################################\n//  Detailansicht Ausgabe\n##########################################################################################################################\n$mod[''dtpl''] = "MOD_VALUE[20]";\n\n//Id der Galerieseite generieren auf der das Bild ist\n$mod[''pic_is_from_page''] = ceil($detailid / $mod["number_of_pics_per_page"]);\n\n//Links im Wlaker\n$mod[''dtplwalker_prev''] = "" . $mod[''idcatlink''] . "&amp;detailid=" . ($detailid - 1) . "";\n$mod[''dtplwalker_prev_first''] = "" . $mod[''idcatlink''] . "&amp;detailid=" . (count($mod["file"])) . "";\n$mod[''dtplwalker_galerie''] = "" . $mod[''idcatlink''] . "&amp;galerie=" . $cms_mod[''container''][''id''] . "_" . $mod[''pic_is_from_page''] . "";\n$mod[''dtplwalker_galeriestart''] = "" . $mod[''idcatlink''] . "";\n$mod[''dtplwalker_next''] = "" . $mod[''idcatlink''] . "&amp;detailid=" . ($detailid + 1) . "";\n$mod[''dtplwalker_next_last''] = "" . $mod[''idcatlink''] . "&amp;detailid=1";\n\n//Tags f√??r die Links ersetzen\n$mod[''dtplwalker_22''] = "MOD_VALUE[22]";\n$mod[''dtplwalker_25''] = "MOD_VALUE[25]";\n$mod[''dtplwalker_23''] = "MOD_VALUE[23]";\n$mod[''dtplwalker_22''] = str_replace("{font1}", "MOD_VALUE[1]", $mod[''dtplwalker_22'']);\n$mod[''dtplwalker_22''] = str_replace("{font2}", "MOD_VALUE[2]", $mod[''dtplwalker_22'']);\n$mod[''dtplwalker_22''] = str_replace("{font3}", "MOD_VALUE[3]", $mod[''dtplwalker_22'']);\n$mod[''dtplwalker_25''] = str_replace("{font1}", "MOD_VALUE[1]", $mod[''dtplwalker_25'']);\n$mod[''dtplwalker_25''] = str_replace("{font2}", "MOD_VALUE[2]", $mod[''dtplwalker_25'']);\n$mod[''dtplwalker_25''] = str_replace("{font3}", "MOD_VALUE[3]", $mod[''dtplwalker_25'']);\n$mod[''dtplwalker_23''] = str_replace("{font1}", "MOD_VALUE[1]", $mod[''dtplwalker_23'']);\n$mod[''dtplwalker_23''] = str_replace("{font2}", "MOD_VALUE[2]", $mod[''dtplwalker_23'']);\n$mod[''dtplwalker_23''] = str_replace("{font3}", "MOD_VALUE[3]", $mod[''dtplwalker_23'']);\n$mod[''dtplwalker_23''] = str_replace("{page_id}", $mod[''pic_is_from_page''], $mod[''dtplwalker_23'']);\n$mod[''dtplwalker_23''] = str_replace("{galerie}", $mod[''dtplwalker_galerie''], $mod[''dtplwalker_23'']);\n$mod[''dtplwalker_23''] = str_replace("{galeriestart}", $mod[''dtplwalker_galeriestart''], $mod[''dtplwalker_23'']);\n$mod[''dtpl''] = str_replace("{galerie}", $mod[''dtplwalker_23''], $mod[''dtpl'']);\n\n$mod[''dtplwalker_prevtag''] = $mod[''dtplwalker_22''];\n$mod[''dtplwalker_nexttag''] = $mod[''dtplwalker_25''];\n$mod[''dtplwalker_nexttag''] = str_replace("{next}", $mod[''dtplwalker_next''], $mod[''dtplwalker_nexttag'']);\n$mod[''dtplwalker_prevtag''] = str_replace("{prev}", $mod[''dtplwalker_prev''], $mod[''dtplwalker_prevtag'']);\n$mod[''dtplwalker_nexttag''] = str_replace("{idupl}", $mod["file"][($detailid)]["idupl"], $mod[''dtplwalker_nexttag'']);\n$mod[''dtplwalker_prevtag''] = str_replace("{idupl}", $mod["file"][($detailid - 2)]["idupl"], $mod[''dtplwalker_prevtag'']);\n\n//Hier wird zwischen zyklisch und endend entschieden\nif ("MOD_VALUE[24]" == "end") //ab hier wenn endend\n\n{\n    //Zur√??ck und Vor nicht anzeigen wenn Anfang oder Ende\n    if ($detailid == 1) {\n        $mod[''dtpl''] = str_replace("{prev}", "", $mod[''dtpl'']);\n        $mod[''dtpl''] = str_replace("{next}", $mod[''dtplwalker_nexttag''], $mod[''dtpl'']);\n    } elseif ($detailid == count($mod["file"])) {\n        $mod[''dtpl''] = str_replace("{prev}", $mod[''dtplwalker_prevtag''], $mod[''dtpl'']);\n        $mod[''dtpl''] = str_replace("{next}", "", $mod[''dtpl'']);\n    } else {\n        $mod[''dtpl''] = str_replace("{prev}", $mod[''dtplwalker_prevtag''], $mod[''dtpl'']);\n        $mod[''dtpl''] = str_replace("{next}", $mod[''dtplwalker_nexttag''], $mod[''dtpl'']);\n    }\n\n    //ab hier wenn zyklisch\n} else {\n    //F√??r erste und letzte Variablen definieren\n    $mod[''dtplwalker_prev_firsttag''] = $mod[''dtplwalker_22''];\n    $mod[''dtplwalker_next_lasttag''] = $mod[''dtplwalker_25''];\n    $mod[''dtplwalker_next_lasttag''] = str_replace("{next}", $mod[''dtplwalker_next_last''],\n        $mod[''dtplwalker_next_lasttag'']);\n    $mod[''dtplwalker_prev_firsttag''] = str_replace("{prev}", $mod[''dtplwalker_prev_first''],\n        $mod[''dtplwalker_prev_firsttag'']);\n    if ($detailid == 1) {\n        $mod[''dtpl''] = str_replace("{prev}", $mod[''dtplwalker_prev_firsttag''], $mod[''dtpl'']);\n        $mod[''dtpl''] = str_replace("{next}", $mod[''dtplwalker_nexttag''], $mod[''dtpl'']);\n    } elseif ($detailid == count($mod["file"])) {\n        $mod[''dtpl''] = str_replace("{prev}", $mod[''dtplwalker_prevtag''], $mod[''dtpl'']);\n        $mod[''dtpl''] = str_replace("{next}", $mod[''dtplwalker_next_lasttag''], $mod[''dtpl'']);\n    } else {\n        $mod[''dtpl''] = str_replace("{prev}", $mod[''dtplwalker_prevtag''], $mod[''dtpl'']);\n        $mod[''dtpl''] = str_replace("{next}", $mod[''dtplwalker_nexttag''], $mod[''dtpl'']);\n    }\n\n}\n\n\n##########################################################################################################################\n//  Templatevariablen ersetzen\n##########################################################################################################################\n//no_dir ist true, wenn im Frontencmst der Ordner noch nicht in die DB geschrieben wurde!\nif ($mod[''no_dir''] == false) {\n    //Galerie-Template\n    $mod[''tpl''] = "MOD_VALUE[8]";\n    $mod[''tpl''] = str_replace("{content}", $mod[''out''], $mod[''tpl'']);\n    $mod[''tpl''] = str_replace("{id}", $id, $mod[''tpl'']);\n    $mod[''tpl''] = str_replace("{walker}", $mod[''walker''], $mod[''tpl'']);\n    $mod[''tpl''] = str_replace("{font1}", "MOD_VALUE[1]", $mod[''tpl'']);\n    $mod[''tpl''] = str_replace("{font2}", "MOD_VALUE[2]", $mod[''tpl'']);\n    $mod[''tpl''] = str_replace("{font3}", "MOD_VALUE[3]", $mod[''tpl'']);\n    $mod[''tpl''] = str_replace("{font4}", "MOD_VALUE[27]", $mod[''tpl'']);\n    $mod[''tpl''] = str_replace("{font5}", "MOD_VALUE[28]", $mod[''tpl'']);\n}\n\n\n//Detailansichts-Template\n$mod[''dtpl''] = str_replace("{pic_id}", $detailid, $mod[''dtpl'']);\n$mod[''dtpl''] = str_replace("{page_id}", $mod[''pic_is_from_page''], $mod[''dtpl'']);\n$mod[''dtpl''] = str_replace("{pic_count}", count($mod["file"]), $mod[''dtpl'']);\n$mod[''dtpl''] = str_replace("{path}", $cfg_client["upl_htmlpath"] . $mod["file"][($detailid - 1)]["dirname"],\n    $mod[''dtpl'']);\n$mod[''dtpl''] = str_replace("{real_path}", $cfg_client["upl_path"] . $mod["file"][($detailid - 1)]["dirname"],\n    $mod[''dtpl'']);\n\n//Normales Bild oder Watermark nutzen?\nif ($mod[''watermark_image_id'']) {\n    $mod["file_ext"] = substr(strrchr($mod["file"][$detailid - 1]["filename"], "."), 1);\n    $mod["filename"] = substr($mod["file"][$detailid - 1]["filename"], 0, -(strlen($mod["file_ext"])) - 1);\n    $mod[''dtpl''] = str_replace("{file}",\n        $mod["filename"] . $cfg_client[''thumbext''] . ''_watermark_image.'' . strtolower($mod["file_ext"]), $mod[''dtpl'']);\n} else {\n    $mod[''dtpl''] = str_replace("{file}", $mod["file"][($detailid - 1)]["filename"], $mod[''dtpl'']);\n}\n$mod[''dtpl''] = str_replace("{idupl}", $mod["file"][($detailid - 1)]["idupl"], $mod[''dtpl'']);\n\n\n$mod[''dtpl''] = str_replace("{font1}", "MOD_VALUE[1]", $mod[''dtpl'']);\n$mod[''dtpl''] = str_replace("{font2}", "MOD_VALUE[2]", $mod[''dtpl'']);\n$mod[''dtpl''] = str_replace("{font3}", "MOD_VALUE[3]", $mod[''dtpl'']);\n$mod[''dtpl''] = str_replace("{font4}", "MOD_VALUE[27]", $mod[''dtpl'']);\n$mod[''dtpl''] = str_replace("{font5}", "MOD_VALUE[28]", $mod[''dtpl'']);\n$mod[''dtpl''] = str_replace("{maximgsize}", $mod["file"][($detailid - 1)]["maximgsize"], $mod[''dtpl'']);\n$mod[''dtpl''] = str_replace("{maximgsize2}", $mod["file"][($detailid - 1)]["maximgsize2"], $mod[''dtpl'']);\n$mod[''dtpl''] = str_replace("{filesize}", round(($mod["file"][($detailid - 1)]["filesize"] / 1024), 1) . " kb",\n    $mod[''dtpl'']);\n$mod[''dtpl''] = str_replace("{width}", $mod["file"][($detailid - 1)]["width"], $mod[''dtpl'']);\n$mod[''dtpl''] = str_replace("{height}", $mod["file"][($detailid - 1)]["height"], $mod[''dtpl'']);\n$mod[''dtpl''] = str_replace("{title}", $mod["file"][($detailid - 1)]["title"], $mod[''dtpl'']);\n$mod[''dtpl''] = str_replace("{description}", $mod["file"][($detailid - 1)]["description"], $mod[''dtpl'']);\n\n$mod["file_ext"] = substr(strrchr($mod["file"][($detailid - 1)]["filename"], "."), 1);\n$mod["filename"] = substr($mod["file"][($detailid - 1)]["filename"], 0, -(strlen($mod["file_ext"])) - 1);\n//filedesc\nif ($mod["file"][($detailid - 1)]["title"] != "") {\n    $mod["filedesc"] = $mod["file"][($detailid - 1)]["title"];\n} else {\n    $mod["filedesc"] = $mod["file"][($detailid - 1)]["filename"];\n}\n$mod[''dtpl''] = str_replace("{filedesc}", $mod["filedesc"], $mod[''dtpl'']);\n$mod[''dtpl''] = str_replace("{filename}", $mod["filename"], $mod[''dtpl'']);\n\n// thumb oder watermark Thumb nutzen\nif ($mod[''watermark_thumb_id'']) {\n\n    if (is_file($cfg_client["upl_path"] . $mod["file"][($detailid - 1)]["dirname"] . $mod["filename"] . $mod["filename_suffix"] . "." . strtolower($mod["file_ext"]))) {\n        $mod[''dtpl''] = str_replace("{thumbfile}",\n            $mod["filename"] . $mod["filename_suffix"] . "_watermark_thumb." . strtolower($mod["file_ext"]),\n            $mod[''dtpl'']);\n    }\n\n} else {\n\n    if (is_file($cfg_client["upl_path"] . $mod["file"][($detailid - 1)]["dirname"] . $mod["filename"] . $mod["filename_suffix"] . "." . strtolower($mod["file_ext"]))) {\n        $mod[''dtpl''] = str_replace("{thumbfile}",\n            $mod["filename"] . $mod["filename_suffix"] . "." . strtolower($mod["file_ext"]), $mod[''dtpl'']);\n    } else {\n        $mod[''dtpl''] = str_replace("{thumbfile}", $mod["file"][($detailid - 1)]["filename"], $mod[''dtpl'']);\n    }\n}\n\n\n//Ausgabe Detail-Template\nif ($detailid) {\n\n    echo $mod[''dtpl''];\n}\n\nif ($mod[''detailid_thumb''] OR !$detailid) {\n    echo $mod[''tpl''];\n}\n\n// VARIABLEN LEEREN\nunset($size);\nunset($id);\nunset($mod);\nunset($detailid);\n</CMSPHP>',`config` = '',`idclient` = 0,`deletable` = 1,`author` = 1,`created` = 1110349542,`lastmodified` = 1509191540,`repository_id` = 'mod:844f16bb5bb7c43344209685afeccea4:76b292e0',`install_sql` = '',`uninstall_sql` = '',`update_sql` = '',`source_id` = 0,`is_install` = '0',`verbose` = '',`checked` = '1' WHERE `cms_mod`.`idmod` = 27;

# update for additional Meta-Tags
ALTER TABLE `cms_side_lang` ADD `meta_other` TEXT NOT NULL default '';

